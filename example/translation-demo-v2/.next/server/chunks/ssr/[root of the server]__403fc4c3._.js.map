{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/vineetagarwal/Development/jigsawstack/translation/translation-demo-v2/components/translationWidget.tsx"],"sourcesContent":["\"use client\";\nimport { useEffect } from \"react\";\nimport TranslationWidget from \"translation-widget\";\n\nexport default function Translation() {\n  useEffect(() => {\n    TranslationWidget(\"pk_08d1531ce8b8514370919b231693f636c19cb94acd4af8584b25bf2154cab4636fc8a990af0060bf7d1a9b9951c2da8b4f9dcecbdf1aa5ea6ffff17d0c150724024GZYEBwvT6YB8tv5Ass\", {\n      showUI: true,\n      pageLanguage: 'en',\n      position: \"top-right\",\n      autoDetectLanguage: false,\n      theme: {\n        baseColor: '',\n        textColor: '',\n      },\n    });\n  }, []);\n\n  return null;\n}"],"names":[],"mappings":";;;AACA;AACA;AAFA;;;AAIe,SAAS;IACtB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,CAAA,GAAA,sJAAA,CAAA,UAAiB,AAAD,EAAE,4JAA4J;YAC5K,QAAQ;YACR,cAAc;YACd,UAAU;YACV,oBAAoB;YACpB,OAAO;gBACL,WAAW;gBACX,WAAW;YACb;QACF;IACF,GAAG,EAAE;IAEL,OAAO;AACT","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///Users/vineetagarwal/Development/jigsawstack/translation/translation-demo-v2/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAQzC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1CJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACO,SAAS,EAAE;;QAIlC;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///Users/vineetagarwal/Development/jigsawstack/translation/translation-demo-v2/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///Users/vineetagarwal/Development/jigsawstack/translation/translation-demo-v2/node_modules/translation-widget/src/lib/translation/index.ts","file:///Users/vineetagarwal/Development/jigsawstack/translation/translation-demo-v2/node_modules/translation-widget/src/constants/languages.ts","file:///Users/vineetagarwal/Development/jigsawstack/translation/translation-demo-v2/node_modules/translation-widget/src/utils/utils.ts","file:///Users/vineetagarwal/Development/jigsawstack/translation/translation-demo-v2/node_modules/translation-widget/src/lib/dom/index.ts","file:///Users/vineetagarwal/Development/jigsawstack/translation/translation-demo-v2/node_modules/translation-widget/src/constants/index.ts","file:///Users/vineetagarwal/Development/jigsawstack/translation/translation-demo-v2/node_modules/translation-widget/src/templates/html/widget.html%3Fraw","file:///Users/vineetagarwal/Development/jigsawstack/translation/translation-demo-v2/node_modules/translation-widget/node_modules/lz-string/libs/lz-string.js","file:///Users/vineetagarwal/Development/jigsawstack/translation/translation-demo-v2/node_modules/translation-widget/src/lib/storage/localstorage.ts","file:///Users/vineetagarwal/Development/jigsawstack/translation/translation-demo-v2/node_modules/translation-widget/src/widget/index.ts","file:///Users/vineetagarwal/Development/jigsawstack/translation/translation-demo-v2/node_modules/translation-widget/src/index.ts"],"sourcesContent":["interface TranslationResponse {\n\ttranslated_text: string | string[];\n\tsource_language?: string;\n\tdetected_language?: string;\n\tconfidence?: number;\n}\n\ninterface TranslationError extends Error {\n\tstatus?: number;\n\tresponse?: Response;\n}\n\ninterface CacheMetrics {\n\thits: number;\n\tmisses: number;\n}\n\nexport class TranslationService {\n\tprivate readonly publicKey: string;\n\tprivate cacheMetrics: CacheMetrics = { hits: 0, misses: 0 };\n\t// Todo: convert this to use sdk instead of api\n\tprivate readonly apiUrl = \"https://api.jigsawstack.com/v1/ai/translate\";\n\n\tconstructor(publicKey: string) {\n\t\tthis.publicKey = publicKey;\n\t}\n\n\tgetCacheMetrics(): CacheMetrics {\n\t\treturn { ...this.cacheMetrics };\n\t}\n\n\tasync translateBatchText(\n\t\ttexts: string[],\n\t\ttargetLang: string,\n\t\tmaxRetries = 2,\n\t\tretryDelay = 100,\n\t): Promise<string[]> {\n\t\tlet attempt = 0;\n\t\twhile (attempt < maxRetries) {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(this.apiUrl, {\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\t\"x-api-key\": this.publicKey,\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\ttext: texts,\n\t\t\t\t\t\ttarget_language: targetLang,\n\t\t\t\t\t}),\n\t\t\t\t});\n\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tconst error: TranslationError = new Error(\n\t\t\t\t\t\t`Error translating text: ${response.statusText}`,\n\t\t\t\t\t);\n\t\t\t\t\terror.status = response.status;\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\tconst result = (await response.json()) as TranslationResponse;\n\t\t\t\tconst translations = Array.isArray(result.translated_text)\n\t\t\t\t\t? result.translated_text\n\t\t\t\t\t: [result.translated_text];\n\n\t\t\t\treturn translations;\n\t\t\t} catch (error) {\n\t\t\t\tattempt++;\n\t\t\t\tif (attempt >= maxRetries) {\n\t\t\t\t\tconsole.error(\"Translation error after retries:\", error);\n\t\t\t\t\treturn texts; // Return original texts on error\n\t\t\t\t}\n\t\t\t\t// Wait before retrying\n\t\t\t\tawait new Promise((res) => setTimeout(res, retryDelay));\n\t\t\t}\n\t\t}\n\t\treturn texts; // Fallback, should not reach here\n\t}\n}\n","import { Language } from \"../types\";\nexport const languages: Language[] = [\n\t{\n\t\tcode: \"af\",\n\t\tname: \"Afrikaans\",\n\t\tnative: \"Afrikaans\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"am\",\n\t\tname: \"Amharic\",\n\t\tnative: \"አማርኛ\",\n\t\twriting_system: \"Ethiopic\",\n\t},\n\t{\n\t\tcode: \"ar\",\n\t\tname: \"Arabic\",\n\t\tnative: \"العربية\",\n\t\trtl: 1,\n\t\twriting_system: \"Arabic\",\n\t},\n\t{\n\t\tcode: \"as\",\n\t\tname: \"Assamese\",\n\t\tnative: \"অসমীয়া\",\n\t\twriting_system: \"Bengali\",\n\t},\n\t{\n\t\tcode: \"az\",\n\t\tname: \"Azerbaijani\",\n\t\tnative: \"Azərbaycanca / آذربايجان\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ba\",\n\t\tname: \"Bashkir\",\n\t\tnative: \"Башҡорт\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"be\",\n\t\tname: \"Belarusian\",\n\t\tnative: \"Беларуская\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"bg\",\n\t\tname: \"Bulgarian\",\n\t\tnative: \"Български\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"bn\",\n\t\tname: \"Bengali\",\n\t\tnative: \"বাংলা\",\n\t\twriting_system: \"Bengali\",\n\t},\n\t{\n\t\tcode: \"bo\",\n\t\tname: \"Tibetan\",\n\t\tnative: \"བོད་ཡིག / Bod skad\",\n\t\twriting_system: \"Tibetan\",\n\t},\n\t{\n\t\tcode: \"br\",\n\t\tname: \"Breton\",\n\t\tnative: \"Brezhoneg\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"bs\",\n\t\tname: \"Bosnian\",\n\t\tnative: \"Bosanski\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ca\",\n\t\tname: \"Catalan\",\n\t\tnative: \"Català\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ch\",\n\t\tname: \"Chamorro\",\n\t\tnative: \"Chamoru\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"co\",\n\t\tname: \"Corsican\",\n\t\tnative: \"Corsu\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"cs\",\n\t\tname: \"Czech\",\n\t\tnative: \"Česky\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"cy\",\n\t\tname: \"Welsh\",\n\t\tnative: \"Cymraeg\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"da\",\n\t\tname: \"Danish\",\n\t\tnative: \"Dansk\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"de\",\n\t\tname: \"German\",\n\t\tnative: \"Deutsch\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"dv\",\n\t\tname: \"Divehi\",\n\t\tnative: \"ދިވެހިބަސް\",\n\t\trtl: 1,\n\t\twriting_system: \"Thaana\",\n\t},\n\t{\n\t\tcode: \"dz\",\n\t\tname: \"Dzongkha\",\n\t\tnative: \"ཇོང་ཁ\",\n\t\twriting_system: \"Tibetan\",\n\t},\n\t{\n\t\tcode: \"el\",\n\t\tname: \"Greek\",\n\t\tnative: \"Ελληνικά\",\n\t\twriting_system: \"Greek\",\n\t},\n\t{\n\t\tcode: \"en\",\n\t\tname: \"English\",\n\t\tnative: \"English\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"eo\",\n\t\tname: \"Esperanto\",\n\t\tnative: \"Esperanto\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"es\",\n\t\tname: \"Spanish\",\n\t\tnative: \"Español\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"et\",\n\t\tname: \"Estonian\",\n\t\tnative: \"Eesti\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"eu\",\n\t\tname: \"Basque\",\n\t\tnative: \"Euskara\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"fa\",\n\t\tname: \"Persian\",\n\t\tnative: \"فارسی\",\n\t\trtl: 1,\n\t\twriting_system: \"Arabic\",\n\t},\n\t{\n\t\tcode: \"ff\",\n\t\tname: \"Peul\",\n\t\tnative: \"Fulfulde\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"fi\",\n\t\tname: \"Finnish\",\n\t\tnative: \"Suomi\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"fj\",\n\t\tname: \"Fijian\",\n\t\tnative: \"Na Vosa Vakaviti\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"fo\",\n\t\tname: \"Faroese\",\n\t\tnative: \"Føroyskt\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"fr\",\n\t\tname: \"French\",\n\t\tnative: \"Français\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"fy\",\n\t\tname: \"West Frisian\",\n\t\tnative: \"Frysk\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ga\",\n\t\tname: \"Irish\",\n\t\tnative: \"Gaeilge\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"gd\",\n\t\tname: \"Scottish Gaelic\",\n\t\tnative: \"Gàidhlig\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"gl\",\n\t\tname: \"Galician\",\n\t\tnative: \"Galego\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"gn\",\n\t\tname: \"Guarani\",\n\t\tnative: \"Avañe'ẽ\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"gu\",\n\t\tname: \"Gujarati\",\n\t\tnative: \"ગુજરાતી\",\n\t\twriting_system: \"Gujarati\",\n\t},\n\t{\n\t\tcode: \"gv\",\n\t\tname: \"Manx\",\n\t\tnative: \"Gaelg\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ha\",\n\t\tname: \"Hausa\",\n\t\tnative: \"هَوُسَ\",\n\t\trtl: 1,\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"he\",\n\t\tname: \"Hebrew\",\n\t\tnative: \"עברית\",\n\t\trtl: 1,\n\t\twriting_system: \"Hebrew\",\n\t},\n\t{\n\t\tcode: \"hi\",\n\t\tname: \"Hindi\",\n\t\tnative: \"हिन्दी\",\n\t\twriting_system: \"Devanagari\",\n\t},\n\t{\n\t\tcode: \"hr\",\n\t\tname: \"Croatian\",\n\t\tnative: \"Hrvatski\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ht\",\n\t\tname: \"Haitian\",\n\t\tnative: \"Krèyol ayisyen\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"hu\",\n\t\tname: \"Hungarian\",\n\t\tnative: \"Magyar\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"hy\",\n\t\tname: \"Armenian\",\n\t\tnative: \"Հայերեն\",\n\t\twriting_system: \"Armenian\",\n\t},\n\t{\n\t\tcode: \"id\",\n\t\tname: \"Indonesian\",\n\t\tnative: \"Bahasa Indonesia\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ig\",\n\t\tname: \"Igbo\",\n\t\tnative: \"Igbo\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"is\",\n\t\tname: \"Icelandic\",\n\t\tnative: \"Íslenska\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"it\",\n\t\tname: \"Italian\",\n\t\tnative: \"Italiano\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"iu\",\n\t\tname: \"Inuktitut\",\n\t\tnative: \"ᐃᓄᒃᑎᑐᑦ\",\n\t\twriting_system: \"Unified Canadian Aboriginal Syllabics\",\n\t},\n\t{\n\t\tcode: \"ja\",\n\t\tname: \"Japanese\",\n\t\tnative: \"日本語\",\n\t\twriting_system: \"Japanese\",\n\t},\n\t{\n\t\tcode: \"jv\",\n\t\tname: \"Javanese\",\n\t\tnative: \"Basa Jawa\",\n\t\twriting_system: \"Javanese\",\n\t},\n\t{\n\t\tcode: \"ka\",\n\t\tname: \"Georgian\",\n\t\tnative: \"ქართული\",\n\t\twriting_system: \"Georgian\",\n\t},\n\t{\n\t\tcode: \"kg\",\n\t\tname: \"Kongo\",\n\t\tnative: \"KiKongo\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ki\",\n\t\tname: \"Kikuyu\",\n\t\tnative: \"Gĩkũyũ\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"kj\",\n\t\tname: \"Kuanyama\",\n\t\tnative: \"Kuanyama\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"kk\",\n\t\tname: \"Kazakh\",\n\t\tnative: \"Қазақша\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"kl\",\n\t\tname: \"Greenlandic\",\n\t\tnative: \"Kalaallisut\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"km\",\n\t\tname: \"Cambodian\",\n\t\tnative: \"ភាសាខ្មែរ\",\n\t\twriting_system: \"Khmer\",\n\t},\n\t{\n\t\tcode: \"kn\",\n\t\tname: \"Kannada\",\n\t\tnative: \"ಕನ್ನಡ\",\n\t\twriting_system: \"Kannada\",\n\t},\n\t{\n\t\tcode: \"ko\",\n\t\tname: \"Korean\",\n\t\tnative: \"한국어\",\n\t\twriting_system: \"Korean\",\n\t},\n\t{\n\t\tcode: \"kr\",\n\t\tname: \"Kanuri\",\n\t\tnative: \"Kanuri\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ks\",\n\t\tname: \"Kashmiri\",\n\t\tnative: \"कश्मीरी / كشميري\",\n\t\trtl: 1,\n\t\twriting_system: \"Arabic\",\n\t},\n\t{\n\t\tcode: \"ku\",\n\t\tname: \"Kurdish\",\n\t\tnative: \"Kurdî / كوردی\",\n\t\trtl: 1,\n\t\twriting_system: \"Arabic\",\n\t},\n\t{\n\t\tcode: \"kv\",\n\t\tname: \"Komi\",\n\t\tnative: \"Коми\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"kw\",\n\t\tname: \"Cornish\",\n\t\tnative: \"Kernewek\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ky\",\n\t\tname: \"Kirghiz\",\n\t\tnative: \"Kırgızca / Кыргызча\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"la\",\n\t\tname: \"Latin\",\n\t\tnative: \"Latina\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"lb\",\n\t\tname: \"Luxembourgish\",\n\t\tnative: \"Lëtzebuergesch\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"lg\",\n\t\tname: \"Ganda\",\n\t\tnative: \"Luganda\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"li\",\n\t\tname: \"Limburgian\",\n\t\tnative: \"Limburgs\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ln\",\n\t\tname: \"Lingala\",\n\t\tnative: \"Lingála\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"lo\",\n\t\tname: \"Laotian\",\n\t\tnative: \"ລາວ / Pha xa lao\",\n\t\twriting_system: \"Lao\",\n\t},\n\t{\n\t\tcode: \"lt\",\n\t\tname: \"Lithuanian\",\n\t\tnative: \"Lietuvių\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"lu\",\n\t\tname: \"Luba-Katanga\",\n\t\tnative: \"Tshiluba\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"lv\",\n\t\tname: \"Latvian\",\n\t\tnative: \"Latviešu\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"mg\",\n\t\tname: \"Malagasy\",\n\t\tnative: \"Malagasy\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"mh\",\n\t\tname: \"Marshallese\",\n\t\tnative: \"Kajin Majel / Ebon\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"mi\",\n\t\tname: \"Maori\",\n\t\tnative: \"Māori\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"mk\",\n\t\tname: \"Macedonian\",\n\t\tnative: \"Македонски\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"ml\",\n\t\tname: \"Malayalam\",\n\t\tnative: \"മലയാളം\",\n\t\twriting_system: \"Malayalam\",\n\t},\n\t{\n\t\tcode: \"mn\",\n\t\tname: \"Mongolian\",\n\t\tnative: \"Монгол\",\n\t\twriting_system: \"Mongolian\",\n\t},\n\t{\n\t\tcode: \"mo\",\n\t\tname: \"Moldovan\",\n\t\tnative: \"Moldovenească\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"mr\",\n\t\tname: \"Marathi\",\n\t\tnative: \"मराठी\",\n\t\twriting_system: \"Devanagari\",\n\t},\n\t{\n\t\tcode: \"ms\",\n\t\tname: \"Malay\",\n\t\tnative: \"Bahasa Melayu\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"mt\",\n\t\tname: \"Maltese\",\n\t\tnative: \"bil-Malti\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"my\",\n\t\tname: \"Burmese\",\n\t\tnative: \"မြန်မာစာ\",\n\t\twriting_system: \"Myanmar\",\n\t},\n\t{\n\t\tcode: \"na\",\n\t\tname: \"Nauruan\",\n\t\tnative: \"Dorerin Naoero\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"nb\",\n\t\tname: \"Norwegian Bokmål\",\n\t\tnative: \"Norsk bokmål\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"nd\",\n\t\tname: \"North Ndebele\",\n\t\tnative: \"Sindebele\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ne\",\n\t\tname: \"Nepali\",\n\t\tnative: \"नेपाली\",\n\t\twriting_system: \"Devanagari\",\n\t},\n\t{\n\t\tcode: \"ng\",\n\t\tname: \"Ndonga\",\n\t\tnative: \"Oshiwambo\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"nl\",\n\t\tname: \"Dutch\",\n\t\tnative: \"Nederlands\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"nn\",\n\t\tname: \"Norwegian Nynorsk\",\n\t\tnative: \"Norsk nynorsk\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"no\",\n\t\tname: \"Norwegian\",\n\t\tnative: \"Norsk\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"nr\",\n\t\tname: \"South Ndebele\",\n\t\tnative: \"isiNdebele\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"nv\",\n\t\tname: \"Navajo\",\n\t\tnative: \"Diné bizaad\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ny\",\n\t\tname: \"Chichewa\",\n\t\tnative: \"Chi-Chewa\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"oc\",\n\t\tname: \"Occitan\",\n\t\tnative: \"Occitan\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"oj\",\n\t\tname: \"Ojibwa\",\n\t\tnative: \"ᐊᓂᔑᓈᐯᒧᐎᓐ / Anishinaabemowin\",\n\t\twriting_system: \"Unified Canadian Aboriginal Syllabics\",\n\t},\n\t{\n\t\tcode: \"om\",\n\t\tname: \"Oromo\",\n\t\tnative: \"Oromoo\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"or\",\n\t\tname: \"Oriya\",\n\t\tnative: \"ଓଡ଼ିଆ\",\n\t\twriting_system: \"Odia\",\n\t},\n\t{\n\t\tcode: \"os\",\n\t\tname: \"Ossetian / Ossetic\",\n\t\tnative: \"Иронау\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"pa\",\n\t\tname: \"Panjabi / Punjabi\",\n\t\tnative: \"ਪੰਜਾਬੀ / पंजाबी / پنجابي\",\n\t\twriting_system: \"Gurmukhi\",\n\t},\n\t{\n\t\tcode: \"pi\",\n\t\tname: \"Pali\",\n\t\tnative: \"Pāli / पाऴि\",\n\t\twriting_system: \"Devanagari\",\n\t},\n\t{\n\t\tcode: \"pl\",\n\t\tname: \"Polish\",\n\t\tnative: \"Polski\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ps\",\n\t\tname: \"Pashto\",\n\t\tnative: \"پښتو\",\n\t\trtl: 1,\n\t\twriting_system: \"Arabic\",\n\t},\n\t{\n\t\tcode: \"pt\",\n\t\tname: \"Portuguese\",\n\t\tnative: \"Português\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"qu\",\n\t\tname: \"Quechua\",\n\t\tnative: \"Runa Simi\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"rm\",\n\t\tname: \"Raeto Romance\",\n\t\tnative: \"Rumantsch\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"rn\",\n\t\tname: \"Kirundi\",\n\t\tnative: \"Kirundi\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ro\",\n\t\tname: \"Romanian\",\n\t\tnative: \"Română\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ru\",\n\t\tname: \"Russian\",\n\t\tnative: \"Русский\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"rw\",\n\t\tname: \"Rwandi\",\n\t\tnative: \"Kinyarwandi\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sa\",\n\t\tname: \"Sanskrit\",\n\t\tnative: \"संस्कृतम्\",\n\t\twriting_system: \"Devanagari\",\n\t},\n\t{\n\t\tcode: \"sc\",\n\t\tname: \"Sardinian\",\n\t\tnative: \"Sardu\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sd\",\n\t\tname: \"Sindhi\",\n\t\tnative: \"सिनधि\",\n\t\twriting_system: \"Arabic\",\n\t},\n\t{\n\t\tcode: \"se\",\n\t\tname: \"Northern Sami\",\n\t\tnative: \"Sámegiella\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sg\",\n\t\tname: \"Sango\",\n\t\tnative: \"Sängö\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sh\",\n\t\tname: \"Serbo-Croatian\",\n\t\tnative: \"Srpskohrvatski / Српскохрватски\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"si\",\n\t\tname: \"Sinhalese\",\n\t\tnative: \"සිංහල\",\n\t\twriting_system: \"Sinhala\",\n\t},\n\t{\n\t\tcode: \"sk\",\n\t\tname: \"Slovak\",\n\t\tnative: \"Slovenčina\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sl\",\n\t\tname: \"Slovenian\",\n\t\tnative: \"Slovenščina\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sm\",\n\t\tname: \"Samoan\",\n\t\tnative: \"Gagana Samoa\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sn\",\n\t\tname: \"Shona\",\n\t\tnative: \"chiShona\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"so\",\n\t\tname: \"Somalia\",\n\t\tnative: \"Soomaaliga\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sq\",\n\t\tname: \"Albanian\",\n\t\tnative: \"Shqip\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sr\",\n\t\tname: \"Serbian\",\n\t\tnative: \"Српски\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"ss\",\n\t\tname: \"Swati\",\n\t\tnative: \"SiSwati\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"st\",\n\t\tname: \"Southern Sotho\",\n\t\tnative: \"Sesotho\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"su\",\n\t\tname: \"Sundanese\",\n\t\tnative: \"Basa Sunda\",\n\t\twriting_system: \"Sundanese\",\n\t},\n\t{\n\t\tcode: \"sv\",\n\t\tname: \"Swedish\",\n\t\tnative: \"Svenska\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sw\",\n\t\tname: \"Swahili\",\n\t\tnative: \"Kiswahili\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ta\",\n\t\tname: \"Tamil\",\n\t\tnative: \"தமிழ்\",\n\t\twriting_system: \"Tamil\",\n\t},\n\t{\n\t\tcode: \"te\",\n\t\tname: \"Telugu\",\n\t\tnative: \"తెలుగు\",\n\t\twriting_system: \"Telugu\",\n\t},\n\t{\n\t\tcode: \"tg\",\n\t\tname: \"Tajik\",\n\t\tnative: \"Тоҷикӣ\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"th\",\n\t\tname: \"Thai\",\n\t\tnative: \"ไทย / Phasa Thai\",\n\t\twriting_system: \"Thai\",\n\t},\n\t{\n\t\tcode: \"ti\",\n\t\tname: \"Tigrinya\",\n\t\tnative: \"ትግርኛ\",\n\t\twriting_system: \"Ethiopic\",\n\t},\n\t{\n\t\tcode: \"tk\",\n\t\tname: \"Turkmen\",\n\t\tnative: \"Туркмен / تركمن\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"tl\",\n\t\tname: \"Tagalog / Filipino\",\n\t\tnative: \"Tagalog\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"tn\",\n\t\tname: \"Tswana\",\n\t\tnative: \"Setswana\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"to\",\n\t\tname: \"Tonga\",\n\t\tnative: \"Lea Faka-Tonga\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"tr\",\n\t\tname: \"Turkish\",\n\t\tnative: \"Türkçe\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ts\",\n\t\tname: \"Tsonga\",\n\t\tnative: \"Xitsonga\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"tt\",\n\t\tname: \"Tatar\",\n\t\tnative: \"Tatarça\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"tw\",\n\t\tname: \"Twi\",\n\t\tnative: \"Twi\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ty\",\n\t\tname: \"Tahitian\",\n\t\tnative: \"Reo Mā`ohi\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ug\",\n\t\tname: \"Uyghur\",\n\t\tnative: \"Uyƣurqə / ئۇيغۇرچە\",\n\t\twriting_system: \"Arabic\",\n\t},\n\t{\n\t\tcode: \"uk\",\n\t\tname: \"Ukrainian\",\n\t\tnative: \"Українська\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"ur\",\n\t\tname: \"Urdu\",\n\t\tnative: \"اردو\",\n\t\trtl: 1,\n\t\twriting_system: \"Arabic\",\n\t},\n\t{\n\t\tcode: \"uz\",\n\t\tname: \"Uzbek\",\n\t\tnative: \"Ўзбек\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ve\",\n\t\tname: \"Venda\",\n\t\tnative: \"Tshivenḓa\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"vi\",\n\t\tname: \"Vietnamese\",\n\t\tnative: \"Tiếng Việt\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"vo\",\n\t\tname: \"Volapük\",\n\t\tnative: \"Volapük\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"wo\",\n\t\tname: \"Wolof\",\n\t\tnative: \"Wollof\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"xh\",\n\t\tname: \"Xhosa\",\n\t\tnative: \"isiXhosa\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"yi\",\n\t\tname: \"Yiddish\",\n\t\tnative: \"ייִדיש\",\n\t\trtl: 1,\n\t\twriting_system: \"Hebrew\",\n\t},\n\t{\n\t\tcode: \"yo\",\n\t\tname: \"Yoruba\",\n\t\tnative: \"Yorùbá\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"zh\",\n\t\tname: \"Chinese (Simplified)\",\n\t\tnative: \"简体中文\",\n\t\twriting_system: \"Simplied Han\",\n\t},\n\t{\n\t\tcode: \"zh-TW\",\n\t\tname: \"Chinese (Traditional)\",\n\t\tnative: \"繁體中文\",\n\t\twriting_system: \"Traditional Han\",\n\t},\n\t{\n\t\tcode: \"zu\",\n\t\tname: \"Zulu\",\n\t\tnative: \"isiZulu\",\n\t\twriting_system: \"Latin\",\n\t},\n];\n","import { languages } from \"../constants/languages\";\nfunction generateHashForContent(nodes: Node[]): string {\n\tconst content = nodes\n\t\t.map((node) => {\n\t\t\tif (node.nodeType === Node.TEXT_NODE) {\n\t\t\t\tconst parent = node.parentElement as HTMLElement | null;\n\t\t\t\t// Use original text if available, else current text\n\t\t\t\tif (parent && parent.hasAttribute(\"data-original-text\")) {\n\t\t\t\t\treturn parent\n\t\t\t\t\t\t.getAttribute(\"data-original-text\")\n\t\t\t\t\t\t?.replace(/\\s+/g, \" \")\n\t\t\t\t\t\t.trim();\n\t\t\t\t}\n\t\t\t\treturn node.textContent\n\t\t\t\t\t?.replace(/\\s+/g, \" \")\n\t\t\t\t\t.trim()\n\t\t\t\t\t.toLocaleLowerCase();\n\t\t\t}\n\t\t})\n\t\t.join(\" \")\n\t\t.trim();\n\n\tconst hash = murmurhash3_32_gc(content.toLowerCase(), 42).toString(16);\n\treturn hash;\n}\n\nfunction murmurhash3_32_gc(key: string, seed: number) {\n\tlet remainder = key.length & 3,\n\t\tbytes = key.length - remainder;\n\tlet h1 = seed,\n\t\tc1 = 0xcc9e2d51,\n\t\tc2 = 0x1b873593;\n\tlet i = 0;\n\n\twhile (i < bytes) {\n\t\tlet k1 =\n\t\t\t(key.charCodeAt(i) & 0xff) |\n\t\t\t((key.charCodeAt(++i) & 0xff) << 8) |\n\t\t\t((key.charCodeAt(++i) & 0xff) << 16) |\n\t\t\t((key.charCodeAt(++i) & 0xff) << 24);\n\t\t++i;\n\n\t\tk1 =\n\t\t\t((k1 & 0xffff) * c1 + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n\t\tk1 = (k1 << 15) | (k1 >>> 17);\n\t\tk1 =\n\t\t\t((k1 & 0xffff) * c2 + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n\n\t\th1 ^= k1;\n\t\th1 = (h1 << 13) | (h1 >>> 19);\n\t\tconst h1b =\n\t\t\t((h1 & 0xffff) * 5 + ((((h1 >>> 16) * 5) & 0xffff) << 16)) & 0xffffffff;\n\t\th1 = (h1b & 0xffff) + 0x6b64 + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16);\n\t}\n\n\tlet k1 = 0;\n\n\tswitch (remainder) {\n\t\t//@ts-expect-error - this is a valid case\n\t\tcase 3:\n\t\t\tk1 ^= key.charCodeAt(i + 2) << 16;\n\t\t//@ts-expect-error - this is a valid case\n\t\tcase 2:\n\t\t\tk1 ^= key.charCodeAt(i + 1) << 8;\n\t\tcase 1:\n\t\t\tk1 ^= key.charCodeAt(i);\n\t\t\tk1 =\n\t\t\t\t((k1 & 0xffff) * c1 + ((((k1 >>> 16) * c1) & 0xffff) << 16)) &\n\t\t\t\t0xffffffff;\n\t\t\tk1 = (k1 << 15) | (k1 >>> 17);\n\t\t\tk1 =\n\t\t\t\t((k1 & 0xffff) * c2 + ((((k1 >>> 16) * c2) & 0xffff) << 16)) &\n\t\t\t\t0xffffffff;\n\t\t\th1 ^= k1;\n\t}\n\n\th1 ^= key.length;\n\th1 ^= h1 >>> 16;\n\th1 =\n\t\t((h1 & 0xffff) * 0x85ebca6b +\n\t\t\t((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) &\n\t\t0xffffffff;\n\th1 ^= h1 >>> 13;\n\th1 =\n\t\t((h1 & 0xffff) * 0xc2b2ae35 +\n\t\t\t((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16)) &\n\t\t0xffffffff;\n\th1 ^= h1 >>> 16;\n\n\treturn h1 >>> 0;\n}\n\nfunction getVisibleTextContent(element: HTMLElement): string {\n\t// Get all child text nodes that are not inside .sr-only or [aria-hidden=\"true\"]\n\tlet text = \"\";\n\telement.childNodes.forEach((node) => {\n\t\tif (\n\t\t\tnode.nodeType === Node.TEXT_NODE &&\n\t\t\t!(\n\t\t\t\telement.classList.contains(\"sr-only\") ||\n\t\t\t\telement.getAttribute(\"aria-hidden\") === \"true\"\n\t\t\t)\n\t\t) {\n\t\t\ttext += node.textContent;\n\t\t}\n\t\tif (\n\t\t\tnode.nodeType === Node.ELEMENT_NODE &&\n\t\t\t!(node as HTMLElement).classList.contains(\"sr-only\") &&\n\t\t\t(node as HTMLElement).getAttribute(\"aria-hidden\") !== \"true\"\n\t\t) {\n\t\t\ttext += getVisibleTextContent(node as HTMLElement);\n\t\t}\n\t});\n\treturn text.trim();\n}\n\nconst removeEmojis = (text: string) =>\n\ttext.replace(/[\\p{Emoji_Presentation}\\p{Extended_Pictographic}]/gu, \"\");\n\nconst getUserLanguage = () => {\n\tconst userLanguages = window.navigator.languages;\n\tconst userLanguage = languages.find((lang) =>\n\t\tuserLanguages.includes(lang.code),\n\t);\n\treturn userLanguage?.code || \"en\";\n};\n\nexport {\n\tgenerateHashForContent,\n\tgetVisibleTextContent,\n\tremoveEmojis,\n\tgetUserLanguage,\n};\n","// type TreeWalkerFilter = (node: Node) => number\n\ninterface NodeProcessor {\n\tacceptNode(node: Node): number;\n}\n\nimport { removeEmojis } from \"../../utils/utils\";\n\nexport class DocumentNavigator {\n\t/**\n\t * Retrieves text nodes eligible for translation from the document\n\t * @returns Collection of text nodes ready for translation\n\t */\n\tstatic findTranslatableContent(): Text[] {\n\t\t// Skip during server-side rendering\n\t\tif (typeof window === \"undefined\") {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst validator: NodeProcessor = {\n\t\t\tacceptNode(node: Node): number {\n\t\t\t\tif (node.nodeType !== Node.TEXT_NODE) {\n\t\t\t\t\t// Log non-text nodes\n\t\t\t\t\treturn NodeFilter.FILTER_REJECT;\n\t\t\t\t}\n\n\t\t\t\tconst container = (node as Text).parentElement;\n\t\t\t\tif (!container) {\n\t\t\t\t\treturn NodeFilter.FILTER_REJECT;\n\t\t\t\t}\n\n\t\t\t\t// Skip if any ancestor has aria-hidden=\"true\"\n\t\t\t\tif (container.closest('[aria-hidden=\"true\"]')) {\n\t\t\t\t\treturn NodeFilter.FILTER_REJECT;\n\t\t\t\t}\n\n\t\t\t\t// // check if the classname is sr-only\n\t\t\t\tif (container.classList.contains(\"sr-only\")) {\n\t\t\t\t\treturn NodeFilter.FILTER_REJECT;\n\t\t\t\t}\n\n\t\t\t\tconst shouldSkip =\n\t\t\t\t\tcontainer.closest(\"script, style, code\") !== null ||\n\t\t\t\t\tcontainer.closest(\"next-route-announcer\") !== null ||\n\t\t\t\t\tcontainer.closest(\".jigts-translation-widget\") !== null ||\n\t\t\t\t\tcontainer.closest(\".jigts-widget-trigger\") !== null ||\n\t\t\t\t\tcontainer.closest(\".jigts-widget-dropdown\") !== null ||\n\t\t\t\t\tcontainer.closest(\".notranslate\") !== null ||\n\t\t\t\t\t!node.textContent?.trim();\n\t\t\t\treturn shouldSkip ? NodeFilter.FILTER_REJECT : NodeFilter.FILTER_ACCEPT;\n\t\t\t},\n\t\t};\n\n\t\tconst navigator = document.createTreeWalker(\n\t\t\tdocument.body,\n\t\t\tNodeFilter.SHOW_TEXT,\n\t\t\tvalidator,\n\t\t);\n\n\t\tconst results: Text[] = [];\n\t\tlet currentNode: Node | null;\n\n\t\twhile ((currentNode = navigator.nextNode())) {\n\t\t\tif (currentNode.nodeType === Node.TEXT_NODE) {\n\t\t\t\tlet text = currentNode.textContent?.trim() || \"\";\n\t\t\t\tconst parentElement = currentNode.parentElement;\n\t\t\t\tif (parentElement) {\n\t\t\t\t\tconst originalText = parentElement.getAttribute(\"data-original-text\");\n\t\t\t\t\tif (originalText) {\n\t\t\t\t\t\ttext = originalText;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * Skip the content if\n\t\t\t\t * 1. the content if empty\n\t\t\t\t * 2. the content is only one character in length\n\t\t\t\t * 3. the content is only an emoji\n\t\t\t\t */\n\t\t\t\tconst textWithoutEmojis = removeEmojis(text);\n\t\t\t\tif (\n\t\t\t\t\ttext.length === 0 ||\n\t\t\t\t\ttext.length === 1 ||\n\t\t\t\t\ttextWithoutEmojis.length === 0\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tresults.push(currentNode as Text);\n\t\t\t}\n\t\t}\n\n\t\treturn results;\n\t}\n\n\t/**\n\t * Divides a collection into smaller groups\n\t * @param items Collection to divide\n\t * @param groupSize Maximum size of each group\n\t * @returns Array of item groups\n\t */\n\tstatic divideIntoGroups<T>(items: T[], groupSize: number): T[][] {\n\t\tconst groups: T[][] = [];\n\n\t\tfor (let i = 0; i < items.length; i += groupSize) {\n\t\t\tgroups.push(items.slice(i, i + groupSize));\n\t\t}\n\n\t\treturn groups;\n\t}\n\n\t/**\n\t * Determines if a node contains translatable text\n\t * @param node Node to evaluate\n\t * @returns Whether the node contains translatable content\n\t */\n\tstatic containsTranslatableContent(node: Node): node is Text {\n\t\tif (node.nodeType !== Node.TEXT_NODE) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst container = node.parentElement;\n\t\tif (!container) {\n\t\t\treturn false;\n\t\t}\n\t\treturn !(\n\t\t\tcontainer.tagName === \"SCRIPT\" ||\n\t\t\tcontainer.tagName === \"STYLE\" ||\n\t\t\tcontainer.tagName === \"CODE\" ||\n\t\t\tcontainer.tagName === \"next-route-announcer\" ||\n\t\t\tcontainer.closest(\".translate-widget\") ||\n\t\t\tcontainer.closest(\".notranslate\") ||\n\t\t\t!node.textContent?.trim()\n\t\t);\n\t}\n\n\t/**\n\t * Retrieves the containing element of a node\n\t * @param node Node to find container for\n\t * @returns Containing element or null if none exists\n\t */\n\tstatic getContainer(node: Node): HTMLElement | null {\n\t\treturn node.parentElement;\n\t}\n}\n","export const MAX_CACHE_SIZE = 1000;\nexport const BATCH_SIZE = 10;\nexport const CACHE_PREFIX = \"jss-\";\n\nexport const DEFAULT_CONFIG = {\n\tpageLanguage: \"en\",\n\tautoDetectLanguage: false,\n\tposition: \"top-right\" as const,\n};\n","export default \"<!-- Widget Trigger Button -->\\n<div class=\\\"jigts-widget-trigger\\\" tabindex=\\\"0\\\" role=\\\"button\\\" aria-label=\\\"Open translation menu\\\" aria-expanded=\\\"false\\\">\\n    <!-- Normal State -->\\n    <div class=\\\"jigts-trigger-content\\\">\\n        <span class=\\\"jigts-trigger-icon\\\">\\n            <svg class=\\\"jigts-languages-icon\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                    d=\\\"M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129\\\">\\n                </path>\\n            </svg>\\n        </span>\\n    </div>\\n\\n    <!-- Loading State (hidden by default) -->\\n    <div class=\\\"jigts-trigger-loading\\\" style=\\\"display: none;\\\">\\n        <div class=\\\"jigts-loading-spinner\\\"></div>\\n    </div>\\n</div>\\n\\n<!-- Dropdown Menu -->\\n<div class=\\\"jigts-widget-dropdown\\\">\\n    <!-- Header -->\\n    <div class=\\\"jigts-dropdown-header\\\">\\n        <div class=\\\"jigts-dropdown-title\\\">\\n            <div class=\\\"jigts-title-left\\\">\\n                <svg class=\\\"jigts-languages-icon\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                        d=\\\"M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129\\\">\\n                    </path>\\n                </svg>\\n                <span class=\\\"jigts-title-text\\\">Select Language</span>\\n            </div>\\n            <div class=\\\"jigts-language-count\\\">{{languageCount}} languages</div>\\n        </div>\\n\\n        <!-- Search Input -->\\n        <div class=\\\"jigts-search-container\\\">\\n            <svg class=\\\"jigts-search-icon\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                    d=\\\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\\\"></path>\\n            </svg>\\n            <input type=\\\"text\\\" class=\\\"jigts-search-input\\\" placeholder=\\\"Search languages...\\\" aria-label=\\\"Search languages\\\">\\n            <svg class=\\\"jigts-clear-search\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\" d=\\\"M6 18L18 6M6 6l12 12\\\">\\n                </path>\\n            </svg>\\n        </div>\\n    </div>\\n\\n    <!-- Reset Option -->\\n    <div class=\\\"jigts-reset-option\\\" tabindex=\\\"0\\\" role=\\\"button\\\" aria-label=\\\"Reset to original language\\\">\\n        <svg class=\\\"jigts-reset-icon\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                d=\\\"M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6\\\"></path>\\n        </svg>\\n        <div class=\\\"jigts-reset-text\\\">\\n            <span class=\\\"jigts-reset-title\\\">Original Language</span>\\n            <span class=\\\"jigts-reset-subtitle\\\">Reset translation</span>\\n        </div>\\n    </div>\\n\\n    <!-- Language List -->\\n    <div class=\\\"jigts-language-list\\\">\\n        {{languageOptions}}\\n        <div class=\\\"jigts-no-results\\\" style=\\\"display: none;\\\">\\n            <svg class=\\\"jigts-no-results-icon\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                    d=\\\"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\\\"></path>\\n            </svg>\\n            <span>No languages found</span>\\n        </div>\\n    </div>\\n</div>\"","// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.5\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n} else if( typeof angular !== 'undefined' && angular != null ) {\n  angular.module('LZString', [])\n  .factory('LZString', function () {\n    return LZString;\n  });\n}\n","import LZString from \"lz-string\";\n\nexport class LocalStorageWrapper {\n\tprivate prefix: string;\n\tprivate readonly COMPRESSION_THRESHOLD = 10000;\n\tprivate readonly COMPRESSION_MARKER = \"__COMPRESSED__\";\n\n\tconstructor(prefix = \"\") {\n\t\tthis.prefix = prefix;\n\t}\n\n\tgetKey(hash: string, url: string, targetLang: string): string {\n\t\t// get rid of query params\n\t\tconst urlWithoutQuery = url.split(\"?\")[0];\n\t\t// Only encode the URL, not the whole key\n\t\treturn `${hash}-${encodeURIComponent(urlWithoutQuery)}-${targetLang}`;\n\t}\n\n\tprivate shouldCompress(value: string): boolean {\n\t\treturn value.length > this.COMPRESSION_THRESHOLD;\n\t}\n\n\tprivate compress(value: string): string {\n\t\ttry {\n\t\t\treturn LZString.compressToBase64(value);\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Compression failed:\", error);\n\t\t\treturn value;\n\t\t}\n\t}\n\n\tprivate decompress(value: string): string {\n\t\ttry {\n\t\t\treturn LZString.decompressFromBase64(value) || value;\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Decompression failed:\", error);\n\t\t\treturn value;\n\t\t}\n\t}\n\n\tgetItem(key: string): any {\n\t\tconst prefixedKey = this.prefix + key;\n\t\tconst item = localStorage.getItem(prefixedKey);\n\t\tif (!item) return null;\n\n\t\ttry {\n\t\t\t// Check if the item is compressed\n\t\t\tconst decompressed = item.startsWith(this.COMPRESSION_MARKER)\n\t\t\t\t? this.decompress(item.slice(this.COMPRESSION_MARKER.length))\n\t\t\t\t: item;\n\t\t\treturn JSON.parse(decompressed);\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Error parsing cached item:\", e);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tsetItem(key: string, value: any): void {\n\t\tconst prefixedKey = this.prefix + key;\n\t\tconst stringified = JSON.stringify(value);\n\n\t\t// Use requestIdleCallback to defer compression if available\n\t\tconst storeValue = () => {\n\t\t\ttry {\n\t\t\t\tconst finalValue = this.shouldCompress(stringified)\n\t\t\t\t\t? `${this.COMPRESSION_MARKER}${this.compress(stringified)}`\n\t\t\t\t\t: stringified;\n\t\t\t\tlocalStorage.setItem(prefixedKey, finalValue);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\"Error storing item:\", error);\n\t\t\t\t// Fallback to storing uncompressed value\n\t\t\t\tlocalStorage.setItem(prefixedKey, stringified);\n\t\t\t}\n\t\t};\n\n\t\tif (typeof requestIdleCallback !== \"undefined\") {\n\t\t\trequestIdleCallback(() => storeValue());\n\t\t} else {\n\t\t\t// Fallback to setTimeout if requestIdleCallback is not available\n\t\t\tsetTimeout(storeValue, 0);\n\t\t}\n\t}\n\n\tremoveItem(key: string): void {\n\t\tconst prefixedKey = this.prefix + key;\n\t\tlocalStorage.removeItem(prefixedKey);\n\t}\n\n\tclear(): void {\n\t\tif (this.prefix) {\n\t\t\tfor (let key in localStorage) {\n\t\t\t\tif (key.startsWith(this.prefix)) {\n\t\t\t\t\tlocalStorage.removeItem(key);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tlocalStorage.clear();\n\t\t}\n\t}\n\n\tkey(index: number): string | null {\n\t\treturn localStorage.key(index);\n\t}\n\n\tget length(): number {\n\t\treturn localStorage.length;\n\t}\n}\n","import { TranslationService } from \"../lib/translation/index\";\nimport { DocumentNavigator } from \"../lib/dom\";\nimport { languages } from \"../constants/languages\";\nimport { BATCH_SIZE, DEFAULT_CONFIG } from \"../constants\";\nimport type { Language, TranslationConfig } from \"../types\";\nimport widgetTemplate from \"../templates/html/widget.html?raw\";\nimport {\n\tgenerateHashForContent,\n\tgetUserLanguage,\n\tremoveEmojis,\n} from \"../utils/utils\";\nimport { CACHE_PREFIX } from \"../constants\";\nimport { LocalStorageWrapper } from \"../lib/storage/localstorage\";\n// import emojiRegex from 'emoji-regex'\ninterface WidgetElements {\n\ttrigger: HTMLDivElement | null;\n\tdropdown: HTMLDivElement | null;\n\tsearchInput: HTMLInputElement | null;\n\tclearSearch: HTMLDivElement | null;\n\tlanguageItems: NodeListOf<HTMLDivElement> | null;\n\tloadingIndicator: HTMLDivElement | null;\n}\n\ninterface TranslationResult {\n\tsuccess: boolean;\n\ttargetLanguage: string;\n\ttranslatedNodes: number;\n\terror?: string;\n\tduration?: number;\n}\n\nexport class TranslationWidget {\n\tprivate config: Required<TranslationConfig>;\n\tprivate translationService: TranslationService;\n\tprivate currentLanguage: string;\n\tprivate widget: HTMLDivElement;\n\tprivate elements: WidgetElements;\n\tprivate autoDetectLanguage: boolean;\n\tprivate isTranslated: boolean = false;\n\tprivate userLanguage: string;\n\tprivate isTranslating: boolean = false;\n\tprivate observer: MutationObserver | null = null;\n\tprivate translationScheduled: boolean = false;\n\tprivate scheduleTimeout: number | null = null;\n\tprivate showUI = true;\n\tprivate lastTranslated: { url: string; lang: string; hash: string } | null = null;\n\tprivate static instance: TranslationWidget | null = null;\n\tprivate currentTranslationPromise: Promise<void> | null = null;\n\tprivate lastRequestedLanguage: string | null = null;\n\tprivate translationRequestId: number = 0;\n\n\tconstructor(publicKey: string, config: Partial<TranslationConfig> = {}) {\n\t\tconst allowedPositions = [\n\t\t\t\"top-right\",\n\t\t\t\"top-left\",\n\t\t\t\"bottom-left\",\n\t\t\t\"bottom-right\",\n\t\t] as const;\n\t\tlet safeConfig = { ...DEFAULT_CONFIG, ...config };\n\t\tif (\n\t\t\tsafeConfig.position &&\n\t\t\t!allowedPositions.includes(safeConfig.position)\n\t\t) {\n\t\t\tconsole.warn(\n\t\t\t\t`Invalid position '${safeConfig.position}' passed to TranslationWidget. Falling back to 'top-right'.`,\n\t\t\t);\n\t\t\tsafeConfig.position = \"top-right\";\n\t\t}\n\t\tthis.config = safeConfig as Required<TranslationConfig>;\n\n\t\tif (!publicKey) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Public key is required to initialize the translation widget\",\n\t\t\t);\n\t\t}\n\n\t\tif (publicKey.startsWith(\"sk_\")) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Please use public api key for security reasons. You can get one from https://jigsawstack.com\",\n\t\t\t);\n\t\t}\n\n\t\tif (!publicKey.startsWith(\"pk_\")) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Please use proper api key. You can get one from https://jigsawstack.com\",\n\t\t\t);\n\t\t}\n\n\t\tthis.translationService = new TranslationService(publicKey);\n\t\tthis.autoDetectLanguage = this.config.autoDetectLanguage || false;\n\t\tthis.currentLanguage = this.config.pageLanguage;\n\t\tthis.userLanguage = getUserLanguage();\n\t\tthis.widget = document.createElement(\"div\");\n\t\tthis.showUI = this.config.showUI ?? true;\n\t\tthis.elements = {\n\t\t\ttrigger: null,\n\t\t\tdropdown: null,\n\t\t\tsearchInput: null,\n\t\t\tclearSearch: null,\n\t\t\tlanguageItems: null,\n\t\t\tloadingIndicator: null,\n\t\t};\n\t\tthis.initialize();\n\t\tTranslationWidget.instance = this;\n\t}\n\n\tprivate initialize(): void {\n\t\tif (!this.validateConfig()) return;\n\n\t\t// Get language from URL parameter\n\n\t\t// Translation Language Preference Checks \n\n\t\t// CASE 1: URL Parameter\n\t\tconst urlLang = this.getUrlParameter(\"lang\");\n\n\n\t\tlet initialLang = this.config.pageLanguage;\n\n\t\t// Priority 1: URL Parameter\n\t\tif (urlLang) {\n\t\t\tconst supportedLang = languages.find((lang) => lang.code === urlLang);\n\t\t\tif (supportedLang) {\n\t\t\t\tinitialLang = urlLang;\n\t\t\t}\n\t\t} else if (localStorage.getItem(\"jss-pref\")) {\n\t\t\tinitialLang = localStorage.getItem(\"jss-pref\") as string;\n\t\t} else if (this.autoDetectLanguage) {\n\t\t\tinitialLang = this.userLanguage;\n\t\t} else if (!this.config.pageLanguage) {\n\t\t\tconst htmlTag = document.querySelector(\"html\");\n\t\t\tif (htmlTag && htmlTag.getAttribute(\"lang\")) {\n\t\t\t\tinitialLang = htmlTag.getAttribute(\"lang\") as string;\n\t\t\t} else {\n\t\t\t\tinitialLang = \"en\";\n\t\t\t}\n\t\t}\n\n\n\t\tthis.currentLanguage = initialLang;\n\t\tif (this.showUI) {\n\t\t\tthis.createWidget();\n\t\t\t// Update icon if not default language\n\t\t\tconst triggerIcon = this.elements.trigger?.querySelector(\n\t\t\t\t\".jigts-trigger-icon\",\n\t\t\t);\n\t\t\tif (triggerIcon && this.currentLanguage !== this.config.pageLanguage) {\n\t\t\t\t// Find the language name\n\t\t\t\tconst langObj = languages.find(\n\t\t\t\t\t(lang) => lang.code === this.currentLanguage,\n\t\t\t\t);\n\t\t\t\tconst langName = langObj\n\t\t\t\t\t? langObj.name\n\t\t\t\t\t: this.currentLanguage.toUpperCase();\n\t\t\t\ttriggerIcon.innerHTML = `<span class=\\\"jigts-lang-code\\\">${this.currentLanguage.toUpperCase()}</span><span class=\\\"jigts-lang-name\\\">${langName}</span>`;\n\t\t\t}\n\t\t\tthis.setupEventListeners();\n\t\t\tthis.setupURLObserver();\n\t\t\tthis.setupContentObserver();\n\t\t}\n\t\t// Trigger translation immediately if language is different from page language\n\t\tif (this.currentLanguage !== this.config.pageLanguage) {\n\t\t\tthis.translatePage(this.currentLanguage).catch((error) => {\n\t\t\t\tconsole.error(\"Initial translation error:\", error);\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate getUrlParameter(name: string): string | null {\n\t\tconst urlParams = new URLSearchParams(window.location.search);\n\t\treturn urlParams.get(name);\n\t}\n\n\tprivate setupContentObserver(): void {\n\t\tthis.observer = new MutationObserver((mutations) => {\n\t\t\tmutations.forEach((mutation) => {\n\t\t\t\tif (this.widget.contains(mutation.target)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tmutation.type === \"characterData\" ||\n\t\t\t\t\t(mutation.type === \"childList\" &&\n\t\t\t\t\t\tArray.from(mutation.addedNodes).some(\n\t\t\t\t\t\t\t(node) => node.nodeType === Node.TEXT_NODE,\n\t\t\t\t\t\t))\n\t\t\t\t) {\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (this.isTranslating) return;\n\t\t\tthis.scheduleTranslation();\n\t\t});\n\t\tthis.observeBody();\n\t}\n\n\tprivate observeBody() {\n\t\tthis.observer?.observe(document.body, {\n\t\t\tchildList: true,\n\t\t\tsubtree: true,\n\t\t\tattributes: true,\n\t\t\tcharacterData: true,\n\t\t});\n\t}\n\n\tprivate onUrlChange = () => {\n\t\tthis.scheduleTranslation();\n\t};\n\n\tprivate setupURLObserver(): void {\n\t\tconst historyMethods = [\"pushState\", \"replaceState\"] as const;\n\n\t\thistoryMethods.forEach((method) => {\n\t\t\tconst original = history[method];\n\t\t\thistory[method] = function (\n\t\t\t\tstate: any,\n\t\t\t\ttitle: string,\n\t\t\t\turl?: string | URL | null,\n\t\t\t) {\n\t\t\t\tconst result = original.call(this, state, title, url);\n\t\t\t\twindow.dispatchEvent(new Event(method));\n\t\t\t\treturn result;\n\t\t\t};\n\t\t\twindow.addEventListener(method, this.onUrlChange);\n\t\t});\n\n\t\t// Also listen for popstate events (browser back/forward)\n\t\twindow.addEventListener(\"popstate\", this.onUrlChange);\n\t}\n\n\tprivate validateConfig(): boolean {\n\t\tif (!this.translationService) {\n\t\t\tconsole.error(\n\t\t\t\t\"Translation service is required to initialize the translation widget\",\n\t\t\t);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate createWidget(): void {\n\t\tconst currentLanguageLabel = this.getCurrentLanguageLabel();\n\n\t\t// Create widget element\n\t\tthis.widget = document.createElement(\"div\");\n\t\tthis.widget.className = `jigts-translation-widget jigts-position-${this.config.position || \"top-right\"}`;\n\n\t\t// Apply theme colors if provided\n\t\tif (this.config.theme) {\n\t\t\tif (this.config.theme.baseColor) {\n\t\t\t\tthis.widget.style.setProperty(\n\t\t\t\t\t\"--jigts-custom-base-color\",\n\t\t\t\t\tthis.config.theme.baseColor,\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (this.config.theme.textColor) {\n\t\t\t\tthis.widget.style.setProperty(\n\t\t\t\t\t\"--jigts-custom-text-color\",\n\t\t\t\t\tthis.config.theme.textColor,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tdocument.body.appendChild(this.widget);\n\n\t\tthis.widget.innerHTML = this.createWidgetHTML(currentLanguageLabel);\n\n\t\t// Cache element references\n\t\tthis.elements = {\n\t\t\ttrigger: this.widget.querySelector<HTMLDivElement>(\n\t\t\t\t\".jigts-widget-trigger\",\n\t\t\t),\n\t\t\tdropdown: this.widget.querySelector<HTMLDivElement>(\n\t\t\t\t\".jigts-widget-dropdown\",\n\t\t\t),\n\t\t\tsearchInput: this.widget.querySelector<HTMLInputElement>(\n\t\t\t\t\".jigts-search-input\",\n\t\t\t),\n\t\t\tclearSearch: this.widget.querySelector<HTMLDivElement>(\n\t\t\t\t\".jigts-clear-search\",\n\t\t\t),\n\t\t\tlanguageItems: this.widget.querySelectorAll<HTMLDivElement>(\n\t\t\t\t\".jigts-language-item\",\n\t\t\t),\n\t\t\tloadingIndicator: this.widget.querySelector<HTMLDivElement>(\n\t\t\t\t\".jigts-loading-spinner\",\n\t\t\t),\n\t\t};\n\n\t\t// Initialize trigger text with fade-in class\n\t\tconst triggerSpan = this.elements.trigger?.querySelector(\"span\");\n\t\tif (triggerSpan) {\n\t\t\ttriggerSpan.classList.add(\"jigts-fade-in\");\n\t\t}\n\t}\n\n\tprivate getCurrentLanguageLabel(): string {\n\t\treturn (\n\t\t\tlanguages.find(\n\t\t\t\t(language: Language) => language.code === this.currentLanguage,\n\t\t\t)?.native || \"English\"\n\t\t);\n\t}\n\n\tprivate createWidgetHTML(currentLanguageLabel: string): string {\n\t\tconst languageOptions = this.createLanguageOptions();\n\t\tconst languageCount = languages.length;\n\t\treturn widgetTemplate\n\t\t\t.replace(\"{{languageOptions}}\", languageOptions)\n\t\t\t.replace(\"{{currentLanguageLabel}}\", currentLanguageLabel)\n\t\t\t.replace(\"{{languageCount}}\", languageCount.toString());\n\t}\n\n\tprivate createLanguageOptions(): string {\n\t\tconst currentLang = this.currentLanguage;\n\t\tconst currentLanguage = languages.find(\n\t\t\t(lang: Language) => lang.code === currentLang,\n\t\t);\n\t\tconst otherLanguages = languages\n\t\t\t.filter((lang: Language) => lang.code !== currentLang)\n\t\t\t.sort((a: Language, b: Language) => a.native.localeCompare(b.native));\n\n\t\tif (!currentLanguage) return \"\";\n\n\t\tconst createLanguageItem = (\n\t\t\tlang: Language,\n\t\t\tisSelected: boolean = false,\n\t\t) => `\n            <div class=\"jigts-language-item ${isSelected ? \"jigts-selected\" : \"\"}\" tabindex=\"0\" role=\"option\" aria-selected=\"${isSelected}\" data-language-code=\"${lang.code}\">\n                <div class=\"jigts-language-info\">\n                    <div class=\"jigts-language-main\">\n                        <span class=\"jigts-language-name\">${lang.name}</span>\n                        <div class=\"jigts-language-code\">${lang.code}</div>\n                    </div>\n                    <div class=\"jigts-language-details\">\n                        <span class=\"jigts-language-native\">${lang.native}</span>\n                    </div>\n                </div>\n                <svg class=\"jigts-check-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path>\n                </svg>\n            </div>\n        `;\n\n\t\treturn `\n            ${createLanguageItem(currentLanguage, true)}\n            ${otherLanguages.map((lang) => createLanguageItem(lang)).join(\"\")}\n        `;\n\t}\n\n\tprivate async updateTriggerText(newText: string): Promise<void> {\n\t\tconst triggerSpan = this.elements.trigger?.querySelector(\"span\");\n\t\tif (!triggerSpan) return;\n\n\t\t// Force a reflow to ensure the animation plays\n\t\ttriggerSpan.offsetHeight;\n\n\t\t// Start fade out\n\t\ttriggerSpan.classList.remove(\"jigts-fade-in\");\n\t\ttriggerSpan.classList.add(\"jigts-fade-out\");\n\n\t\t// Wait for fade out\n\t\tawait new Promise((resolve) => setTimeout(resolve, 300));\n\n\t\t// Update text\n\t\ttriggerSpan.textContent = newText;\n\n\t\t// Force a reflow\n\t\ttriggerSpan.offsetHeight;\n\n\t\t// Start fade in\n\t\ttriggerSpan.classList.remove(\"jigts-fade-out\");\n\t\ttriggerSpan.classList.add(\"jigts-fade-in\");\n\t}\n\n\tprivate getTextToTranslate(\n\t\tnode: Text,\n\t\tparent: HTMLElement,\n\t\ttargetLang: string,\n\t): string | null {\n\t\tif (!parent.hasAttribute(\"data-original-text\")) {\n\t\t\tconst originalText = node.textContent?.trim();\n\t\t\tif (originalText) {\n\t\t\t\tparent.setAttribute(\"data-translated-lang\", targetLang);\n\t\t\t\tparent.setAttribute(\"data-original-text\", originalText);\n\t\t\t\t// Store original font size if not already stored\n\t\t\t\tif (!parent.hasAttribute(\"data-original-font-size\")) {\n\t\t\t\t\tconst computedStyle = window.getComputedStyle(parent);\n\t\t\t\t\tparent.setAttribute(\n\t\t\t\t\t\t\"data-original-font-size\",\n\t\t\t\t\t\tcomputedStyle.fontSize,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn originalText;\n\t\t\t}\n\t\t} else {\n\t\t\tconst textToTranslate = node.textContent?.trim();\n\t\t\tif (this.currentLanguage !== \"en\" && targetLang !== \"en\") {\n\t\t\t\tparent.setAttribute(\"data-translated-lang\", targetLang);\n\t\t\t\treturn parent.getAttribute(\"data-original-text\");\n\t\t\t}\n\t\t\treturn textToTranslate || null;\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate calculateFontSize(\n\t\ttext: string,\n\t\toriginalFontSize: string,\n\t\toriginalText: string,\n\t): string {\n\t\tconst baseFontSize = 12; // Minimum font size in pixels\n\t\tconst maxFontSize = parseInt(originalFontSize); // Maximum font size is the original size\n\t\tconst textLength = text.length;\n\t\tconst originalLength = originalText.length;\n\n\t\t// Only scale down if translated text is longer than original\n\t\tif (textLength <= originalLength) {\n\t\t\treturn originalFontSize;\n\t\t}\n\n\t\t// Calculate font size based on text length\n\t\t// The longer the text, the smaller the font size\n\t\t// We use a logarithmic scale to make the reduction more gradual\n\t\tconst fontSize = Math.max(\n\t\t\tbaseFontSize,\n\t\t\tMath.min(maxFontSize, maxFontSize * (1 - Math.log(textLength) / 10)),\n\t\t);\n\n\t\treturn `${fontSize}px`;\n\t}\n\n\tprivate updateLoadingState(isLoading: boolean): void {\n\t\tconst triggerContent = this.elements.trigger?.querySelector<HTMLDivElement>(\n\t\t\t\".jigts-trigger-content\",\n\t\t);\n\t\tconst triggerLoading = this.elements.trigger?.querySelector<HTMLDivElement>(\n\t\t\t\".jigts-trigger-loading\",\n\t\t);\n\t\tif (triggerContent && triggerLoading) {\n\t\t\tif (isLoading) {\n\t\t\t\ttriggerContent.style.display = \"none\";\n\t\t\t\ttriggerLoading.style.display = \"flex\";\n\t\t\t} else {\n\t\t\t\ttriggerLoading.style.display = \"none\";\n\t\t\t\ttriggerContent.style.display = \"flex\";\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async translatePage(targetLang: string): Promise<void> {\n\t\t// Increment the request ID for each new translation\n\t\tconst requestId = ++this.translationRequestId;\n\t\tthis.lastRequestedLanguage = targetLang;\n\t\tthis.updateLoadingState(true);\n\t\t// If there's already a translation in progress, wait for it\n\t\tif (this.currentTranslationPromise) {\n\t\t\tawait this.currentTranslationPromise;\n\t\t}\n\t\t// If target language is the default page language, restore original text\n\t\tif (targetLang === this.config.pageLanguage) {\n\t\t\tthis.resetTranslations();\n\t\t\t// Only hide loader if this is the latest request\n\t\t\tif (requestId === this.translationRequestId) {\n\t\t\t\tthis.updateLoadingState(false);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t// Create a new promise for this translation\n\t\tthis.currentTranslationPromise = this._translatePage(targetLang);\n\t\ttry {\n\t\t\tawait this.currentTranslationPromise;\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Translation failed:\", error);\n\t\t\t// If translation fails, reset to default language\n\t\t\tthis.resetToDefaultLanguage();\n\t\t} finally {\n\t\t\t// Only hide loader if this is the latest request\n\t\t\tif (requestId === this.translationRequestId) {\n\t\t\t\tthis.currentTranslationPromise = null;\n\t\t\t\tthis.updateLoadingState(false);\n\t\t\t}\n\t\t}\n\t}\n\n\t resetToDefaultLanguage(): void {\n\t\tif( this.isTranslating){\n\t\t\treturn;\n\t\t}\n\t\t// Reset translations\n\t\tthis.resetTranslations();\n\n\t\t// Update language states\n\t\tthis.lastRequestedLanguage = this.config.pageLanguage;\n\t\tthis.currentLanguage = this.config.pageLanguage;\n\n\t\t// Update UI\n\t\tconst languageItems = this.widget.querySelectorAll<HTMLElement>(\n\t\t\t\".jigts-language-item\",\n\t\t);\n\t\tlanguageItems.forEach((item) => {\n\t\t\tconst isSelected =\n\t\t\t\titem.getAttribute(\"data-language-code\") === this.config.pageLanguage;\n\t\t\titem.classList.toggle(\"jigts-selected\", isSelected);\n\t\t\titem.setAttribute(\"aria-selected\", isSelected.toString());\n\t\t});\n\n\t\t// Update localStorage preference to original language\n\t\tconsole.log(\"resetToDefaultLanguage\", this.config.pageLanguage);\n\t\tlocalStorage.setItem(\"jss-pref\", this.config.pageLanguage);\n\n\t\t// Update trigger icon\n\t\tconst triggerIcon = this.elements.trigger?.querySelector(\n\t\t\t\".jigts-trigger-icon\",\n\t\t);\n\t\tif (triggerIcon) {\n\t\t\ttriggerIcon.innerHTML = this.getLanguageSVG();\n\t\t}\n\n\t\t// Update translation state\n\t\tthis.isTranslated = false;\n\t\tthis.updateResetButtonVisibility();\n\t}\n\n\tprivate async _translatePage(targetLang: string): Promise<void> {\n\t\tthis.isTranslating = true;\n\t\tthis.observer?.disconnect(); // Pause observing during translation\n\t\ttry {\n\t\t\tconst nodes = DocumentNavigator.findTranslatableContent();\n\t\t\tconst batches = DocumentNavigator.divideIntoGroups(nodes, BATCH_SIZE);\n\n\t\t\tconst cache = new LocalStorageWrapper(CACHE_PREFIX);\n\t\t\tlet hash = generateHashForContent(nodes);\n\t\t\t// Store all nodes and their corresponding texts for each batch\n\t\t\tconst allBatchNodes: Node[][] = [];\n\t\t\tconst allBatchTexts: string[][] = [];\n\n\t\t\t// Prepare batches\n\t\t\tbatches.forEach((batch) => {\n\t\t\t\tconst textsToTranslate: string[] = [];\n\t\t\t\tconst batchNodes: Node[] = [];\n\t\t\t\tbatch.forEach((node: Node) => {\n\t\t\t\t\tif (node.nodeType !== Node.TEXT_NODE) return;\n\t\t\t\t\tconst parent = node.parentElement;\n\t\t\t\t\tif (!parent) return;\n\n\t\t\t\t\tconst translatedLang = parent.getAttribute(\"data-translated-lang\");\n\n\t\t\t\t\t// Skip if parent already has data-original-text and we're not translating to English\n\t\t\t\t\tif (\n\t\t\t\t\t\tparent.hasAttribute(\"data-original-text\") &&\n\t\t\t\t\t\ttargetLang === translatedLang\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet textToTranslate = this.getTextToTranslate(\n\t\t\t\t\t\tnode as Text,\n\t\t\t\t\t\tparent,\n\t\t\t\t\t\ttargetLang,\n\t\t\t\t\t);\n\t\t\t\t\ttextToTranslate = removeEmojis(textToTranslate || \"\");\n\t\t\t\t\tif (textToTranslate.length === 0 || textToTranslate.length === 1) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (textToTranslate) {\n\t\t\t\t\t\ttextsToTranslate.push(textToTranslate.trim());\n\t\t\t\t\t\tbatchNodes.push(node);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tallBatchNodes.push(batchNodes);\n\t\t\t\tallBatchTexts.push(textsToTranslate);\n\t\t\t});\n\n\t\t\t// Only keep non-empty batches\n\t\t\tconst nonEmptyBatchNodes: Node[][] = [];\n\t\t\tconst nonEmptyBatchTexts: string[][] = [];\n\t\t\tallBatchTexts.forEach((texts, i) => {\n\t\t\t\tif (texts.length > 0) {\n\t\t\t\t\tnonEmptyBatchTexts.push(texts);\n\t\t\t\t\tnonEmptyBatchNodes.push(allBatchNodes[i]);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst key = cache.getKey(hash, window.location.href, targetLang);\n\t\t\tconst cachedTranslations = cache.getItem(key);\n\t\t\tif (cachedTranslations && cachedTranslations[0]) {\n\t\t\t\tconst fullTranslations = cachedTranslations[0];\n\t\t\t\t// Only update DOM if this is still the most recently requested language\n\t\t\t\tif (this.lastRequestedLanguage === targetLang) {\n\t\t\t\t\tnodes.forEach((node, idx) => {\n\t\t\t\t\t\tif (node.nodeType === Node.TEXT_NODE) {\n\t\t\t\t\t\t\tconst parent = node.parentElement;\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tconst originalText =\n\t\t\t\t\t\t\t\t\tparent.getAttribute(\"data-original-text\") || \"\";\n\t\t\t\t\t\t\t\tconst originalFontSize =\n\t\t\t\t\t\t\t\t\tparent.getAttribute(\"data-original-font-size\") || \"16px\";\n\t\t\t\t\t\t\t\tconst newFontSize = this.calculateFontSize(\n\t\t\t\t\t\t\t\t\tfullTranslations[idx],\n\t\t\t\t\t\t\t\t\toriginalFontSize,\n\t\t\t\t\t\t\t\t\toriginalText,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tparent.style.fontSize = newFontSize;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnode.textContent = fullTranslations[idx];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tthis.isTranslated = true;\n\t\t\t\t\tthis.updateResetButtonVisibility();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Send all batch requests in parallel\n\t\t\tconst allTranslatedTexts = await Promise.all(\n\t\t\t\tnonEmptyBatchTexts.map((texts) =>\n\t\t\t\t\tthis.translationService.translateBatchText(texts, targetLang),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tif (allTranslatedTexts.length === 0) {\n\t\t\t\tif (this.lastRequestedLanguage === targetLang) {\n\t\t\t\t\tthis.isTranslated = true;\n\t\t\t\t\tthis.updateResetButtonVisibility();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Check if all batches failed (returned original texts)\n\t\t\tconst allBatchesFailed = allTranslatedTexts.every(\n\t\t\t\t(translations, batchIndex) => {\n\t\t\t\t\tconst originalTexts = nonEmptyBatchTexts[batchIndex];\n\t\t\t\t\treturn translations.every(\n\t\t\t\t\t\t(translation, index) => translation === originalTexts[index],\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tif (allBatchesFailed) {\n\t\t\t\tconsole.warn(\"All translations failed, not caching results\");\n\t\t\t\tthrow new Error(\"All translation batches failed\");\n\t\t\t}\n\n\t\t\t// Build a full translation array for all nodes\n\t\t\tconst fullTranslations: string[] = [];\n\t\t\tnodes.forEach((node, nodeIdx) => {\n\t\t\t\tconst parent = node.parentElement as HTMLElement | null;\n\t\t\t\t// Check if this node was included in the API call\n\t\t\t\tconst batchIdx = nonEmptyBatchNodes.findIndex((batch) =>\n\t\t\t\t\tbatch.includes(node),\n\t\t\t\t);\n\t\t\t\tif (batchIdx !== -1) {\n\t\t\t\t\t// This node was translated in this batch\n\t\t\t\t\tconst textIdx = nonEmptyBatchNodes[batchIdx].indexOf(node);\n\t\t\t\t\tconst translatedText = allTranslatedTexts[batchIdx][textIdx];\n\t\t\t\t\tfullTranslations[nodeIdx] = translatedText;\n\n\t\t\t\t\tconsole.log(this.lastRequestedLanguage, targetLang);\n\t\t\t\t\t// Only update DOM if this is still the most recently requested language\n\t\t\t\t\tif (this.lastRequestedLanguage === targetLang) {\n\t\t\t\t\t\t// Apply font size adjustment\n\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\tconst originalText =\n\t\t\t\t\t\t\t\tparent.getAttribute(\"data-original-text\") || \"\";\n\t\t\t\t\t\t\tconst originalFontSize =\n\t\t\t\t\t\t\t\tparent.getAttribute(\"data-original-font-size\") || \"16px\";\n\t\t\t\t\t\t\tconst newFontSize = this.calculateFontSize(\n\t\t\t\t\t\t\t\ttranslatedText,\n\t\t\t\t\t\t\t\toriginalFontSize,\n\t\t\t\t\t\t\t\toriginalText,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tparent.style.fontSize = newFontSize;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnode.textContent = translatedText;\n\t\t\t\t\t}\n\t\t\t\t} else if (\n\t\t\t\t\tparent &&\n\t\t\t\t\tparent.getAttribute(\"data-translated-lang\") === targetLang\n\t\t\t\t) {\n\t\t\t\t\t// Already translated, use current text\n\t\t\t\t\tfullTranslations[nodeIdx] = node.textContent || \"\";\n\t\t\t\t} else {\n\t\t\t\t\tfullTranslations[nodeIdx] = node.textContent || \"\";\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Always cache the translations, even if they're not the most recent\n\t\t\tcache.setItem(key, [fullTranslations]);\n\n\t\t\t// Only update UI state if this is still the most recently requested language\n\t\t\tif (this.lastRequestedLanguage === targetLang) {\n\t\t\t\tthis.isTranslated = true;\n\t\t\t\tthis.updateResetButtonVisibility();\n\t\t\t}\n\t\t} finally {\n\t\t\tthis.isTranslating = false;\n\t\t\tthis.observeBody(); // Resume observing after translation\n\t\t}\n\t}\n\n\tprivate updateResetButtonVisibility(): void {\n\t\tconst resetButton = this.widget.querySelector<HTMLElement>(\n\t\t\t\".jigts-reset-option\",\n\t\t);\n\t\tif (resetButton) {\n\t\t\tresetButton.style.display = this.isTranslated ? \"flex\" : \"none\";\n\t\t}\n\t}\n\n\tprivate resetTranslations(): void {\n\t\t\n\t\tif (this.observer) {\n\t\t\tthis.observer.disconnect();\n\t\t}\n\t\tconst elements = document.querySelectorAll<HTMLElement>(\n\t\t\t\"[data-original-text]\",\n\t\t);\n\t\telements.forEach((element) => {\n\t\t\tconst textNodes = Array.from(element.childNodes).filter(\n\t\t\t\t(node): node is Text => node.nodeType === Node.TEXT_NODE,\n\t\t\t);\n\t\t\tif (textNodes.length > 0) {\n\t\t\t\tconst originalText = element.getAttribute(\"data-original-text\");\n\t\t\t\tif (originalText) {\n\t\t\t\t\ttextNodes[0].textContent = originalText;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Restore original font size\n\t\t\tconst originalFontSize = element.getAttribute(\"data-original-font-size\");\n\t\t\tif (originalFontSize) {\n\t\t\t\telement.style.fontSize = originalFontSize;\n\t\t\t}\n\t\t\telement.removeAttribute(\"data-original-text\");\n\t\t\telement.removeAttribute(\"data-translated-lang\");\n\t\t\telement.removeAttribute(\"data-original-font-size\");\n\t\t});\n\t\tthis.isTranslated = false;\n\n\t\tthis.currentLanguage = this.config.pageLanguage;\n\t\t// Update lastTranslated to reflect the reset state\n\t\tconst nodes = DocumentNavigator.findTranslatableContent();\n\t\tconst hash = generateHashForContent(nodes);\n\t\tthis.lastTranslated = {\n\t\t\turl: window.location.href,\n\t\t\tlang: this.config.pageLanguage,\n\t\t\thash,\n\t\t};\n\n\t\tthis.updateResetButtonVisibility();\n\t\tthis.observeBody(); // Reconnect observer\n\t}\n\n\tprivate adjustDropdownPosition(): void {\n\t\tconst { dropdown, trigger } = this.elements;\n\t\tif (!dropdown || !trigger) return;\n\n\t\tconst triggerRect = trigger.getBoundingClientRect();\n\t\tconst dropdownRect = dropdown.getBoundingClientRect();\n\t\tconst viewportWidth = window.innerWidth;\n\t\tconst viewportHeight = window.innerHeight;\n\n\t\tdropdown.style.top = \"\";\n\t\tdropdown.style.bottom = \"\";\n\t\tdropdown.style.left = \"\";\n\t\tdropdown.style.right = \"\";\n\t\tdropdown.style.transform = \"\";\n\n\t\tconst spaceBelow = viewportHeight - triggerRect.bottom;\n\t\tconst spaceAbove = triggerRect.top;\n\t\tconst spaceRight = viewportWidth - triggerRect.right;\n\t\tconst spaceLeft = triggerRect.left;\n\n\t\t// Determine vertical position\n\t\tif (spaceBelow < dropdownRect.height && spaceAbove > spaceBelow) {\n\t\t\tdropdown.style.bottom = \"100%\";\n\t\t\tdropdown.style.top = \"auto\";\n\t\t\tdropdown.style.marginBottom = \"0.5rem\";\n\t\t\tdropdown.style.marginTop = \"0\";\n\t\t} else {\n\t\t\tdropdown.style.top = \"100%\";\n\t\t\tdropdown.style.bottom = \"auto\";\n\t\t\tdropdown.style.marginTop = \"0.5rem\";\n\t\t\tdropdown.style.marginBottom = \"0\";\n\t\t}\n\n\t\t// Determine horizontal position\n\t\tif (spaceRight < dropdownRect.width && spaceLeft > spaceRight) {\n\t\t\tdropdown.style.right = \"0\";\n\t\t\tdropdown.style.left = \"auto\";\n\t\t} else {\n\t\t\tdropdown.style.left = \"0\";\n\t\t\tdropdown.style.right = \"auto\";\n\t\t}\n\n\t\tconst finalRect = dropdown.getBoundingClientRect();\n\n\t\tif (finalRect.right > viewportWidth) {\n\t\t\tdropdown.style.right = \"0\";\n\t\t\tdropdown.style.left = \"auto\";\n\t\t}\n\n\t\tif (finalRect.left < 0) {\n\t\t\tdropdown.style.left = \"0\";\n\t\t\tdropdown.style.right = \"auto\";\n\t\t}\n\t}\n\n\tprivate setupEventListeners(): void {\n\t\tconst { trigger, dropdown, searchInput, clearSearch, languageItems } =\n\t\t\tthis.elements;\n\n\t\tif (\n\t\t\t!trigger ||\n\t\t\t!dropdown ||\n\t\t\t!searchInput ||\n\t\t\t!clearSearch ||\n\t\t\t!languageItems\n\t\t) {\n\t\t\tconsole.error(\"Failed to find required elements\");\n\t\t\treturn;\n\t\t}\n\n\t\t// Reset button functionality\n\t\tconst resetButton = this.widget.querySelector<HTMLElement>(\n\t\t\t\".jigts-reset-option\",\n\t\t);\n\t\tif (resetButton) {\n\t\t\tresetButton.addEventListener(\"click\", () => {\n\t\t\t\tif (this.isTranslating) return;\n\t\t\t\tthis.resetToDefaultLanguage();\n\t\t\t\tresetButton.classList.remove(\"jigts-active\");\n\t\t\t\tthis.isTranslated = false;\n\t\t\t\tthis.updateResetButtonVisibility();\n\t\t\t\t// Reset language selector to page language\n\t\t\t\tconst languageItems = this.widget.querySelectorAll<HTMLElement>(\n\t\t\t\t\t\".jigts-language-item\",\n\t\t\t\t);\n\t\t\t\tlanguageItems.forEach((item) => {\n\t\t\t\t\tconst isSelected =\n\t\t\t\t\t\titem.getAttribute(\"data-language-code\") ===\n\t\t\t\t\t\tthis.config.pageLanguage;\n\t\t\t\t\titem.classList.toggle(\"jigts-selected\", isSelected);\n\t\t\t\t\titem.setAttribute(\"aria-selected\", isSelected.toString());\n\t\t\t\t});\n\t\t\t\t// Restore SVG icon\n\t\t\t\tconst triggerIcon = this.elements.trigger?.querySelector(\n\t\t\t\t\t\".jigts-trigger-icon\",\n\t\t\t\t);\n\t\t\t\tif (triggerIcon) {\n\t\t\t\t\ttriggerIcon.innerHTML = this.getLanguageSVG();\n\t\t\t\t}\n\t\t\t\t// Close dropdown\n\t\t\t\tdropdown.classList.remove(\"jigts-open\");\n\t\t\t\ttrigger.setAttribute(\"aria-expanded\", \"false\");\n\t\t\t\t// Remove has-translation class\n\t\t\t\tconst triggerContent = trigger.querySelector<HTMLDivElement>(\n\t\t\t\t\t\".jigts-trigger-content\",\n\t\t\t\t);\n\t\t\t\tif (triggerContent)\n\t\t\t\t\ttriggerContent.classList.remove(\"jigts-has-translation\");\n\t\t\t});\n\t\t}\n\n\t\tthis.updateResetButtonVisibility();\n\n\t\ttrigger.addEventListener(\"click\", () => {\n\t\t\tdropdown.classList.toggle(\"jigts-open\");\n\t\t\tconst isOpen = dropdown.classList.contains(\"jigts-open\");\n\t\t\ttrigger.setAttribute(\"aria-expanded\", isOpen.toString());\n\t\t\tif (isOpen) {\n\t\t\t\tthis.adjustDropdownPosition();\n\t\t\t\tsearchInput.focus();\n\t\t\t}\n\t\t});\n\n\t\twindow.addEventListener(\"resize\", () => {\n\t\t\tif (dropdown.classList.contains(\"jigts-open\")) {\n\t\t\t\tthis.adjustDropdownPosition();\n\t\t\t}\n\t\t});\n\n\t\tdocument.addEventListener(\"click\", (e: MouseEvent) => {\n\t\t\tif (!(e.target as Element).closest(\".jigts-translation-widget\")) {\n\t\t\t\tif (dropdown.classList.contains(\"jigts-open\")) {\n\t\t\t\t\tdropdown.classList.add(\"jigts-closing\");\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tdropdown.classList.remove(\"jigts-open\", \"jigts-closing\");\n\t\t\t\t\t\ttrigger.setAttribute(\"aria-expanded\", \"false\");\n\t\t\t\t\t}, 300);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tsearchInput.addEventListener(\"input\", () => {\n\t\t\tconst searchTerm = searchInput.value.toLowerCase();\n\t\t\tconst hasValue = searchTerm.length > 0;\n\t\t\tclearSearch.classList.toggle(\"jigts-visible\", hasValue);\n\n\t\t\tconst items = this.widget.querySelectorAll<HTMLElement>(\n\t\t\t\t\".jigts-language-item\",\n\t\t\t);\n\t\t\tconst noResults =\n\t\t\t\tthis.widget.querySelector<HTMLElement>(\".jigts-no-results\");\n\t\t\tlet visibleCount = 0;\n\n\t\t\titems.forEach((item) => {\n\t\t\t\tconst name =\n\t\t\t\t\titem\n\t\t\t\t\t\t.querySelector(\".jigts-language-name\")\n\t\t\t\t\t\t?.textContent?.toLowerCase() || \"\";\n\t\t\t\tconst native =\n\t\t\t\t\titem\n\t\t\t\t\t\t.querySelector(\".jigts-language-native\")\n\t\t\t\t\t\t?.textContent?.toLowerCase() || \"\";\n\t\t\t\tconst code =\n\t\t\t\t\titem\n\t\t\t\t\t\t.querySelector(\".jigts-language-code\")\n\t\t\t\t\t\t?.textContent?.toLowerCase() || \"\";\n\t\t\t\tconst region =\n\t\t\t\t\titem\n\t\t\t\t\t\t.querySelector(\".jigts-language-region\")\n\t\t\t\t\t\t?.textContent?.toLowerCase() || \"\";\n\n\t\t\t\tconst matches =\n\t\t\t\t\tname.includes(searchTerm) ||\n\t\t\t\t\tnative.includes(searchTerm) ||\n\t\t\t\t\tcode.includes(searchTerm) ||\n\t\t\t\t\tregion.includes(searchTerm);\n\n\t\t\t\titem.style.display = matches ? \"\" : \"none\";\n\t\t\t\tif (matches) visibleCount++;\n\t\t\t});\n\n\t\t\tif (noResults) {\n\t\t\t\tnoResults.style.display = visibleCount === 0 ? \"flex\" : \"none\";\n\t\t\t}\n\t\t});\n\n\t\tclearSearch.addEventListener(\"click\", () => {\n\t\t\tsearchInput.value = \"\";\n\t\t\tclearSearch.classList.remove(\"jigts-visible\");\n\t\t\tsearchInput.focus();\n\n\t\t\tconst items = this.widget.querySelectorAll<HTMLElement>(\n\t\t\t\t\".jigts-language-item\",\n\t\t\t);\n\t\t\tconst noResults =\n\t\t\t\tthis.widget.querySelector<HTMLElement>(\".jigts-no-results\");\n\n\t\t\titems.forEach((item) => {\n\t\t\t\titem.style.display = \"\";\n\t\t\t});\n\n\t\t\tif (noResults) {\n\t\t\t\tnoResults.style.display = \"none\";\n\t\t\t}\n\t\t});\n\n\t\tlanguageItems.forEach((item) => {\n\t\t\titem.addEventListener(\"click\", async () => {\n\t\t\t\tlanguageItems.forEach((i) => {\n\t\t\t\t\ti.classList.remove(\"jigts-selected\");\n\t\t\t\t\ti.setAttribute(\"aria-selected\", \"false\");\n\t\t\t\t});\n\n\t\t\t\titem.classList.add(\"jigts-selected\");\n\t\t\t\titem.setAttribute(\"aria-selected\", \"true\");\n\n\t\t\t\tconst langName = item.querySelector(\n\t\t\t\t\t\".jigts-language-name\",\n\t\t\t\t)?.textContent;\n\t\t\t\tconst langCode = item.getAttribute(\"data-language-code\");\n\n\t\t\t\t// Close dropdown immediately\n\t\t\t\tdropdown.classList.remove(\"jigts-open\");\n\t\t\t\ttrigger.setAttribute(\"aria-expanded\", \"false\");\n\n\t\t\t\tif (langName) {\n\t\t\t\t\tawait this.updateTriggerText(langName);\n\t\t\t\t}\n\n\t\t\t\tif (langCode) {\n\t\t\t\t\tlocalStorage.setItem(\"jss-pref\", langCode);\n\t\t\t\t}\n\n\t\t\t\tconst triggerIcon = this.elements.trigger?.querySelector(\n\t\t\t\t\t\".jigts-trigger-icon\",\n\t\t\t\t);\n\t\t\t\tif (triggerIcon && langCode && langName) {\n\t\t\t\t\ttriggerIcon.innerHTML = `<span class=\\\"jigts-lang-code\\\">${langCode.toUpperCase()}</span><span class=\\\"jigts-lang-name\\\">${langName}</span>`;\n\t\t\t\t}\n\n\t\t\t\tconst triggerContent = trigger.querySelector<HTMLDivElement>(\n\t\t\t\t\t\".jigts-trigger-content\",\n\t\t\t\t);\n\t\t\t\tif (langCode && langCode !== this.currentLanguage) {\n\t\t\t\t\tif (triggerContent)\n\t\t\t\t\t\ttriggerContent.classList.add(\"jigts-has-translation\");\n\t\t\t\t\tconst triggerLoading = trigger.querySelector<HTMLDivElement>(\n\t\t\t\t\t\t\".jigts-trigger-loading\",\n\t\t\t\t\t);\n\t\t\t\t\tif (triggerContent && triggerLoading) {\n\t\t\t\t\t\ttriggerContent.style.display = \"none\";\n\t\t\t\t\t\ttriggerLoading.style.display = \"flex\";\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.translatePage(langCode);\n\t\t\t\t\t\tthis.currentLanguage = langCode;\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error(\"Translation error:\", error);\n\t\t\t\t\t\talert(\"An error occurred during translation. Please try again.\");\n\t\t\t\t\t}\n\t\t\t\t} else if (triggerContent) {\n\t\t\t\t\ttriggerContent.classList.remove(\"jigts-has-translation\");\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tdocument.addEventListener(\"keydown\", (e: KeyboardEvent) => {\n\t\t\tif (!dropdown.classList.contains(\"jigts-open\")) return;\n\n\t\t\tif (e.key === \"Escape\") {\n\t\t\t\tdropdown.classList.remove(\"jigts-open\");\n\t\t\t\ttrigger.setAttribute(\"aria-expanded\", \"false\");\n\t\t\t\ttrigger.focus();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate scheduleTranslation() {\n\t\tif (this.translationScheduled) return;\n\t\tconst currentUrl = window.location.href;\n\t\tconst currentLang = this.currentLanguage;\n\t\tconst nodes = DocumentNavigator.findTranslatableContent();\n\t\tconst hash = generateHashForContent(nodes);\n\t\tif (\n\t\t\tthis.lastTranslated &&\n\t\t\tthis.lastTranslated.url === currentUrl &&\n\t\t\tthis.lastTranslated.lang === currentLang &&\n\t\t\tthis.lastTranslated.hash === hash\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tthis.translationScheduled = true;\n\t\tif (this.scheduleTimeout) clearTimeout(this.scheduleTimeout);\n\t\tthis.scheduleTimeout = window.setTimeout(() => {\n\t\t\tthis.translationScheduled = false;\n\t\t\tif (this.currentLanguage !== this.config.pageLanguage) {\n\t\t\t\tthis.lastTranslated = { url: currentUrl, lang: currentLang, hash };\n\t\t\t\tconst triggerContent =\n\t\t\t\t\tthis.elements.trigger?.querySelector<HTMLDivElement>(\n\t\t\t\t\t\t\".jigts-trigger-content\",\n\t\t\t\t\t);\n\t\t\t\tconst triggerLoading =\n\t\t\t\t\tthis.elements.trigger?.querySelector<HTMLDivElement>(\n\t\t\t\t\t\t\".jigts-trigger-loading\",\n\t\t\t\t\t);\n\t\t\t\tif (triggerContent && triggerLoading) {\n\t\t\t\t\ttriggerContent.style.display = \"none\";\n\t\t\t\t\ttriggerLoading.style.display = \"flex\";\n\t\t\t\t}\n\t\t\t\tthis.translatePage(this.currentLanguage)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tconst languageItems = this.widget.querySelectorAll<HTMLElement>(\n\t\t\t\t\t\t\t\".jigts-language-item\",\n\t\t\t\t\t\t);\n\t\t\t\t\t\tlanguageItems.forEach((item) => {\n\t\t\t\t\t\t\tconst isSelected =\n\t\t\t\t\t\t\t\titem.getAttribute(\"data-language-code\") ===\n\t\t\t\t\t\t\t\tthis.currentLanguage;\n\t\t\t\t\t\t\titem.classList.toggle(\"jigts-selected\", isSelected);\n\t\t\t\t\t\t\titem.setAttribute(\"aria-selected\", isSelected.toString());\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tconsole.error(\"Auto-translation error:\", error);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}, 200);\n\t}\n\n\t/**\n\t * Public method to translate the page to a specific language\n\t * @param langCode The language code to translate to\n\t * @returns Promise that resolves when translation is complete\n\t */\n\tpublic async translateTo(langCode: string, onComplete?: (result: TranslationResult) => void, onError?: (error: Error) => void): Promise<TranslationResult> {\n\n\t\tconst startTime = Date.now();\n\t\tif (this.isTranslating) {\n\t\t\tconsole.warn(\"Translation already in progress\");\n\t\t\tonError?.(new Error(\"Translation already in progress\"));\n\t\t\treturn {\n\t\t\t\tsuccess: false,\n\t\t\t\ttargetLanguage: langCode,\n\t\t\t\ttranslatedNodes: 0,\n\t\t\t\terror: \"Translation already in progress\",\n\t\t\t\tduration: 0,\n\t\t\t};\n\t\t}\n\n\t\tconst supportedLang = languages.find((lang) => lang.code === langCode);\n\t\tif (!supportedLang) {\n\t\t\tonError?.(new Error(`Unsupported language code: ${langCode}`));\n\t\t\treturn {\n\t\t\t\tsuccess: false,\n\t\t\t\ttargetLanguage: langCode,\n\t\t\t\ttranslatedNodes: 0,\n\t\t\t\terror: `Unsupported language code: ${langCode}`,\n\t\t\t\tduration: 0,\n\t\t\t};\n\t\t}\n\n\t\tif (langCode === this.currentLanguage) {\n\t\t\tonComplete?.({\n\t\t\t\tsuccess: true,\n\t\t\t\ttargetLanguage: langCode,\n\t\t\t\ttranslatedNodes: 0,\n\t\t\t\tduration: 0,\n\t\t\t});\n\t\t\treturn {\n\t\t\t\tsuccess: true,\n\t\t\t\ttargetLanguage: langCode,\n\t\t\t\ttranslatedNodes: 0,\n\t\t\t\tduration: 0,\n\t\t\t};\n\t\t}\n\n\t\ttry {\n\t\t\tlocalStorage.setItem(\"jss-pref\", langCode);\n\t\t\tawait this.translatePage(langCode);\n\t\t\t// Update the current language\n\t\t\tthis.currentLanguage = langCode;\n\n\t\t\t// Update UI to reflect the selected language\n\t\t\tconst languageItems = this.widget.querySelectorAll<HTMLElement>(\".jigts-language-item\");\n\t\t\tfor (const item of languageItems) {\n\t\t\t\tconst isSelected = item.getAttribute(\"data-language-code\") === langCode;\n\t\t\t\titem.classList.toggle(\"jigts-selected\", isSelected);\n\t\t\t\titem.setAttribute(\"aria-selected\", isSelected.toString());\n\t\t\t}\n\n\t\t\t// Update trigger text\n\t\t\tconst triggerContent = this.elements.trigger?.querySelector<HTMLDivElement>(\".jigts-trigger-content\");\n\t\t\tif (triggerContent) {\n\t\t\t\ttriggerContent.classList.add(\"jigts-has-translation\");\n\t\t\t\tconst triggerIcon = triggerContent.querySelector(\".jigts-trigger-icon\");\n\t\t\t\tif (triggerIcon && supportedLang) {\n\t\t\t\t\ttriggerIcon.innerHTML = `<span class=\"jigts-lang-code\">${supportedLang.code.toUpperCase()}</span><span class=\"jigts-lang-name\">${supportedLang.name}</span>`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst endTime = Date.now();\n\t\t\tconst translatedNodes = document.querySelectorAll(\"[data-translated-lang]\").length;\n\t\t\tonComplete?.({\n\t\t\t\tsuccess: true,\n\t\t\t\ttargetLanguage: langCode,\n\t\t\t\ttranslatedNodes,\n\t\t\t\tduration: endTime - startTime,\n\t\t\t});\n\n\t\t\t// upate the localstroage pref\n\t\t\treturn {\n\t\t\t\tsuccess: true,\n\t\t\t\ttargetLanguage: langCode,\n\t\t\t\ttranslatedNodes,\n\t\t\t\tduration: endTime - startTime,\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tonError?.(error as Error);\n\t\t\treturn {\n\t\t\t\tsuccess: false,\n\t\t\t\ttargetLanguage: langCode,\n\t\t\t\ttranslatedNodes: 0,\n\t\t\t\terror: error instanceof Error ? error.message : \"Unknown error occurred\",\n\t\t\t\tduration: 0,\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Get the current instance of TranslationWidget\n\t * @returns The current TranslationWidget instance or null if not initialized\n\t */\n\tpublic static getInstance(): TranslationWidget | null {\n\t\treturn TranslationWidget.instance;\n\t}\n\n\t// Add this helper method to the class\n\tprivate getLanguageSVG(): string {\n\t\treturn `\\n            <svg class=\\\"jigts-languages-icon\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                    d=\\\"M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129\\\">\\n                </path>\\n            </svg>\\n        `;\n\t}\n}\n\n// Expose the translate function globally\ndeclare global {\n\tinterface Window {\n\t\tresetTranslation: (defaultLang: string, onComplete?: (result: Pick<TranslationResult, \"success\" | \"targetLanguage\">) => void, onError?: (error: Error) => void) => void;\n\t\ttranslate: (langCode: string, onComplete?: (result: TranslationResult) => void, onError?: (error: Error) => void) => Promise<TranslationResult>;\n\t}\n}\n\n\nif (typeof window !== \"undefined\") {\n\n\twindow.resetTranslation = (defaultLang: string, onComplete?: (result: Pick<TranslationResult, \"success\" | \"targetLanguage\">) => void, onError?: (error: Error) => void) => {\n\t\tconst instance = TranslationWidget.getInstance();\n\t\tif (!instance) {\n\t\t  return;\n\t\t}\t\n\t\ttry {\n\t\t  instance.resetToDefaultLanguage\t();\n\t\t  onComplete?.({\n\t\t\tsuccess: true,\n\t\t\ttargetLanguage: defaultLang,\n\t\t  });\n\t\t} catch (error) {\n\t\t  onError?.(error as Error);\n\t\t}\n\t  };\n\n\n\t// Add the global translate function\n\twindow.translate = async (langCode: string, onComplete?: (result: TranslationResult) => void, onError?: (error: Error) => void): Promise<TranslationResult> => {\n\t\tconst instance = TranslationWidget.getInstance();\n\t\tif (!instance) {\n\t\t\tonError?.(new Error(\"Translation widget not initialized\"));\n\t\t\treturn {\n\t\t\t\tsuccess: false,\n\t\t\t\ttargetLanguage: langCode,\n\t\t\t\ttranslatedNodes: 0,\n\t\t\t\terror: \"Translation widget not initialized\",\n\t\t\t\tduration: 0,\n\t\t\t};\n\t\t}\n\t\tconst startTime = Date.now();\n\t\ttry {\n\t\t\tconst result = await instance.translateTo(langCode, onComplete, onError);\n\t\t\tonComplete?.(result);\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\tonError?.(error as Error);\n\t\t\treturn {\n\t\t\t\tsuccess: false,\n\t\t\t\ttargetLanguage: langCode,\n\t\t\t\ttranslatedNodes: 0,\n\t\t\t\terror: error instanceof Error ? error.message : \"Unknown error occurred\",\n\t\t\t\tduration: Date.now() - startTime,\n\t\t\t};\n\t\t}\n\t};\n}","import styles from './translation-widget.css?inline'\nimport { TranslationWidget } from './widget'\nimport type { TranslationConfig } from './types'\n\ndeclare global {\n    interface Window {\n        TranslationWidget: (\n            publicKey: string,\n            config?: TranslationConfig\n        ) => TranslationWidget\n    }\n}\n\nlet widgetInstance: TranslationWidget | undefined;\n\nconst initializeTranslationWidget = (\n    publicKey: string,\n    config?: TranslationConfig\n): TranslationWidget => {\n    if (typeof window === 'undefined') {\n        throw new Error(\n            'Translation widget can only be used in browser environment'\n        )\n    }\n\n    const initWidget = () => {\n        if (!widgetInstance) {\n            if (!document.querySelector('style[data-translation-widget]')) {\n                const style = document.createElement('style')\n                style.setAttribute('data-translation-widget', '')\n                style.textContent = styles\n                document.head.appendChild(style)\n            }\n            widgetInstance = new TranslationWidget(publicKey, config)\n        }\n        return widgetInstance;\n    }\n\n    if (document.readyState === 'loading') {\n        window.addEventListener('DOMContentLoaded', initWidget)\n        return undefined as any;\n    } else {\n        return initWidget()\n    }\n}\n\nexport default initializeTranslationWidget"],"names":["k1","_a","LZString","fullTranslations","languageItems"],"mappings":";;;;;;;;;;;;AAiBO,MAAM,mBAAmB;IAM/B,YAAY,SAAA,CAAmB;QALd,cAAA,IAAA,EAAA;QACT,cAAA,IAAA,EAAA,gBAA6B;YAAE,MAAM;YAAG,QAAQ;QAAE;QAEzC,+CAAA;QAAA,cAAA,IAAA,EAAA,UAAS;QAGzB,IAAA,CAAK,SAAA,GAAY;IAAA;IAGlB,kBAAgC;QACxB,OAAA;YAAE,GAAG,IAAA,CAAK,YAAA;QAAa;IAAA;IAG/B,MAAM,mBACL,KAAA,EACA,UAAA,EACA,aAAa,CAAA,EACb,aAAa,GAAA,EACO;QACpB,IAAI,UAAU;QACd,MAAO,UAAU,WAAY;YACxB,IAAA;gBACH,MAAM,WAAW,MAAM,MAAM,IAAA,CAAK,MAAA,EAAQ;oBACzC,QAAQ;oBACR,SAAS;wBACR,gBAAgB;wBAChB,aAAa,IAAA,CAAK,SAAA;oBACnB;oBACA,MAAM,KAAK,SAAA,CAAU;wBACpB,MAAM;wBACN,iBAAiB;oBACjB,CAAA;gBAAA,CACD;gBAEG,IAAA,CAAC,SAAS,EAAA,EAAI;oBACjB,MAAM,QAA0B,IAAI,MACnC,CAAA,wBAAA,EAA2B,SAAS,UAAU,EAAA;oBAE/C,MAAM,MAAA,GAAS,SAAS,MAAA;oBACxB,MAAM,QAAA,GAAW;oBACX,MAAA;gBAAA;gBAGD,MAAA,SAAU,MAAM,SAAS,IAAA,CAAK;gBAC9B,MAAA,eAAe,MAAM,OAAA,CAAQ,OAAO,eAAe,IACtD,OAAO,eAAA,GACP;oBAAC,OAAO,eAAe;iBAAA;gBAEnB,OAAA;YAAA,EAAA,OACC,OAAO;gBACf;gBACA,IAAI,WAAW,YAAY;oBAClB,QAAA,KAAA,CAAM,oCAAoC,KAAK;oBAChD,OAAA;gBAAA;gBAGR,MAAM,IAAI,QAAQ,CAAC,MAAQ,WAAW,KAAK,UAAU,CAAC;YAAA;QACvD;QAEM,OAAA;IAAA;AAET;AC9EO,MAAM,YAAwB;IACpC;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,KAAK;QACL,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,KAAK;QACL,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,KAAK;QACL,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,KAAK;QACL,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,KAAK;QACL,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,KAAK;QACL,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,KAAK;QACL,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,KAAK;QACL,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,KAAK;QACL,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAAM;QACN,QAAQ;QACR,KAAK;QACL,gBAAgB;IACjB;IACA;QACC,MAAM;QACN,MAA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","ignoreList":[0,1,2,3,4,5,6,7,8,9],"debugId":null}}]
}