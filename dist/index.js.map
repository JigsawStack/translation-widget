{"version":3,"file":"index.js","sources":["../src/lib/translation/index.ts","../src/constants/languages.ts","../src/utils/utils.ts","../src/lib/dom/index.ts","../src/constants/index.ts","../src/templates/html/widget.html?raw","../node_modules/lz-string/libs/lz-string.js","../src/lib/storage/localstorage.ts","../src/widget/index.ts","../src/index.ts"],"sourcesContent":["interface TranslationResponse {\n\ttranslated_text: string | string[];\n\tsource_language?: string;\n\tdetected_language?: string;\n\tconfidence?: number;\n}\n\ninterface TranslationError extends Error {\n\tstatus?: number;\n\tresponse?: Response;\n}\n\ninterface CacheMetrics {\n\thits: number;\n\tmisses: number;\n}\n\nexport class TranslationService {\n\tprivate readonly publicKey: string;\n\tprivate cacheMetrics: CacheMetrics = { hits: 0, misses: 0 };\n\t// Todo: convert this to use sdk instead of api\n\tprivate readonly apiUrl = \"https://api.jigsawstack.com/v1/ai/translate\";\n\n\tconstructor(publicKey: string) {\n\t\tthis.publicKey = publicKey;\n\t}\n\n\tgetCacheMetrics(): CacheMetrics {\n\t\treturn { ...this.cacheMetrics };\n\t}\n\n\tasync translateBatchText(\n\t\ttexts: string[],\n\t\ttargetLang: string,\n\t\tmaxRetries = 2,\n\t\tretryDelay = 100,\n\t): Promise<string[]> {\n\t\tlet attempt = 0;\n\t\twhile (attempt < maxRetries) {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(this.apiUrl, {\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\t\"x-api-key\": this.publicKey,\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\ttext: texts,\n\t\t\t\t\t\ttarget_language: targetLang,\n\t\t\t\t\t}),\n\t\t\t\t});\n\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tconst error: TranslationError = new Error(\n\t\t\t\t\t\t`Error translating text: ${response.statusText}`,\n\t\t\t\t\t);\n\t\t\t\t\terror.status = response.status;\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\tconst result = (await response.json()) as TranslationResponse;\n\t\t\t\tconst translations = Array.isArray(result.translated_text)\n\t\t\t\t\t? result.translated_text\n\t\t\t\t\t: [result.translated_text];\n\n\t\t\t\treturn translations;\n\t\t\t} catch (error) {\n\t\t\t\tattempt++;\n\t\t\t\tif (attempt >= maxRetries) {\n\t\t\t\t\tconsole.error(\"Translation error after retries:\", error);\n\t\t\t\t\treturn texts; // Return original texts on error\n\t\t\t\t}\n\t\t\t\t// Wait before retrying\n\t\t\t\tawait new Promise((res) => setTimeout(res, retryDelay));\n\t\t\t}\n\t\t}\n\t\treturn texts; // Fallback, should not reach here\n\t}\n}\n","import { Language } from \"../types\";\nexport const languages: Language[] = [\n\t{\n\t\tcode: \"af\",\n\t\tname: \"Afrikaans\",\n\t\tnative: \"Afrikaans\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"am\",\n\t\tname: \"Amharic\",\n\t\tnative: \"አማርኛ\",\n\t\twriting_system: \"Ethiopic\",\n\t},\n\t{\n\t\tcode: \"ar\",\n\t\tname: \"Arabic\",\n\t\tnative: \"العربية\",\n\t\trtl: 1,\n\t\twriting_system: \"Arabic\",\n\t},\n\t{\n\t\tcode: \"as\",\n\t\tname: \"Assamese\",\n\t\tnative: \"অসমীয়া\",\n\t\twriting_system: \"Bengali\",\n\t},\n\t{\n\t\tcode: \"az\",\n\t\tname: \"Azerbaijani\",\n\t\tnative: \"Azərbaycanca / آذربايجان\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ba\",\n\t\tname: \"Bashkir\",\n\t\tnative: \"Башҡорт\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"be\",\n\t\tname: \"Belarusian\",\n\t\tnative: \"Беларуская\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"bg\",\n\t\tname: \"Bulgarian\",\n\t\tnative: \"Български\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"bn\",\n\t\tname: \"Bengali\",\n\t\tnative: \"বাংলা\",\n\t\twriting_system: \"Bengali\",\n\t},\n\t{\n\t\tcode: \"bo\",\n\t\tname: \"Tibetan\",\n\t\tnative: \"བོད་ཡིག / Bod skad\",\n\t\twriting_system: \"Tibetan\",\n\t},\n\t{\n\t\tcode: \"br\",\n\t\tname: \"Breton\",\n\t\tnative: \"Brezhoneg\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"bs\",\n\t\tname: \"Bosnian\",\n\t\tnative: \"Bosanski\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ca\",\n\t\tname: \"Catalan\",\n\t\tnative: \"Català\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ch\",\n\t\tname: \"Chamorro\",\n\t\tnative: \"Chamoru\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"co\",\n\t\tname: \"Corsican\",\n\t\tnative: \"Corsu\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"cs\",\n\t\tname: \"Czech\",\n\t\tnative: \"Česky\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"cy\",\n\t\tname: \"Welsh\",\n\t\tnative: \"Cymraeg\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"da\",\n\t\tname: \"Danish\",\n\t\tnative: \"Dansk\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"de\",\n\t\tname: \"German\",\n\t\tnative: \"Deutsch\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"dv\",\n\t\tname: \"Divehi\",\n\t\tnative: \"ދިވެހިބަސް\",\n\t\trtl: 1,\n\t\twriting_system: \"Thaana\",\n\t},\n\t{\n\t\tcode: \"dz\",\n\t\tname: \"Dzongkha\",\n\t\tnative: \"ཇོང་ཁ\",\n\t\twriting_system: \"Tibetan\",\n\t},\n\t{\n\t\tcode: \"el\",\n\t\tname: \"Greek\",\n\t\tnative: \"Ελληνικά\",\n\t\twriting_system: \"Greek\",\n\t},\n\t{\n\t\tcode: \"en\",\n\t\tname: \"English\",\n\t\tnative: \"English\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"eo\",\n\t\tname: \"Esperanto\",\n\t\tnative: \"Esperanto\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"es\",\n\t\tname: \"Spanish\",\n\t\tnative: \"Español\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"et\",\n\t\tname: \"Estonian\",\n\t\tnative: \"Eesti\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"eu\",\n\t\tname: \"Basque\",\n\t\tnative: \"Euskara\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"fa\",\n\t\tname: \"Persian\",\n\t\tnative: \"فارسی\",\n\t\trtl: 1,\n\t\twriting_system: \"Arabic\",\n\t},\n\t{\n\t\tcode: \"ff\",\n\t\tname: \"Peul\",\n\t\tnative: \"Fulfulde\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"fi\",\n\t\tname: \"Finnish\",\n\t\tnative: \"Suomi\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"fj\",\n\t\tname: \"Fijian\",\n\t\tnative: \"Na Vosa Vakaviti\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"fo\",\n\t\tname: \"Faroese\",\n\t\tnative: \"Føroyskt\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"fr\",\n\t\tname: \"French\",\n\t\tnative: \"Français\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"fy\",\n\t\tname: \"West Frisian\",\n\t\tnative: \"Frysk\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ga\",\n\t\tname: \"Irish\",\n\t\tnative: \"Gaeilge\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"gd\",\n\t\tname: \"Scottish Gaelic\",\n\t\tnative: \"Gàidhlig\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"gl\",\n\t\tname: \"Galician\",\n\t\tnative: \"Galego\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"gn\",\n\t\tname: \"Guarani\",\n\t\tnative: \"Avañe'ẽ\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"gu\",\n\t\tname: \"Gujarati\",\n\t\tnative: \"ગુજરાતી\",\n\t\twriting_system: \"Gujarati\",\n\t},\n\t{\n\t\tcode: \"gv\",\n\t\tname: \"Manx\",\n\t\tnative: \"Gaelg\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ha\",\n\t\tname: \"Hausa\",\n\t\tnative: \"هَوُسَ\",\n\t\trtl: 1,\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"he\",\n\t\tname: \"Hebrew\",\n\t\tnative: \"עברית\",\n\t\trtl: 1,\n\t\twriting_system: \"Hebrew\",\n\t},\n\t{\n\t\tcode: \"hi\",\n\t\tname: \"Hindi\",\n\t\tnative: \"हिन्दी\",\n\t\twriting_system: \"Devanagari\",\n\t},\n\t{\n\t\tcode: \"hr\",\n\t\tname: \"Croatian\",\n\t\tnative: \"Hrvatski\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ht\",\n\t\tname: \"Haitian\",\n\t\tnative: \"Krèyol ayisyen\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"hu\",\n\t\tname: \"Hungarian\",\n\t\tnative: \"Magyar\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"hy\",\n\t\tname: \"Armenian\",\n\t\tnative: \"Հայերեն\",\n\t\twriting_system: \"Armenian\",\n\t},\n\t{\n\t\tcode: \"id\",\n\t\tname: \"Indonesian\",\n\t\tnative: \"Bahasa Indonesia\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ig\",\n\t\tname: \"Igbo\",\n\t\tnative: \"Igbo\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"is\",\n\t\tname: \"Icelandic\",\n\t\tnative: \"Íslenska\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"it\",\n\t\tname: \"Italian\",\n\t\tnative: \"Italiano\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"iu\",\n\t\tname: \"Inuktitut\",\n\t\tnative: \"ᐃᓄᒃᑎᑐᑦ\",\n\t\twriting_system: \"Unified Canadian Aboriginal Syllabics\",\n\t},\n\t{\n\t\tcode: \"ja\",\n\t\tname: \"Japanese\",\n\t\tnative: \"日本語\",\n\t\twriting_system: \"Japanese\",\n\t},\n\t{\n\t\tcode: \"jv\",\n\t\tname: \"Javanese\",\n\t\tnative: \"Basa Jawa\",\n\t\twriting_system: \"Javanese\",\n\t},\n\t{\n\t\tcode: \"ka\",\n\t\tname: \"Georgian\",\n\t\tnative: \"ქართული\",\n\t\twriting_system: \"Georgian\",\n\t},\n\t{\n\t\tcode: \"kg\",\n\t\tname: \"Kongo\",\n\t\tnative: \"KiKongo\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ki\",\n\t\tname: \"Kikuyu\",\n\t\tnative: \"Gĩkũyũ\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"kj\",\n\t\tname: \"Kuanyama\",\n\t\tnative: \"Kuanyama\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"kk\",\n\t\tname: \"Kazakh\",\n\t\tnative: \"Қазақша\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"kl\",\n\t\tname: \"Greenlandic\",\n\t\tnative: \"Kalaallisut\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"km\",\n\t\tname: \"Cambodian\",\n\t\tnative: \"ភាសាខ្មែរ\",\n\t\twriting_system: \"Khmer\",\n\t},\n\t{\n\t\tcode: \"kn\",\n\t\tname: \"Kannada\",\n\t\tnative: \"ಕನ್ನಡ\",\n\t\twriting_system: \"Kannada\",\n\t},\n\t{\n\t\tcode: \"ko\",\n\t\tname: \"Korean\",\n\t\tnative: \"한국어\",\n\t\twriting_system: \"Korean\",\n\t},\n\t{\n\t\tcode: \"kr\",\n\t\tname: \"Kanuri\",\n\t\tnative: \"Kanuri\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ks\",\n\t\tname: \"Kashmiri\",\n\t\tnative: \"कश्मीरी / كشميري\",\n\t\trtl: 1,\n\t\twriting_system: \"Arabic\",\n\t},\n\t{\n\t\tcode: \"ku\",\n\t\tname: \"Kurdish\",\n\t\tnative: \"Kurdî / كوردی\",\n\t\trtl: 1,\n\t\twriting_system: \"Arabic\",\n\t},\n\t{\n\t\tcode: \"kv\",\n\t\tname: \"Komi\",\n\t\tnative: \"Коми\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"kw\",\n\t\tname: \"Cornish\",\n\t\tnative: \"Kernewek\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ky\",\n\t\tname: \"Kirghiz\",\n\t\tnative: \"Kırgızca / Кыргызча\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"la\",\n\t\tname: \"Latin\",\n\t\tnative: \"Latina\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"lb\",\n\t\tname: \"Luxembourgish\",\n\t\tnative: \"Lëtzebuergesch\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"lg\",\n\t\tname: \"Ganda\",\n\t\tnative: \"Luganda\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"li\",\n\t\tname: \"Limburgian\",\n\t\tnative: \"Limburgs\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ln\",\n\t\tname: \"Lingala\",\n\t\tnative: \"Lingála\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"lo\",\n\t\tname: \"Laotian\",\n\t\tnative: \"ລາວ / Pha xa lao\",\n\t\twriting_system: \"Lao\",\n\t},\n\t{\n\t\tcode: \"lt\",\n\t\tname: \"Lithuanian\",\n\t\tnative: \"Lietuvių\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"lu\",\n\t\tname: \"Luba-Katanga\",\n\t\tnative: \"Tshiluba\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"lv\",\n\t\tname: \"Latvian\",\n\t\tnative: \"Latviešu\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"mg\",\n\t\tname: \"Malagasy\",\n\t\tnative: \"Malagasy\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"mh\",\n\t\tname: \"Marshallese\",\n\t\tnative: \"Kajin Majel / Ebon\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"mi\",\n\t\tname: \"Maori\",\n\t\tnative: \"Māori\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"mk\",\n\t\tname: \"Macedonian\",\n\t\tnative: \"Македонски\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"ml\",\n\t\tname: \"Malayalam\",\n\t\tnative: \"മലയാളം\",\n\t\twriting_system: \"Malayalam\",\n\t},\n\t{\n\t\tcode: \"mn\",\n\t\tname: \"Mongolian\",\n\t\tnative: \"Монгол\",\n\t\twriting_system: \"Mongolian\",\n\t},\n\t{\n\t\tcode: \"mo\",\n\t\tname: \"Moldovan\",\n\t\tnative: \"Moldovenească\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"mr\",\n\t\tname: \"Marathi\",\n\t\tnative: \"मराठी\",\n\t\twriting_system: \"Devanagari\",\n\t},\n\t{\n\t\tcode: \"ms\",\n\t\tname: \"Malay\",\n\t\tnative: \"Bahasa Melayu\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"mt\",\n\t\tname: \"Maltese\",\n\t\tnative: \"bil-Malti\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"my\",\n\t\tname: \"Burmese\",\n\t\tnative: \"မြန်မာစာ\",\n\t\twriting_system: \"Myanmar\",\n\t},\n\t{\n\t\tcode: \"na\",\n\t\tname: \"Nauruan\",\n\t\tnative: \"Dorerin Naoero\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"nb\",\n\t\tname: \"Norwegian Bokmål\",\n\t\tnative: \"Norsk bokmål\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"nd\",\n\t\tname: \"North Ndebele\",\n\t\tnative: \"Sindebele\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ne\",\n\t\tname: \"Nepali\",\n\t\tnative: \"नेपाली\",\n\t\twriting_system: \"Devanagari\",\n\t},\n\t{\n\t\tcode: \"ng\",\n\t\tname: \"Ndonga\",\n\t\tnative: \"Oshiwambo\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"nl\",\n\t\tname: \"Dutch\",\n\t\tnative: \"Nederlands\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"nn\",\n\t\tname: \"Norwegian Nynorsk\",\n\t\tnative: \"Norsk nynorsk\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"no\",\n\t\tname: \"Norwegian\",\n\t\tnative: \"Norsk\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"nr\",\n\t\tname: \"South Ndebele\",\n\t\tnative: \"isiNdebele\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"nv\",\n\t\tname: \"Navajo\",\n\t\tnative: \"Diné bizaad\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ny\",\n\t\tname: \"Chichewa\",\n\t\tnative: \"Chi-Chewa\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"oc\",\n\t\tname: \"Occitan\",\n\t\tnative: \"Occitan\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"oj\",\n\t\tname: \"Ojibwa\",\n\t\tnative: \"ᐊᓂᔑᓈᐯᒧᐎᓐ / Anishinaabemowin\",\n\t\twriting_system: \"Unified Canadian Aboriginal Syllabics\",\n\t},\n\t{\n\t\tcode: \"om\",\n\t\tname: \"Oromo\",\n\t\tnative: \"Oromoo\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"or\",\n\t\tname: \"Oriya\",\n\t\tnative: \"ଓଡ଼ିଆ\",\n\t\twriting_system: \"Odia\",\n\t},\n\t{\n\t\tcode: \"os\",\n\t\tname: \"Ossetian / Ossetic\",\n\t\tnative: \"Иронау\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"pa\",\n\t\tname: \"Panjabi / Punjabi\",\n\t\tnative: \"ਪੰਜਾਬੀ / पंजाबी / پنجابي\",\n\t\twriting_system: \"Gurmukhi\",\n\t},\n\t{\n\t\tcode: \"pi\",\n\t\tname: \"Pali\",\n\t\tnative: \"Pāli / पाऴि\",\n\t\twriting_system: \"Devanagari\",\n\t},\n\t{\n\t\tcode: \"pl\",\n\t\tname: \"Polish\",\n\t\tnative: \"Polski\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ps\",\n\t\tname: \"Pashto\",\n\t\tnative: \"پښتو\",\n\t\trtl: 1,\n\t\twriting_system: \"Arabic\",\n\t},\n\t{\n\t\tcode: \"pt\",\n\t\tname: \"Portuguese\",\n\t\tnative: \"Português\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"qu\",\n\t\tname: \"Quechua\",\n\t\tnative: \"Runa Simi\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"rm\",\n\t\tname: \"Raeto Romance\",\n\t\tnative: \"Rumantsch\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"rn\",\n\t\tname: \"Kirundi\",\n\t\tnative: \"Kirundi\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ro\",\n\t\tname: \"Romanian\",\n\t\tnative: \"Română\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ru\",\n\t\tname: \"Russian\",\n\t\tnative: \"Русский\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"rw\",\n\t\tname: \"Rwandi\",\n\t\tnative: \"Kinyarwandi\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sa\",\n\t\tname: \"Sanskrit\",\n\t\tnative: \"संस्कृतम्\",\n\t\twriting_system: \"Devanagari\",\n\t},\n\t{\n\t\tcode: \"sc\",\n\t\tname: \"Sardinian\",\n\t\tnative: \"Sardu\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sd\",\n\t\tname: \"Sindhi\",\n\t\tnative: \"सिनधि\",\n\t\twriting_system: \"Arabic\",\n\t},\n\t{\n\t\tcode: \"se\",\n\t\tname: \"Northern Sami\",\n\t\tnative: \"Sámegiella\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sg\",\n\t\tname: \"Sango\",\n\t\tnative: \"Sängö\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sh\",\n\t\tname: \"Serbo-Croatian\",\n\t\tnative: \"Srpskohrvatski / Српскохрватски\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"si\",\n\t\tname: \"Sinhalese\",\n\t\tnative: \"සිංහල\",\n\t\twriting_system: \"Sinhala\",\n\t},\n\t{\n\t\tcode: \"sk\",\n\t\tname: \"Slovak\",\n\t\tnative: \"Slovenčina\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sl\",\n\t\tname: \"Slovenian\",\n\t\tnative: \"Slovenščina\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sm\",\n\t\tname: \"Samoan\",\n\t\tnative: \"Gagana Samoa\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sn\",\n\t\tname: \"Shona\",\n\t\tnative: \"chiShona\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"so\",\n\t\tname: \"Somalia\",\n\t\tnative: \"Soomaaliga\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sq\",\n\t\tname: \"Albanian\",\n\t\tnative: \"Shqip\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sr\",\n\t\tname: \"Serbian\",\n\t\tnative: \"Српски\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"ss\",\n\t\tname: \"Swati\",\n\t\tnative: \"SiSwati\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"st\",\n\t\tname: \"Southern Sotho\",\n\t\tnative: \"Sesotho\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"su\",\n\t\tname: \"Sundanese\",\n\t\tnative: \"Basa Sunda\",\n\t\twriting_system: \"Sundanese\",\n\t},\n\t{\n\t\tcode: \"sv\",\n\t\tname: \"Swedish\",\n\t\tnative: \"Svenska\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sw\",\n\t\tname: \"Swahili\",\n\t\tnative: \"Kiswahili\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ta\",\n\t\tname: \"Tamil\",\n\t\tnative: \"தமிழ்\",\n\t\twriting_system: \"Tamil\",\n\t},\n\t{\n\t\tcode: \"te\",\n\t\tname: \"Telugu\",\n\t\tnative: \"తెలుగు\",\n\t\twriting_system: \"Telugu\",\n\t},\n\t{\n\t\tcode: \"tg\",\n\t\tname: \"Tajik\",\n\t\tnative: \"Тоҷикӣ\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"th\",\n\t\tname: \"Thai\",\n\t\tnative: \"ไทย / Phasa Thai\",\n\t\twriting_system: \"Thai\",\n\t},\n\t{\n\t\tcode: \"ti\",\n\t\tname: \"Tigrinya\",\n\t\tnative: \"ትግርኛ\",\n\t\twriting_system: \"Ethiopic\",\n\t},\n\t{\n\t\tcode: \"tk\",\n\t\tname: \"Turkmen\",\n\t\tnative: \"Туркмен / تركمن\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"tl\",\n\t\tname: \"Tagalog / Filipino\",\n\t\tnative: \"Tagalog\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"tn\",\n\t\tname: \"Tswana\",\n\t\tnative: \"Setswana\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"to\",\n\t\tname: \"Tonga\",\n\t\tnative: \"Lea Faka-Tonga\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"tr\",\n\t\tname: \"Turkish\",\n\t\tnative: \"Türkçe\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ts\",\n\t\tname: \"Tsonga\",\n\t\tnative: \"Xitsonga\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"tt\",\n\t\tname: \"Tatar\",\n\t\tnative: \"Tatarça\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"tw\",\n\t\tname: \"Twi\",\n\t\tnative: \"Twi\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ty\",\n\t\tname: \"Tahitian\",\n\t\tnative: \"Reo Mā`ohi\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ug\",\n\t\tname: \"Uyghur\",\n\t\tnative: \"Uyƣurqə / ئۇيغۇرچە\",\n\t\twriting_system: \"Arabic\",\n\t},\n\t{\n\t\tcode: \"uk\",\n\t\tname: \"Ukrainian\",\n\t\tnative: \"Українська\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"ur\",\n\t\tname: \"Urdu\",\n\t\tnative: \"اردو\",\n\t\trtl: 1,\n\t\twriting_system: \"Arabic\",\n\t},\n\t{\n\t\tcode: \"uz\",\n\t\tname: \"Uzbek\",\n\t\tnative: \"Ўзбек\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ve\",\n\t\tname: \"Venda\",\n\t\tnative: \"Tshivenḓa\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"vi\",\n\t\tname: \"Vietnamese\",\n\t\tnative: \"Tiếng Việt\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"vo\",\n\t\tname: \"Volapük\",\n\t\tnative: \"Volapük\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"wo\",\n\t\tname: \"Wolof\",\n\t\tnative: \"Wollof\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"xh\",\n\t\tname: \"Xhosa\",\n\t\tnative: \"isiXhosa\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"yi\",\n\t\tname: \"Yiddish\",\n\t\tnative: \"ייִדיש\",\n\t\trtl: 1,\n\t\twriting_system: \"Hebrew\",\n\t},\n\t{\n\t\tcode: \"yo\",\n\t\tname: \"Yoruba\",\n\t\tnative: \"Yorùbá\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"zh\",\n\t\tname: \"Chinese (Simplified)\",\n\t\tnative: \"简体中文\",\n\t\twriting_system: \"Simplied Han\",\n\t},\n\t{\n\t\tcode: \"zh-TW\",\n\t\tname: \"Chinese (Traditional)\",\n\t\tnative: \"繁體中文\",\n\t\twriting_system: \"Traditional Han\",\n\t},\n\t{\n\t\tcode: \"zu\",\n\t\tname: \"Zulu\",\n\t\tnative: \"isiZulu\",\n\t\twriting_system: \"Latin\",\n\t},\n];\n","import { languages } from \"../constants/languages\";\nfunction generateHashForContent(nodes: Node[]): string {\n\tconst content = nodes\n\t\t.map((node) => {\n\t\t\tif (node.nodeType === Node.TEXT_NODE) {\n\t\t\t\tconst parent = node.parentElement as HTMLElement | null;\n\t\t\t\t// Use original text if available, else current text\n\t\t\t\tif (parent && parent.hasAttribute(\"data-original-text\")) {\n\t\t\t\t\treturn parent\n\t\t\t\t\t\t.getAttribute(\"data-original-text\")\n\t\t\t\t\t\t?.replace(/\\s+/g, \" \")\n\t\t\t\t\t\t.trim();\n\t\t\t\t}\n\t\t\t\treturn node.textContent\n\t\t\t\t\t?.replace(/\\s+/g, \" \")\n\t\t\t\t\t.trim()\n\t\t\t\t\t.toLocaleLowerCase();\n\t\t\t}\n\t\t})\n\t\t.join(\" \")\n\t\t.trim();\n\n\tconst hash = murmurhash3_32_gc(content.toLowerCase(), 42).toString(16);\n\treturn hash;\n}\n\nfunction murmurhash3_32_gc(key: string, seed: number) {\n\tlet remainder = key.length & 3,\n\t\tbytes = key.length - remainder;\n\tlet h1 = seed,\n\t\tc1 = 0xcc9e2d51,\n\t\tc2 = 0x1b873593;\n\tlet i = 0;\n\n\twhile (i < bytes) {\n\t\tlet k1 =\n\t\t\t(key.charCodeAt(i) & 0xff) |\n\t\t\t((key.charCodeAt(++i) & 0xff) << 8) |\n\t\t\t((key.charCodeAt(++i) & 0xff) << 16) |\n\t\t\t((key.charCodeAt(++i) & 0xff) << 24);\n\t\t++i;\n\n\t\tk1 =\n\t\t\t((k1 & 0xffff) * c1 + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n\t\tk1 = (k1 << 15) | (k1 >>> 17);\n\t\tk1 =\n\t\t\t((k1 & 0xffff) * c2 + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n\n\t\th1 ^= k1;\n\t\th1 = (h1 << 13) | (h1 >>> 19);\n\t\tconst h1b =\n\t\t\t((h1 & 0xffff) * 5 + ((((h1 >>> 16) * 5) & 0xffff) << 16)) & 0xffffffff;\n\t\th1 = (h1b & 0xffff) + 0x6b64 + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16);\n\t}\n\n\tlet k1 = 0;\n\n\tswitch (remainder) {\n\t\t//@ts-expect-error - this is a valid case\n\t\tcase 3:\n\t\t\tk1 ^= key.charCodeAt(i + 2) << 16;\n\t\t//@ts-expect-error - this is a valid case\n\t\tcase 2:\n\t\t\tk1 ^= key.charCodeAt(i + 1) << 8;\n\t\tcase 1:\n\t\t\tk1 ^= key.charCodeAt(i);\n\t\t\tk1 =\n\t\t\t\t((k1 & 0xffff) * c1 + ((((k1 >>> 16) * c1) & 0xffff) << 16)) &\n\t\t\t\t0xffffffff;\n\t\t\tk1 = (k1 << 15) | (k1 >>> 17);\n\t\t\tk1 =\n\t\t\t\t((k1 & 0xffff) * c2 + ((((k1 >>> 16) * c2) & 0xffff) << 16)) &\n\t\t\t\t0xffffffff;\n\t\t\th1 ^= k1;\n\t}\n\n\th1 ^= key.length;\n\th1 ^= h1 >>> 16;\n\th1 =\n\t\t((h1 & 0xffff) * 0x85ebca6b +\n\t\t\t((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) &\n\t\t0xffffffff;\n\th1 ^= h1 >>> 13;\n\th1 =\n\t\t((h1 & 0xffff) * 0xc2b2ae35 +\n\t\t\t((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16)) &\n\t\t0xffffffff;\n\th1 ^= h1 >>> 16;\n\n\treturn h1 >>> 0;\n}\n\nfunction getVisibleTextContent(element: HTMLElement): string {\n\t// Get all child text nodes that are not inside .sr-only or [aria-hidden=\"true\"]\n\tlet text = \"\";\n\telement.childNodes.forEach((node) => {\n\t\tif (\n\t\t\tnode.nodeType === Node.TEXT_NODE &&\n\t\t\t!(\n\t\t\t\telement.classList.contains(\"sr-only\") ||\n\t\t\t\telement.getAttribute(\"aria-hidden\") === \"true\"\n\t\t\t)\n\t\t) {\n\t\t\ttext += node.textContent;\n\t\t}\n\t\tif (\n\t\t\tnode.nodeType === Node.ELEMENT_NODE &&\n\t\t\t!(node as HTMLElement).classList.contains(\"sr-only\") &&\n\t\t\t(node as HTMLElement).getAttribute(\"aria-hidden\") !== \"true\"\n\t\t) {\n\t\t\ttext += getVisibleTextContent(node as HTMLElement);\n\t\t}\n\t});\n\treturn text.trim();\n}\n\nconst removeEmojis = (text: string) =>\n\ttext.replace(/[\\p{Emoji_Presentation}\\p{Extended_Pictographic}]/gu, \"\");\n\nconst getUserLanguage = () => {\n\tconst userLanguages = window.navigator.languages;\n\tconst userLanguage = languages.find((lang) =>\n\t\tuserLanguages.includes(lang.code),\n\t);\n\treturn userLanguage?.code || \"en\";\n};\n\nexport {\n\tgenerateHashForContent,\n\tgetVisibleTextContent,\n\tremoveEmojis,\n\tgetUserLanguage,\n};\n","// type TreeWalkerFilter = (node: Node) => number\n\ninterface NodeProcessor {\n\tacceptNode(node: Node): number;\n}\n\nimport { removeEmojis } from \"../../utils/utils\";\n\nexport class DocumentNavigator {\n\t/**\n\t * Retrieves text nodes eligible for translation from the document\n\t * @returns Collection of text nodes ready for translation\n\t */\n\tstatic findTranslatableContent(): Text[] {\n\t\t// Skip during server-side rendering\n\t\tif (typeof window === \"undefined\") {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst validator: NodeProcessor = {\n\t\t\tacceptNode(node: Node): number {\n\t\t\t\tif (node.nodeType !== Node.TEXT_NODE) {\n\t\t\t\t\t// Log non-text nodes\n\t\t\t\t\treturn NodeFilter.FILTER_REJECT;\n\t\t\t\t}\n\n\t\t\t\tconst container = (node as Text).parentElement;\n\t\t\t\tif (!container) {\n\t\t\t\t\treturn NodeFilter.FILTER_REJECT;\n\t\t\t\t}\n\n\t\t\t\t// Skip if any ancestor has aria-hidden=\"true\"\n\t\t\t\tif (container.closest('[aria-hidden=\"true\"]')) {\n\t\t\t\t\treturn NodeFilter.FILTER_REJECT;\n\t\t\t\t}\n\n\t\t\t\t// // check if the classname is sr-only\n\t\t\t\tif (container.classList.contains(\"sr-only\")) {\n\t\t\t\t\treturn NodeFilter.FILTER_REJECT;\n\t\t\t\t}\n\n\t\t\t\tconst shouldSkip =\n\t\t\t\t\tcontainer.closest(\"script, style, code\") !== null ||\n\t\t\t\t\tcontainer.closest(\"next-route-announcer\") !== null ||\n\t\t\t\t\tcontainer.closest(\".jigts-translation-widget\") !== null ||\n\t\t\t\t\tcontainer.closest(\".jigts-widget-trigger\") !== null ||\n\t\t\t\t\tcontainer.closest(\".jigts-widget-dropdown\") !== null ||\n\t\t\t\t\tcontainer.closest(\".notranslate\") !== null ||\n\t\t\t\t\t!node.textContent?.trim();\n\t\t\t\treturn shouldSkip ? NodeFilter.FILTER_REJECT : NodeFilter.FILTER_ACCEPT;\n\t\t\t},\n\t\t};\n\n\t\tconst navigator = document.createTreeWalker(\n\t\t\tdocument.body,\n\t\t\tNodeFilter.SHOW_TEXT,\n\t\t\tvalidator,\n\t\t);\n\n\t\tconst results: Text[] = [];\n\t\tlet currentNode: Node | null;\n\n\t\twhile ((currentNode = navigator.nextNode())) {\n\t\t\tif (currentNode.nodeType === Node.TEXT_NODE) {\n\t\t\t\tlet text = currentNode.textContent?.trim() || \"\";\n\t\t\t\tconst parentElement = currentNode.parentElement;\n\t\t\t\tif (parentElement) {\n\t\t\t\t\tconst originalText = parentElement.getAttribute(\"data-original-text\");\n\t\t\t\t\tif (originalText) {\n\t\t\t\t\t\ttext = originalText;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * Skip the content if\n\t\t\t\t * 1. the content if empty\n\t\t\t\t * 2. the content is only one character in length\n\t\t\t\t * 3. the content is only an emoji\n\t\t\t\t */\n\t\t\t\tconst textWithoutEmojis = removeEmojis(text);\n\t\t\t\tif (\n\t\t\t\t\ttext.length === 0 ||\n\t\t\t\t\ttext.length === 1 ||\n\t\t\t\t\ttextWithoutEmojis.length === 0\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tresults.push(currentNode as Text);\n\t\t\t}\n\t\t}\n\n\t\treturn results;\n\t}\n\n\t/**\n\t * Divides a collection into smaller groups\n\t * @param items Collection to divide\n\t * @param groupSize Maximum size of each group\n\t * @returns Array of item groups\n\t */\n\tstatic divideIntoGroups<T>(items: T[], groupSize: number): T[][] {\n\t\tconst groups: T[][] = [];\n\n\t\tfor (let i = 0; i < items.length; i += groupSize) {\n\t\t\tgroups.push(items.slice(i, i + groupSize));\n\t\t}\n\n\t\treturn groups;\n\t}\n\n\t/**\n\t * Determines if a node contains translatable text\n\t * @param node Node to evaluate\n\t * @returns Whether the node contains translatable content\n\t */\n\tstatic containsTranslatableContent(node: Node): node is Text {\n\t\tif (node.nodeType !== Node.TEXT_NODE) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst container = node.parentElement;\n\t\tif (!container) {\n\t\t\treturn false;\n\t\t}\n\t\treturn !(\n\t\t\tcontainer.tagName === \"SCRIPT\" ||\n\t\t\tcontainer.tagName === \"STYLE\" ||\n\t\t\tcontainer.tagName === \"CODE\" ||\n\t\t\tcontainer.tagName === \"next-route-announcer\" ||\n\t\t\tcontainer.closest(\".translate-widget\") ||\n\t\t\tcontainer.closest(\".notranslate\") ||\n\t\t\t!node.textContent?.trim()\n\t\t);\n\t}\n\n\t/**\n\t * Retrieves the containing element of a node\n\t * @param node Node to find container for\n\t * @returns Containing element or null if none exists\n\t */\n\tstatic getContainer(node: Node): HTMLElement | null {\n\t\treturn node.parentElement;\n\t}\n}\n","export const MAX_CACHE_SIZE = 1000;\nexport const BATCH_SIZE = 10;\nexport const CACHE_PREFIX = \"jss-\";\n\nexport const DEFAULT_CONFIG = {\n\tprimaryColor: \"#2563eb\",\n\tpageLanguage: \"en\",\n\tautoDetectLanguage: false,\n\tposition: \"top-right\" as const,\n};\n","export default \"<!-- Widget Trigger Button -->\\n<div class=\\\"jigts-widget-trigger\\\" tabindex=\\\"0\\\" role=\\\"button\\\" aria-label=\\\"Open translation menu\\\" aria-expanded=\\\"false\\\">\\n    <!-- Normal State -->\\n    <div class=\\\"jigts-trigger-content\\\">\\n        <span class=\\\"jigts-trigger-icon\\\">\\n            <svg class=\\\"jigts-languages-icon\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                    d=\\\"M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129\\\">\\n                </path>\\n            </svg>\\n        </span>\\n    </div>\\n\\n    <!-- Loading State (hidden by default) -->\\n    <div class=\\\"jigts-trigger-loading\\\" style=\\\"display: none;\\\">\\n        <div class=\\\"jigts-loading-spinner\\\"></div>\\n    </div>\\n</div>\\n\\n<!-- Dropdown Menu -->\\n<div class=\\\"jigts-widget-dropdown\\\">\\n    <!-- Header -->\\n    <div class=\\\"jigts-dropdown-header\\\">\\n        <div class=\\\"jigts-dropdown-title\\\">\\n            <div class=\\\"jigts-title-left\\\">\\n                <svg class=\\\"jigts-languages-icon\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                        d=\\\"M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129\\\">\\n                    </path>\\n                </svg>\\n                <span class=\\\"jigts-title-text\\\">Select Language</span>\\n            </div>\\n            <div class=\\\"jigts-language-count\\\">{{languageCount}} languages</div>\\n        </div>\\n\\n        <!-- Search Input -->\\n        <div class=\\\"jigts-search-container\\\">\\n            <svg class=\\\"jigts-search-icon\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                    d=\\\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\\\"></path>\\n            </svg>\\n            <input type=\\\"text\\\" class=\\\"jigts-search-input\\\" placeholder=\\\"Search languages...\\\" aria-label=\\\"Search languages\\\">\\n            <svg class=\\\"jigts-clear-search\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\" d=\\\"M6 18L18 6M6 6l12 12\\\">\\n                </path>\\n            </svg>\\n        </div>\\n    </div>\\n\\n    <!-- Reset Option -->\\n    <div class=\\\"jigts-reset-option\\\" tabindex=\\\"0\\\" role=\\\"button\\\" aria-label=\\\"Reset to original language\\\">\\n        <svg class=\\\"jigts-reset-icon\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                d=\\\"M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6\\\"></path>\\n        </svg>\\n        <div class=\\\"jigts-reset-text\\\">\\n            <span class=\\\"jigts-reset-title\\\">Original Language</span>\\n            <span class=\\\"jigts-reset-subtitle\\\">Reset translation</span>\\n        </div>\\n    </div>\\n\\n    <!-- Language List -->\\n    <div class=\\\"jigts-language-list\\\">\\n        {{languageOptions}}\\n        <div class=\\\"jigts-no-results\\\" style=\\\"display: none;\\\">\\n            <svg class=\\\"jigts-no-results-icon\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                    d=\\\"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\\\"></path>\\n            </svg>\\n            <span>No languages found</span>\\n        </div>\\n    </div>\\n</div>\"","// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.5\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n} else if( typeof angular !== 'undefined' && angular != null ) {\n  angular.module('LZString', [])\n  .factory('LZString', function () {\n    return LZString;\n  });\n}\n","import LZString from \"lz-string\";\n\nexport class LocalStorageWrapper {\n\tprivate prefix: string;\n\tprivate readonly COMPRESSION_THRESHOLD = 10000;\n\tprivate readonly COMPRESSION_MARKER = \"__COMPRESSED__\";\n\n\tconstructor(prefix = \"\") {\n\t\tthis.prefix = prefix;\n\t}\n\n\tgetKey(hash: string, url: string, targetLang: string): string {\n\t\t// get rid of query params\n\t\tconst urlWithoutQuery = url.split(\"?\")[0];\n\t\t// Only encode the URL, not the whole key\n\t\treturn `${hash}-${encodeURIComponent(urlWithoutQuery)}-${targetLang}`;\n\t}\n\n\tprivate shouldCompress(value: string): boolean {\n\t\treturn value.length > this.COMPRESSION_THRESHOLD;\n\t}\n\n\tprivate compress(value: string): string {\n\t\ttry {\n\t\t\treturn LZString.compressToBase64(value);\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Compression failed:\", error);\n\t\t\treturn value;\n\t\t}\n\t}\n\n\tprivate decompress(value: string): string {\n\t\ttry {\n\t\t\treturn LZString.decompressFromBase64(value) || value;\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Decompression failed:\", error);\n\t\t\treturn value;\n\t\t}\n\t}\n\n\tgetItem(key: string): any {\n\t\tconst prefixedKey = this.prefix + key;\n\t\tconst item = localStorage.getItem(prefixedKey);\n\t\tif (!item) return null;\n\n\t\ttry {\n\t\t\t// Check if the item is compressed\n\t\t\tconst decompressed = item.startsWith(this.COMPRESSION_MARKER)\n\t\t\t\t? this.decompress(item.slice(this.COMPRESSION_MARKER.length))\n\t\t\t\t: item;\n\t\t\treturn JSON.parse(decompressed);\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Error parsing cached item:\", e);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tsetItem(key: string, value: any): void {\n\t\tconst prefixedKey = this.prefix + key;\n\t\tconst stringified = JSON.stringify(value);\n\n\t\t// Use requestIdleCallback to defer compression if available\n\t\tconst storeValue = () => {\n\t\t\ttry {\n\t\t\t\tconst finalValue = this.shouldCompress(stringified)\n\t\t\t\t\t? `${this.COMPRESSION_MARKER}${this.compress(stringified)}`\n\t\t\t\t\t: stringified;\n\t\t\t\tlocalStorage.setItem(prefixedKey, finalValue);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\"Error storing item:\", error);\n\t\t\t\t// Fallback to storing uncompressed value\n\t\t\t\tlocalStorage.setItem(prefixedKey, stringified);\n\t\t\t}\n\t\t};\n\n\t\tif (typeof requestIdleCallback !== \"undefined\") {\n\t\t\trequestIdleCallback(() => storeValue());\n\t\t} else {\n\t\t\t// Fallback to setTimeout if requestIdleCallback is not available\n\t\t\tsetTimeout(storeValue, 0);\n\t\t}\n\t}\n\n\tremoveItem(key: string): void {\n\t\tconst prefixedKey = this.prefix + key;\n\t\tlocalStorage.removeItem(prefixedKey);\n\t}\n\n\tclear(): void {\n\t\tif (this.prefix) {\n\t\t\tfor (let key in localStorage) {\n\t\t\t\tif (key.startsWith(this.prefix)) {\n\t\t\t\t\tlocalStorage.removeItem(key);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tlocalStorage.clear();\n\t\t}\n\t}\n\n\tkey(index: number): string | null {\n\t\treturn localStorage.key(index);\n\t}\n\n\tget length(): number {\n\t\treturn localStorage.length;\n\t}\n}\n","import { TranslationService } from \"../lib/translation/index\";\nimport { DocumentNavigator } from \"../lib/dom\";\nimport { languages } from \"../constants/languages\";\nimport { BATCH_SIZE, DEFAULT_CONFIG } from \"../constants\";\nimport type { Language, TranslationConfig } from \"../types\";\nimport widgetTemplate from \"../templates/html/widget.html?raw\";\nimport {\n\tgenerateHashForContent,\n\tgetUserLanguage,\n\tremoveEmojis,\n} from \"../utils/utils\";\nimport { CACHE_PREFIX } from \"../constants\";\nimport { LocalStorageWrapper } from \"../lib/storage/localstorage\";\n// import emojiRegex from 'emoji-regex'\ninterface WidgetElements {\n\ttrigger: HTMLDivElement | null;\n\tdropdown: HTMLDivElement | null;\n\tsearchInput: HTMLInputElement | null;\n\tclearSearch: HTMLDivElement | null;\n\tlanguageItems: NodeListOf<HTMLDivElement> | null;\n\tloadingIndicator: HTMLDivElement | null;\n}\n\ninterface TranslationResult {\n\tsuccess: boolean;\n\ttargetLanguage: string;\n\ttranslatedNodes: number;\n\terror?: string;\n\tduration?: number;\n}\n\nexport class TranslationWidget {\n\tprivate config: Required<TranslationConfig>;\n\tprivate translationService: TranslationService;\n\tprivate currentLanguage: string;\n\tprivate widget: HTMLDivElement;\n\tprivate elements: WidgetElements;\n\tprivate autoDetectLanguage: boolean;\n\tprivate isTranslated: boolean = false;\n\tprivate userLanguage: string;\n\tprivate isTranslating: boolean = false;\n\tprivate observer: MutationObserver | null = null;\n\tprivate translationScheduled: boolean = false;\n\tprivate scheduleTimeout: number | null = null;\n\tprivate lastTranslated: { url: string; lang: string; hash: string } | null =\n\t\tnull;\n\tprivate static instance: TranslationWidget | null = null;\n\tprivate currentTranslationPromise: Promise<void> | null = null;\n\tprivate lastRequestedLanguage: string | null = null;\n\tprivate translationRequestId: number = 0;\n\n\tconstructor(publicKey: string, config: Partial<TranslationConfig> = {}) {\n\t\tconst allowedPositions = [\n\t\t\t\"top-right\",\n\t\t\t\"top-left\",\n\t\t\t\"bottom-left\",\n\t\t\t\"bottom-right\",\n\t\t] as const;\n\t\tlet safeConfig = { ...DEFAULT_CONFIG, ...config };\n\t\tif (\n\t\t\tsafeConfig.position &&\n\t\t\t!allowedPositions.includes(safeConfig.position)\n\t\t) {\n\t\t\tconsole.warn(\n\t\t\t\t`Invalid position '${safeConfig.position}' passed to TranslationWidget. Falling back to 'top-right'.`,\n\t\t\t);\n\t\t\tsafeConfig.position = \"top-right\";\n\t\t}\n\t\tthis.config = safeConfig as Required<TranslationConfig>;\n\n\t\tif (!publicKey) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Public key is required to initialize the translation widget\",\n\t\t\t);\n\t\t}\n\n\t\tif (publicKey.startsWith(\"sk_\")) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Please use public api key for security reasons. You can get one from https://jigsawstack.com\",\n\t\t\t);\n\t\t}\n\n\t\tif (!publicKey.startsWith(\"pk_\")) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Please use proper api key. You can get one from https://jigsawstack.com\",\n\t\t\t);\n\t\t}\n\n\t\tthis.translationService = new TranslationService(publicKey);\n\t\tthis.autoDetectLanguage = this.config.autoDetectLanguage || false;\n\t\tthis.currentLanguage = this.config.pageLanguage || \"en\";\n\t\tthis.userLanguage = getUserLanguage();\n\t\tthis.widget = document.createElement(\"div\");\n\t\tthis.elements = {\n\t\t\ttrigger: null,\n\t\t\tdropdown: null,\n\t\t\tsearchInput: null,\n\t\t\tclearSearch: null,\n\t\t\tlanguageItems: null,\n\t\t\tloadingIndicator: null,\n\t\t};\n\t\tthis.initialize();\n\t\tTranslationWidget.instance = this;\n\t}\n\n\tprivate initialize(): void {\n\t\tif (!this.validateConfig()) return;\n\n\t\t// Get language from URL parameter\n\t\tconst urlLang = this.getUrlParameter(\"lang\");\n\t\tlet initialLang = this.config.pageLanguage;\n\t\tif (urlLang) {\n\t\t\tconst supportedLang = languages.find((lang) => lang.code === urlLang);\n\t\t\tif (supportedLang) {\n\t\t\t\tinitialLang = urlLang;\n\t\t\t}\n\t\t} else {\n\t\t\t// Check localStorage for preferred language\n\t\t\tconst prefLang = localStorage.getItem(\"jss-pref\");\n\t\t\tif (prefLang && languages.find((lang) => lang.code === prefLang)) {\n\t\t\t\tinitialLang = prefLang;\n\t\t\t} else if (this.autoDetectLanguage) {\n\t\t\t\tinitialLang = this.userLanguage;\n\t\t\t}\n\t\t}\n\t\tthis.currentLanguage = initialLang;\n\t\tthis.createWidget();\n\t\t// Update icon if not default language\n\t\tconst triggerIcon = this.elements.trigger?.querySelector(\n\t\t\t\".jigts-trigger-icon\",\n\t\t);\n\t\tif (triggerIcon && this.currentLanguage !== this.config.pageLanguage) {\n\t\t\t// Find the language name\n\t\t\tconst langObj = languages.find(\n\t\t\t\t(lang) => lang.code === this.currentLanguage,\n\t\t\t);\n\t\t\tconst langName = langObj\n\t\t\t\t? langObj.name\n\t\t\t\t: this.currentLanguage.toUpperCase();\n\t\t\ttriggerIcon.innerHTML = `<span class=\\\"jigts-lang-code\\\">${this.currentLanguage.toUpperCase()}</span><span class=\\\"jigts-lang-name\\\">${langName}</span>`;\n\t\t}\n\t\tthis.setupEventListeners();\n\t\tthis.setupURLObserver();\n\t\tthis.setupContentObserver();\n\n\t\t// Trigger translation immediately if language is different from page language\n\t\tif (this.currentLanguage !== this.config.pageLanguage) {\n\t\t\tthis.translatePage(this.currentLanguage).catch((error) => {\n\t\t\t\tconsole.error(\"Initial translation error:\", error);\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate getUrlParameter(name: string): string | null {\n\t\tconst urlParams = new URLSearchParams(window.location.search);\n\t\treturn urlParams.get(name);\n\t}\n\n\tprivate setupContentObserver(): void {\n\t\tthis.observer = new MutationObserver((mutations) => {\n\t\t\tmutations.forEach((mutation) => {\n\t\t\t\tif (this.widget.contains(mutation.target)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tmutation.type === \"characterData\" ||\n\t\t\t\t\t(mutation.type === \"childList\" &&\n\t\t\t\t\t\tArray.from(mutation.addedNodes).some(\n\t\t\t\t\t\t\t(node) => node.nodeType === Node.TEXT_NODE,\n\t\t\t\t\t\t))\n\t\t\t\t) {\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (this.isTranslating) return;\n\t\t\tthis.scheduleTranslation();\n\t\t});\n\t\tthis.observeBody();\n\t}\n\n\tprivate observeBody() {\n\t\tthis.observer?.observe(document.body, {\n\t\t\tchildList: true,\n\t\t\tsubtree: true,\n\t\t\tattributes: true,\n\t\t\tcharacterData: true,\n\t\t});\n\t}\n\n\tprivate onUrlChange = () => {\n\t\tthis.scheduleTranslation();\n\t};\n\n\tprivate setupURLObserver(): void {\n\t\tconst historyMethods = [\"pushState\", \"replaceState\"] as const;\n\n\t\thistoryMethods.forEach((method) => {\n\t\t\tconst original = history[method];\n\t\t\thistory[method] = function (\n\t\t\t\tstate: any,\n\t\t\t\ttitle: string,\n\t\t\t\turl?: string | URL | null,\n\t\t\t) {\n\t\t\t\tconst result = original.call(this, state, title, url);\n\t\t\t\twindow.dispatchEvent(new Event(method));\n\t\t\t\treturn result;\n\t\t\t};\n\t\t\twindow.addEventListener(method, this.onUrlChange);\n\t\t});\n\n\t\t// Also listen for popstate events (browser back/forward)\n\t\twindow.addEventListener(\"popstate\", this.onUrlChange);\n\t}\n\n\tprivate validateConfig(): boolean {\n\t\tif (!this.translationService) {\n\t\t\tconsole.error(\n\t\t\t\t\"Translation service is required to initialize the translation widget\",\n\t\t\t);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate createWidget(): void {\n\t\tconst currentLanguageLabel = this.getCurrentLanguageLabel();\n\n\t\t// Create widget element\n\t\tthis.widget = document.createElement(\"div\");\n\t\tthis.widget.className = `jigts-translation-widget jigts-position-${this.config.position || \"top-right\"}`;\n\n\t\t// Apply theme colors if provided\n\t\tif (this.config.theme) {\n\t\t\tif (this.config.theme.baseColor) {\n\t\t\t\tthis.widget.style.setProperty(\n\t\t\t\t\t\"--jigts-custom-base-color\",\n\t\t\t\t\tthis.config.theme.baseColor,\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (this.config.theme.textColor) {\n\t\t\t\tthis.widget.style.setProperty(\n\t\t\t\t\t\"--jigts-custom-text-color\",\n\t\t\t\t\tthis.config.theme.textColor,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tdocument.body.appendChild(this.widget);\n\n\t\tthis.widget.innerHTML = this.createWidgetHTML(currentLanguageLabel);\n\n\t\t// Cache element references\n\t\tthis.elements = {\n\t\t\ttrigger: this.widget.querySelector<HTMLDivElement>(\n\t\t\t\t\".jigts-widget-trigger\",\n\t\t\t),\n\t\t\tdropdown: this.widget.querySelector<HTMLDivElement>(\n\t\t\t\t\".jigts-widget-dropdown\",\n\t\t\t),\n\t\t\tsearchInput: this.widget.querySelector<HTMLInputElement>(\n\t\t\t\t\".jigts-search-input\",\n\t\t\t),\n\t\t\tclearSearch: this.widget.querySelector<HTMLDivElement>(\n\t\t\t\t\".jigts-clear-search\",\n\t\t\t),\n\t\t\tlanguageItems: this.widget.querySelectorAll<HTMLDivElement>(\n\t\t\t\t\".jigts-language-item\",\n\t\t\t),\n\t\t\tloadingIndicator: this.widget.querySelector<HTMLDivElement>(\n\t\t\t\t\".jigts-loading-spinner\",\n\t\t\t),\n\t\t};\n\n\t\t// Initialize trigger text with fade-in class\n\t\tconst triggerSpan = this.elements.trigger?.querySelector(\"span\");\n\t\tif (triggerSpan) {\n\t\t\ttriggerSpan.classList.add(\"jigts-fade-in\");\n\t\t}\n\t}\n\n\tprivate getCurrentLanguageLabel(): string {\n\t\treturn (\n\t\t\tlanguages.find(\n\t\t\t\t(language: Language) => language.code === this.currentLanguage,\n\t\t\t)?.native || \"English\"\n\t\t);\n\t}\n\n\tprivate createWidgetHTML(currentLanguageLabel: string): string {\n\t\tconst languageOptions = this.createLanguageOptions();\n\t\tconst languageCount = languages.length;\n\t\treturn widgetTemplate\n\t\t\t.replace(\"{{languageOptions}}\", languageOptions)\n\t\t\t.replace(\"{{currentLanguageLabel}}\", currentLanguageLabel)\n\t\t\t.replace(\"{{languageCount}}\", languageCount.toString());\n\t}\n\n\tprivate createLanguageOptions(): string {\n\t\tconst currentLang = this.currentLanguage;\n\t\tconst currentLanguage = languages.find(\n\t\t\t(lang: Language) => lang.code === currentLang,\n\t\t);\n\t\tconst otherLanguages = languages\n\t\t\t.filter((lang: Language) => lang.code !== currentLang)\n\t\t\t.sort((a: Language, b: Language) => a.native.localeCompare(b.native));\n\n\t\tif (!currentLanguage) return \"\";\n\n\t\tconst createLanguageItem = (\n\t\t\tlang: Language,\n\t\t\tisSelected: boolean = false,\n\t\t) => `\n            <div class=\"jigts-language-item ${isSelected ? \"jigts-selected\" : \"\"}\" tabindex=\"0\" role=\"option\" aria-selected=\"${isSelected}\" data-language-code=\"${lang.code}\">\n                <div class=\"jigts-language-info\">\n                    <div class=\"jigts-language-main\">\n                        <span class=\"jigts-language-name\">${lang.name}</span>\n                        <div class=\"jigts-language-code\">${lang.code}</div>\n                    </div>\n                    <div class=\"jigts-language-details\">\n                        <span class=\"jigts-language-native\">${lang.native}</span>\n                    </div>\n                </div>\n                <svg class=\"jigts-check-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path>\n                </svg>\n            </div>\n        `;\n\n\t\treturn `\n            ${createLanguageItem(currentLanguage, true)}\n            ${otherLanguages.map((lang) => createLanguageItem(lang)).join(\"\")}\n        `;\n\t}\n\n\tprivate async updateTriggerText(newText: string): Promise<void> {\n\t\tconst triggerSpan = this.elements.trigger?.querySelector(\"span\");\n\t\tif (!triggerSpan) return;\n\n\t\t// Force a reflow to ensure the animation plays\n\t\ttriggerSpan.offsetHeight;\n\n\t\t// Start fade out\n\t\ttriggerSpan.classList.remove(\"jigts-fade-in\");\n\t\ttriggerSpan.classList.add(\"jigts-fade-out\");\n\n\t\t// Wait for fade out\n\t\tawait new Promise((resolve) => setTimeout(resolve, 300));\n\n\t\t// Update text\n\t\ttriggerSpan.textContent = newText;\n\n\t\t// Force a reflow\n\t\ttriggerSpan.offsetHeight;\n\n\t\t// Start fade in\n\t\ttriggerSpan.classList.remove(\"jigts-fade-out\");\n\t\ttriggerSpan.classList.add(\"jigts-fade-in\");\n\t}\n\n\tprivate getTextToTranslate(\n\t\tnode: Text,\n\t\tparent: HTMLElement,\n\t\ttargetLang: string,\n\t): string | null {\n\t\tif (!parent.hasAttribute(\"data-original-text\")) {\n\t\t\tconst originalText = node.textContent?.trim();\n\t\t\tif (originalText) {\n\t\t\t\tparent.setAttribute(\"data-translated-lang\", targetLang);\n\t\t\t\tparent.setAttribute(\"data-original-text\", originalText);\n\t\t\t\t// Store original font size if not already stored\n\t\t\t\tif (!parent.hasAttribute(\"data-original-font-size\")) {\n\t\t\t\t\tconst computedStyle = window.getComputedStyle(parent);\n\t\t\t\t\tparent.setAttribute(\n\t\t\t\t\t\t\"data-original-font-size\",\n\t\t\t\t\t\tcomputedStyle.fontSize,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn originalText;\n\t\t\t}\n\t\t} else {\n\t\t\tconst textToTranslate = node.textContent?.trim();\n\t\t\tif (this.currentLanguage !== \"en\" && targetLang !== \"en\") {\n\t\t\t\tparent.setAttribute(\"data-translated-lang\", targetLang);\n\t\t\t\treturn parent.getAttribute(\"data-original-text\");\n\t\t\t}\n\t\t\treturn textToTranslate || null;\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate calculateFontSize(\n\t\ttext: string,\n\t\toriginalFontSize: string,\n\t\toriginalText: string,\n\t): string {\n\t\tconst baseFontSize = 12; // Minimum font size in pixels\n\t\tconst maxFontSize = parseInt(originalFontSize); // Maximum font size is the original size\n\t\tconst textLength = text.length;\n\t\tconst originalLength = originalText.length;\n\n\t\t// Only scale down if translated text is longer than original\n\t\tif (textLength <= originalLength) {\n\t\t\treturn originalFontSize;\n\t\t}\n\n\t\t// Calculate font size based on text length\n\t\t// The longer the text, the smaller the font size\n\t\t// We use a logarithmic scale to make the reduction more gradual\n\t\tconst fontSize = Math.max(\n\t\t\tbaseFontSize,\n\t\t\tMath.min(maxFontSize, maxFontSize * (1 - Math.log(textLength) / 10)),\n\t\t);\n\n\t\treturn `${fontSize}px`;\n\t}\n\n\tprivate updateLoadingState(isLoading: boolean): void {\n\t\tconst triggerContent = this.elements.trigger?.querySelector<HTMLDivElement>(\n\t\t\t\".jigts-trigger-content\",\n\t\t);\n\t\tconst triggerLoading = this.elements.trigger?.querySelector<HTMLDivElement>(\n\t\t\t\".jigts-trigger-loading\",\n\t\t);\n\t\tif (triggerContent && triggerLoading) {\n\t\t\tif (isLoading) {\n\t\t\t\ttriggerContent.style.display = \"none\";\n\t\t\t\ttriggerLoading.style.display = \"flex\";\n\t\t\t} else {\n\t\t\t\ttriggerLoading.style.display = \"none\";\n\t\t\t\ttriggerContent.style.display = \"flex\";\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async translatePage(targetLang: string): Promise<void> {\n\t\t// Increment the request ID for each new translation\n\t\tconst requestId = ++this.translationRequestId;\n\t\tthis.lastRequestedLanguage = targetLang;\n\t\tthis.updateLoadingState(true);\n\t\t// If there's already a translation in progress, wait for it\n\t\tif (this.currentTranslationPromise) {\n\t\t\tawait this.currentTranslationPromise;\n\t\t}\n\t\t// If target language is the default page language, restore original text\n\t\tif (targetLang === this.config.pageLanguage) {\n\t\t\tthis.resetTranslations();\n\t\t\t// Only hide loader if this is the latest request\n\t\t\tif (requestId === this.translationRequestId) {\n\t\t\t\tthis.updateLoadingState(false);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t// Create a new promise for this translation\n\t\tthis.currentTranslationPromise = this._translatePage(targetLang);\n\t\ttry {\n\t\t\tawait this.currentTranslationPromise;\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Translation failed:\", error);\n\t\t\t// If translation fails, reset to default language\n\t\t\tthis.resetToDefaultLanguage();\n\t\t} finally {\n\t\t\t// Only hide loader if this is the latest request\n\t\t\tif (requestId === this.translationRequestId) {\n\t\t\t\tthis.currentTranslationPromise = null;\n\t\t\t\tthis.updateLoadingState(false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate resetToDefaultLanguage(): void {\n\t\t// Reset translations\n\t\tthis.resetTranslations();\n\n\t\t// Update language states\n\t\tthis.lastRequestedLanguage = this.config.pageLanguage;\n\t\tthis.currentLanguage = this.config.pageLanguage;\n\n\t\t// Update UI\n\t\tconst languageItems = this.widget.querySelectorAll<HTMLElement>(\n\t\t\t\".jigts-language-item\",\n\t\t);\n\t\tlanguageItems.forEach((item) => {\n\t\t\tconst isSelected =\n\t\t\t\titem.getAttribute(\"data-language-code\") === this.config.pageLanguage;\n\t\t\titem.classList.toggle(\"jigts-selected\", isSelected);\n\t\t\titem.setAttribute(\"aria-selected\", isSelected.toString());\n\t\t});\n\n\t\t// Update localStorage preference to original language\n\t\tconsole.log(\"resetToDefaultLanguage\", this.config.pageLanguage);\n\t\tlocalStorage.setItem(\"jss-pref\", this.config.pageLanguage);\n\n\t\t// Update trigger icon\n\t\tconst triggerIcon = this.elements.trigger?.querySelector(\n\t\t\t\".jigts-trigger-icon\",\n\t\t);\n\t\tif (triggerIcon) {\n\t\t\ttriggerIcon.innerHTML = this.getLanguageSVG();\n\t\t}\n\n\t\t// Update translation state\n\t\tthis.isTranslated = false;\n\t\tthis.updateResetButtonVisibility();\n\t}\n\n\tprivate async _translatePage(targetLang: string): Promise<void> {\n\t\tthis.isTranslating = true;\n\t\tthis.observer?.disconnect(); // Pause observing during translation\n\t\ttry {\n\t\t\tconst nodes = DocumentNavigator.findTranslatableContent();\n\t\t\tconst batches = DocumentNavigator.divideIntoGroups(nodes, BATCH_SIZE);\n\n\t\t\tconst cache = new LocalStorageWrapper(CACHE_PREFIX);\n\t\t\tlet hash = generateHashForContent(nodes);\n\t\t\t// Store all nodes and their corresponding texts for each batch\n\t\t\tconst allBatchNodes: Node[][] = [];\n\t\t\tconst allBatchTexts: string[][] = [];\n\n\t\t\t// Prepare batches\n\t\t\tbatches.forEach((batch) => {\n\t\t\t\tconst textsToTranslate: string[] = [];\n\t\t\t\tconst batchNodes: Node[] = [];\n\t\t\t\tbatch.forEach((node: Node) => {\n\t\t\t\t\tif (node.nodeType !== Node.TEXT_NODE) return;\n\t\t\t\t\tconst parent = node.parentElement;\n\t\t\t\t\tif (!parent) return;\n\n\t\t\t\t\tconst translatedLang = parent.getAttribute(\"data-translated-lang\");\n\n\t\t\t\t\t// Skip if parent already has data-original-text and we're not translating to English\n\t\t\t\t\tif (\n\t\t\t\t\t\tparent.hasAttribute(\"data-original-text\") &&\n\t\t\t\t\t\ttargetLang === translatedLang\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet textToTranslate = this.getTextToTranslate(\n\t\t\t\t\t\tnode as Text,\n\t\t\t\t\t\tparent,\n\t\t\t\t\t\ttargetLang,\n\t\t\t\t\t);\n\t\t\t\t\ttextToTranslate = removeEmojis(textToTranslate || \"\");\n\t\t\t\t\tif (textToTranslate.length === 0 || textToTranslate.length === 1) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (textToTranslate) {\n\t\t\t\t\t\ttextsToTranslate.push(textToTranslate.trim());\n\t\t\t\t\t\tbatchNodes.push(node);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tallBatchNodes.push(batchNodes);\n\t\t\t\tallBatchTexts.push(textsToTranslate);\n\t\t\t});\n\n\t\t\t// Only keep non-empty batches\n\t\t\tconst nonEmptyBatchNodes: Node[][] = [];\n\t\t\tconst nonEmptyBatchTexts: string[][] = [];\n\t\t\tallBatchTexts.forEach((texts, i) => {\n\t\t\t\tif (texts.length > 0) {\n\t\t\t\t\tnonEmptyBatchTexts.push(texts);\n\t\t\t\t\tnonEmptyBatchNodes.push(allBatchNodes[i]);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst key = cache.getKey(hash, window.location.href, targetLang);\n\t\t\tconst cachedTranslations = cache.getItem(key);\n\t\t\tif (cachedTranslations && cachedTranslations[0]) {\n\t\t\t\tconst fullTranslations = cachedTranslations[0];\n\t\t\t\t// Only update DOM if this is still the most recently requested language\n\t\t\t\tif (this.lastRequestedLanguage === targetLang) {\n\t\t\t\t\tnodes.forEach((node, idx) => {\n\t\t\t\t\t\tif (node.nodeType === Node.TEXT_NODE) {\n\t\t\t\t\t\t\tconst parent = node.parentElement;\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tconst originalText =\n\t\t\t\t\t\t\t\t\tparent.getAttribute(\"data-original-text\") || \"\";\n\t\t\t\t\t\t\t\tconst originalFontSize =\n\t\t\t\t\t\t\t\t\tparent.getAttribute(\"data-original-font-size\") || \"16px\";\n\t\t\t\t\t\t\t\tconst newFontSize = this.calculateFontSize(\n\t\t\t\t\t\t\t\t\tfullTranslations[idx],\n\t\t\t\t\t\t\t\t\toriginalFontSize,\n\t\t\t\t\t\t\t\t\toriginalText,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tparent.style.fontSize = newFontSize;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnode.textContent = fullTranslations[idx];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tthis.isTranslated = true;\n\t\t\t\t\tthis.updateResetButtonVisibility();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Send all batch requests in parallel\n\t\t\tconst allTranslatedTexts = await Promise.all(\n\t\t\t\tnonEmptyBatchTexts.map((texts) =>\n\t\t\t\t\tthis.translationService.translateBatchText(texts, targetLang),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tif (allTranslatedTexts.length === 0) {\n\t\t\t\tif (this.lastRequestedLanguage === targetLang) {\n\t\t\t\t\tthis.isTranslated = true;\n\t\t\t\t\tthis.updateResetButtonVisibility();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Check if all batches failed (returned original texts)\n\t\t\tconst allBatchesFailed = allTranslatedTexts.every(\n\t\t\t\t(translations, batchIndex) => {\n\t\t\t\t\tconst originalTexts = nonEmptyBatchTexts[batchIndex];\n\t\t\t\t\treturn translations.every(\n\t\t\t\t\t\t(translation, index) => translation === originalTexts[index],\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tif (allBatchesFailed) {\n\t\t\t\tconsole.warn(\"All translations failed, not caching results\");\n\t\t\t\tthrow new Error(\"All translation batches failed\");\n\t\t\t}\n\n\t\t\t// Build a full translation array for all nodes\n\t\t\tconst fullTranslations: string[] = [];\n\t\t\tnodes.forEach((node, nodeIdx) => {\n\t\t\t\tconst parent = node.parentElement as HTMLElement | null;\n\t\t\t\t// Check if this node was included in the API call\n\t\t\t\tconst batchIdx = nonEmptyBatchNodes.findIndex((batch) =>\n\t\t\t\t\tbatch.includes(node),\n\t\t\t\t);\n\t\t\t\tif (batchIdx !== -1) {\n\t\t\t\t\t// This node was translated in this batch\n\t\t\t\t\tconst textIdx = nonEmptyBatchNodes[batchIdx].indexOf(node);\n\t\t\t\t\tconst translatedText = allTranslatedTexts[batchIdx][textIdx];\n\t\t\t\t\tfullTranslations[nodeIdx] = translatedText;\n\n\t\t\t\t\tconsole.log(this.lastRequestedLanguage, targetLang);\n\t\t\t\t\t// Only update DOM if this is still the most recently requested language\n\t\t\t\t\tif (this.lastRequestedLanguage === targetLang) {\n\t\t\t\t\t\t// Apply font size adjustment\n\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\tconst originalText =\n\t\t\t\t\t\t\t\tparent.getAttribute(\"data-original-text\") || \"\";\n\t\t\t\t\t\t\tconst originalFontSize =\n\t\t\t\t\t\t\t\tparent.getAttribute(\"data-original-font-size\") || \"16px\";\n\t\t\t\t\t\t\tconst newFontSize = this.calculateFontSize(\n\t\t\t\t\t\t\t\ttranslatedText,\n\t\t\t\t\t\t\t\toriginalFontSize,\n\t\t\t\t\t\t\t\toriginalText,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tparent.style.fontSize = newFontSize;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnode.textContent = translatedText;\n\t\t\t\t\t}\n\t\t\t\t} else if (\n\t\t\t\t\tparent &&\n\t\t\t\t\tparent.getAttribute(\"data-translated-lang\") === targetLang\n\t\t\t\t) {\n\t\t\t\t\t// Already translated, use current text\n\t\t\t\t\tfullTranslations[nodeIdx] = node.textContent || \"\";\n\t\t\t\t} else {\n\t\t\t\t\tfullTranslations[nodeIdx] = node.textContent || \"\";\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Always cache the translations, even if they're not the most recent\n\t\t\tcache.setItem(key, [fullTranslations]);\n\n\t\t\t// Only update UI state if this is still the most recently requested language\n\t\t\tif (this.lastRequestedLanguage === targetLang) {\n\t\t\t\tthis.isTranslated = true;\n\t\t\t\tthis.updateResetButtonVisibility();\n\t\t\t}\n\t\t} finally {\n\t\t\tthis.isTranslating = false;\n\t\t\tthis.observeBody(); // Resume observing after translation\n\t\t}\n\t}\n\n\tprivate updateResetButtonVisibility(): void {\n\t\tconst resetButton = this.widget.querySelector<HTMLElement>(\n\t\t\t\".jigts-reset-option\",\n\t\t);\n\t\tif (resetButton) {\n\t\t\tresetButton.style.display = this.isTranslated ? \"flex\" : \"none\";\n\t\t}\n\t}\n\n\tresetTranslations(): void {\n\t\tif (this.observer) {\n\t\t\tthis.observer.disconnect();\n\t\t}\n\t\tconst elements = document.querySelectorAll<HTMLElement>(\n\t\t\t\"[data-original-text]\",\n\t\t);\n\t\telements.forEach((element) => {\n\t\t\tconst textNodes = Array.from(element.childNodes).filter(\n\t\t\t\t(node): node is Text => node.nodeType === Node.TEXT_NODE,\n\t\t\t);\n\t\t\tif (textNodes.length > 0) {\n\t\t\t\tconst originalText = element.getAttribute(\"data-original-text\");\n\t\t\t\tif (originalText) {\n\t\t\t\t\ttextNodes[0].textContent = originalText;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Restore original font size\n\t\t\tconst originalFontSize = element.getAttribute(\"data-original-font-size\");\n\t\t\tif (originalFontSize) {\n\t\t\t\telement.style.fontSize = originalFontSize;\n\t\t\t}\n\t\t\telement.removeAttribute(\"data-original-text\");\n\t\t\telement.removeAttribute(\"data-translated-lang\");\n\t\t\telement.removeAttribute(\"data-original-font-size\");\n\t\t});\n\t\tthis.isTranslated = false;\n\n\t\tthis.currentLanguage = this.config.pageLanguage;\n\t\t// Update lastTranslated to reflect the reset state\n\t\tconst nodes = DocumentNavigator.findTranslatableContent();\n\t\tconst hash = generateHashForContent(nodes);\n\t\tthis.lastTranslated = {\n\t\t\turl: window.location.href,\n\t\t\tlang: this.config.pageLanguage,\n\t\t\thash,\n\t\t};\n\n\t\tthis.updateResetButtonVisibility();\n\t\tthis.observeBody(); // Reconnect observer\n\t}\n\n\tprivate adjustDropdownPosition(): void {\n\t\tconst { dropdown, trigger } = this.elements;\n\t\tif (!dropdown || !trigger) return;\n\n\t\tconst triggerRect = trigger.getBoundingClientRect();\n\t\tconst dropdownRect = dropdown.getBoundingClientRect();\n\t\tconst viewportWidth = window.innerWidth;\n\t\tconst viewportHeight = window.innerHeight;\n\n\t\tdropdown.style.top = \"\";\n\t\tdropdown.style.bottom = \"\";\n\t\tdropdown.style.left = \"\";\n\t\tdropdown.style.right = \"\";\n\t\tdropdown.style.transform = \"\";\n\n\t\tconst spaceBelow = viewportHeight - triggerRect.bottom;\n\t\tconst spaceAbove = triggerRect.top;\n\t\tconst spaceRight = viewportWidth - triggerRect.right;\n\t\tconst spaceLeft = triggerRect.left;\n\n\t\t// Determine vertical position\n\t\tif (spaceBelow < dropdownRect.height && spaceAbove > spaceBelow) {\n\t\t\tdropdown.style.bottom = \"100%\";\n\t\t\tdropdown.style.top = \"auto\";\n\t\t\tdropdown.style.marginBottom = \"0.5rem\";\n\t\t\tdropdown.style.marginTop = \"0\";\n\t\t} else {\n\t\t\tdropdown.style.top = \"100%\";\n\t\t\tdropdown.style.bottom = \"auto\";\n\t\t\tdropdown.style.marginTop = \"0.5rem\";\n\t\t\tdropdown.style.marginBottom = \"0\";\n\t\t}\n\n\t\t// Determine horizontal position\n\t\tif (spaceRight < dropdownRect.width && spaceLeft > spaceRight) {\n\t\t\tdropdown.style.right = \"0\";\n\t\t\tdropdown.style.left = \"auto\";\n\t\t} else {\n\t\t\tdropdown.style.left = \"0\";\n\t\t\tdropdown.style.right = \"auto\";\n\t\t}\n\n\t\tconst finalRect = dropdown.getBoundingClientRect();\n\n\t\tif (finalRect.right > viewportWidth) {\n\t\t\tdropdown.style.right = \"0\";\n\t\t\tdropdown.style.left = \"auto\";\n\t\t}\n\n\t\tif (finalRect.left < 0) {\n\t\t\tdropdown.style.left = \"0\";\n\t\t\tdropdown.style.right = \"auto\";\n\t\t}\n\t}\n\n\tprivate setupEventListeners(): void {\n\t\tconst { trigger, dropdown, searchInput, clearSearch, languageItems } =\n\t\t\tthis.elements;\n\n\t\tif (\n\t\t\t!trigger ||\n\t\t\t!dropdown ||\n\t\t\t!searchInput ||\n\t\t\t!clearSearch ||\n\t\t\t!languageItems\n\t\t) {\n\t\t\tconsole.error(\"Failed to find required elements\");\n\t\t\treturn;\n\t\t}\n\n\t\t// Reset button functionality\n\t\tconst resetButton = this.widget.querySelector<HTMLElement>(\n\t\t\t\".jigts-reset-option\",\n\t\t);\n\t\tif (resetButton) {\n\t\t\tresetButton.addEventListener(\"click\", () => {\n\t\t\t\tif (this.isTranslating) return;\n\t\t\t\tthis.resetToDefaultLanguage();\n\t\t\t\tresetButton.classList.remove(\"jigts-active\");\n\t\t\t\tthis.isTranslated = false;\n\t\t\t\tthis.updateResetButtonVisibility();\n\t\t\t\t// Reset language selector to page language\n\t\t\t\tconst languageItems = this.widget.querySelectorAll<HTMLElement>(\n\t\t\t\t\t\".jigts-language-item\",\n\t\t\t\t);\n\t\t\t\tlanguageItems.forEach((item) => {\n\t\t\t\t\tconst isSelected =\n\t\t\t\t\t\titem.getAttribute(\"data-language-code\") ===\n\t\t\t\t\t\tthis.config.pageLanguage;\n\t\t\t\t\titem.classList.toggle(\"jigts-selected\", isSelected);\n\t\t\t\t\titem.setAttribute(\"aria-selected\", isSelected.toString());\n\t\t\t\t});\n\t\t\t\t// Restore SVG icon\n\t\t\t\tconst triggerIcon = this.elements.trigger?.querySelector(\n\t\t\t\t\t\".jigts-trigger-icon\",\n\t\t\t\t);\n\t\t\t\tif (triggerIcon) {\n\t\t\t\t\ttriggerIcon.innerHTML = this.getLanguageSVG();\n\t\t\t\t}\n\t\t\t\t// Close dropdown\n\t\t\t\tdropdown.classList.remove(\"jigts-open\");\n\t\t\t\ttrigger.setAttribute(\"aria-expanded\", \"false\");\n\t\t\t\t// Remove has-translation class\n\t\t\t\tconst triggerContent = trigger.querySelector<HTMLDivElement>(\n\t\t\t\t\t\".jigts-trigger-content\",\n\t\t\t\t);\n\t\t\t\tif (triggerContent)\n\t\t\t\t\ttriggerContent.classList.remove(\"jigts-has-translation\");\n\t\t\t});\n\t\t}\n\n\t\tthis.updateResetButtonVisibility();\n\n\t\ttrigger.addEventListener(\"click\", () => {\n\t\t\tdropdown.classList.toggle(\"jigts-open\");\n\t\t\tconst isOpen = dropdown.classList.contains(\"jigts-open\");\n\t\t\ttrigger.setAttribute(\"aria-expanded\", isOpen.toString());\n\t\t\tif (isOpen) {\n\t\t\t\tthis.adjustDropdownPosition();\n\t\t\t\tsearchInput.focus();\n\t\t\t}\n\t\t});\n\n\t\twindow.addEventListener(\"resize\", () => {\n\t\t\tif (dropdown.classList.contains(\"jigts-open\")) {\n\t\t\t\tthis.adjustDropdownPosition();\n\t\t\t}\n\t\t});\n\n\t\tdocument.addEventListener(\"click\", (e: MouseEvent) => {\n\t\t\tif (!(e.target as Element).closest(\".jigts-translation-widget\")) {\n\t\t\t\tif (dropdown.classList.contains(\"jigts-open\")) {\n\t\t\t\t\tdropdown.classList.add(\"jigts-closing\");\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tdropdown.classList.remove(\"jigts-open\", \"jigts-closing\");\n\t\t\t\t\t\ttrigger.setAttribute(\"aria-expanded\", \"false\");\n\t\t\t\t\t}, 300);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tsearchInput.addEventListener(\"input\", () => {\n\t\t\tconst searchTerm = searchInput.value.toLowerCase();\n\t\t\tconst hasValue = searchTerm.length > 0;\n\t\t\tclearSearch.classList.toggle(\"jigts-visible\", hasValue);\n\n\t\t\tconst items = this.widget.querySelectorAll<HTMLElement>(\n\t\t\t\t\".jigts-language-item\",\n\t\t\t);\n\t\t\tconst noResults =\n\t\t\t\tthis.widget.querySelector<HTMLElement>(\".jigts-no-results\");\n\t\t\tlet visibleCount = 0;\n\n\t\t\titems.forEach((item) => {\n\t\t\t\tconst name =\n\t\t\t\t\titem\n\t\t\t\t\t\t.querySelector(\".jigts-language-name\")\n\t\t\t\t\t\t?.textContent?.toLowerCase() || \"\";\n\t\t\t\tconst native =\n\t\t\t\t\titem\n\t\t\t\t\t\t.querySelector(\".jigts-language-native\")\n\t\t\t\t\t\t?.textContent?.toLowerCase() || \"\";\n\t\t\t\tconst code =\n\t\t\t\t\titem\n\t\t\t\t\t\t.querySelector(\".jigts-language-code\")\n\t\t\t\t\t\t?.textContent?.toLowerCase() || \"\";\n\t\t\t\tconst region =\n\t\t\t\t\titem\n\t\t\t\t\t\t.querySelector(\".jigts-language-region\")\n\t\t\t\t\t\t?.textContent?.toLowerCase() || \"\";\n\n\t\t\t\tconst matches =\n\t\t\t\t\tname.includes(searchTerm) ||\n\t\t\t\t\tnative.includes(searchTerm) ||\n\t\t\t\t\tcode.includes(searchTerm) ||\n\t\t\t\t\tregion.includes(searchTerm);\n\n\t\t\t\titem.style.display = matches ? \"\" : \"none\";\n\t\t\t\tif (matches) visibleCount++;\n\t\t\t});\n\n\t\t\tif (noResults) {\n\t\t\t\tnoResults.style.display = visibleCount === 0 ? \"flex\" : \"none\";\n\t\t\t}\n\t\t});\n\n\t\tclearSearch.addEventListener(\"click\", () => {\n\t\t\tsearchInput.value = \"\";\n\t\t\tclearSearch.classList.remove(\"jigts-visible\");\n\t\t\tsearchInput.focus();\n\n\t\t\tconst items = this.widget.querySelectorAll<HTMLElement>(\n\t\t\t\t\".jigts-language-item\",\n\t\t\t);\n\t\t\tconst noResults =\n\t\t\t\tthis.widget.querySelector<HTMLElement>(\".jigts-no-results\");\n\n\t\t\titems.forEach((item) => {\n\t\t\t\titem.style.display = \"\";\n\t\t\t});\n\n\t\t\tif (noResults) {\n\t\t\t\tnoResults.style.display = \"none\";\n\t\t\t}\n\t\t});\n\n\t\tlanguageItems.forEach((item) => {\n\t\t\titem.addEventListener(\"click\", async () => {\n\t\t\t\tlanguageItems.forEach((i) => {\n\t\t\t\t\ti.classList.remove(\"jigts-selected\");\n\t\t\t\t\ti.setAttribute(\"aria-selected\", \"false\");\n\t\t\t\t});\n\n\t\t\t\titem.classList.add(\"jigts-selected\");\n\t\t\t\titem.setAttribute(\"aria-selected\", \"true\");\n\n\t\t\t\tconst langName = item.querySelector(\n\t\t\t\t\t\".jigts-language-name\",\n\t\t\t\t)?.textContent;\n\t\t\t\tconst langCode = item.getAttribute(\"data-language-code\");\n\n\t\t\t\t// Close dropdown immediately\n\t\t\t\tdropdown.classList.remove(\"jigts-open\");\n\t\t\t\ttrigger.setAttribute(\"aria-expanded\", \"false\");\n\n\t\t\t\tif (langName) {\n\t\t\t\t\tawait this.updateTriggerText(langName);\n\t\t\t\t}\n\n\t\t\t\tif (langCode) {\n\t\t\t\t\tlocalStorage.setItem(\"jss-pref\", langCode);\n\t\t\t\t}\n\n\t\t\t\tconst triggerIcon = this.elements.trigger?.querySelector(\n\t\t\t\t\t\".jigts-trigger-icon\",\n\t\t\t\t);\n\t\t\t\tif (triggerIcon && langCode && langName) {\n\t\t\t\t\ttriggerIcon.innerHTML = `<span class=\\\"jigts-lang-code\\\">${langCode.toUpperCase()}</span><span class=\\\"jigts-lang-name\\\">${langName}</span>`;\n\t\t\t\t}\n\n\t\t\t\tconst triggerContent = trigger.querySelector<HTMLDivElement>(\n\t\t\t\t\t\".jigts-trigger-content\",\n\t\t\t\t);\n\t\t\t\tif (langCode && langCode !== this.currentLanguage) {\n\t\t\t\t\tif (triggerContent)\n\t\t\t\t\t\ttriggerContent.classList.add(\"jigts-has-translation\");\n\t\t\t\t\tconst triggerLoading = trigger.querySelector<HTMLDivElement>(\n\t\t\t\t\t\t\".jigts-trigger-loading\",\n\t\t\t\t\t);\n\t\t\t\t\tif (triggerContent && triggerLoading) {\n\t\t\t\t\t\ttriggerContent.style.display = \"none\";\n\t\t\t\t\t\ttriggerLoading.style.display = \"flex\";\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.translatePage(langCode);\n\t\t\t\t\t\tthis.currentLanguage = langCode;\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error(\"Translation error:\", error);\n\t\t\t\t\t\talert(\"An error occurred during translation. Please try again.\");\n\t\t\t\t\t}\n\t\t\t\t} else if (triggerContent) {\n\t\t\t\t\ttriggerContent.classList.remove(\"jigts-has-translation\");\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tdocument.addEventListener(\"keydown\", (e: KeyboardEvent) => {\n\t\t\tif (!dropdown.classList.contains(\"jigts-open\")) return;\n\n\t\t\tif (e.key === \"Escape\") {\n\t\t\t\tdropdown.classList.remove(\"jigts-open\");\n\t\t\t\ttrigger.setAttribute(\"aria-expanded\", \"false\");\n\t\t\t\ttrigger.focus();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate scheduleTranslation() {\n\t\tif (this.translationScheduled) return;\n\t\tconst currentUrl = window.location.href;\n\t\tconst currentLang = this.currentLanguage;\n\t\tconst nodes = DocumentNavigator.findTranslatableContent();\n\t\tconst hash = generateHashForContent(nodes);\n\t\tif (\n\t\t\tthis.lastTranslated &&\n\t\t\tthis.lastTranslated.url === currentUrl &&\n\t\t\tthis.lastTranslated.lang === currentLang &&\n\t\t\tthis.lastTranslated.hash === hash\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tthis.translationScheduled = true;\n\t\tif (this.scheduleTimeout) clearTimeout(this.scheduleTimeout);\n\t\tthis.scheduleTimeout = window.setTimeout(() => {\n\t\t\tthis.translationScheduled = false;\n\t\t\tif (this.currentLanguage !== this.config.pageLanguage) {\n\t\t\t\tthis.lastTranslated = { url: currentUrl, lang: currentLang, hash };\n\t\t\t\tconst triggerContent =\n\t\t\t\t\tthis.elements.trigger?.querySelector<HTMLDivElement>(\n\t\t\t\t\t\t\".jigts-trigger-content\",\n\t\t\t\t\t);\n\t\t\t\tconst triggerLoading =\n\t\t\t\t\tthis.elements.trigger?.querySelector<HTMLDivElement>(\n\t\t\t\t\t\t\".jigts-trigger-loading\",\n\t\t\t\t\t);\n\t\t\t\tif (triggerContent && triggerLoading) {\n\t\t\t\t\ttriggerContent.style.display = \"none\";\n\t\t\t\t\ttriggerLoading.style.display = \"flex\";\n\t\t\t\t}\n\t\t\t\tthis.translatePage(this.currentLanguage)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tconst languageItems = this.widget.querySelectorAll<HTMLElement>(\n\t\t\t\t\t\t\t\".jigts-language-item\",\n\t\t\t\t\t\t);\n\t\t\t\t\t\tlanguageItems.forEach((item) => {\n\t\t\t\t\t\t\tconst isSelected =\n\t\t\t\t\t\t\t\titem.getAttribute(\"data-language-code\") ===\n\t\t\t\t\t\t\t\tthis.currentLanguage;\n\t\t\t\t\t\t\titem.classList.toggle(\"jigts-selected\", isSelected);\n\t\t\t\t\t\t\titem.setAttribute(\"aria-selected\", isSelected.toString());\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tconsole.error(\"Auto-translation error:\", error);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}, 200);\n\t}\n\n\t/**\n\t * Public method to translate the page to a specific language\n\t * @param langCode The language code to translate to\n\t * @returns Promise that resolves when translation is complete\n\t */\n\tpublic async translateTo(langCode: string): Promise<void> {\n\t\tif (this.isTranslating) {\n\t\t\tconsole.warn(\"Translation already in progress\");\n\t\t\treturn;\n\t\t}\n\n\t\tconst supportedLang = languages.find((lang) => lang.code === langCode);\n\t\tif (!supportedLang) {\n\t\t\tconsole.error(`Unsupported language code: ${langCode}`);\n\t\t\treturn;\n\t\t}\n\n\t\tif (langCode === this.currentLanguage) {\n\t\t\tconsole.log(\"Page is already in the requested language\");\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tawait this.translatePage(langCode);\n\t\t\tthis.currentLanguage = langCode;\n\n\t\t\t// Update UI to reflect the selected language\n\t\t\tconst languageItems = this.widget.querySelectorAll<HTMLElement>(\n\t\t\t\t\".jigts-language-item\",\n\t\t\t);\n\t\t\tlanguageItems.forEach((item) => {\n\t\t\t\tconst isSelected = item.getAttribute(\"data-language-code\") === langCode;\n\t\t\t\titem.classList.toggle(\"jigts-selected\", isSelected);\n\t\t\t\titem.setAttribute(\"aria-selected\", isSelected.toString());\n\t\t\t});\n\n\t\t\t// Update trigger text\n\t\t\tconst triggerContent =\n\t\t\t\tthis.elements.trigger?.querySelector<HTMLDivElement>(\n\t\t\t\t\t\".jigts-trigger-content\",\n\t\t\t\t);\n\t\t\tif (triggerContent) {\n\t\t\t\ttriggerContent.classList.add(\"jigts-has-translation\");\n\t\t\t\tconst triggerSpan = triggerContent.querySelector(\"span\");\n\t\t\t\tif (triggerSpan) {\n\t\t\t\t\tthis.updateTriggerText(supportedLang.name);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Translation error:\", error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * Get the current instance of TranslationWidget\n\t * @returns The current TranslationWidget instance or null if not initialized\n\t */\n\tpublic static getInstance(): TranslationWidget | null {\n\t\treturn TranslationWidget.instance;\n\t}\n\n\t// Add this helper method to the class\n\tprivate getLanguageSVG(): string {\n\t\treturn `\\n            <svg class=\\\"jigts-languages-icon\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                    d=\\\"M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129\\\">\\n                </path>\\n            </svg>\\n        `;\n\t}\n}\n\n// Expose the translate function globally\ndeclare global {\n\tinterface Window {\n\t\ttranslate: (langCode: string) => Promise<TranslationResult>;\n\t}\n}\n\n// Add the global translate function\nwindow.translate = async (\n\tlangCode: string,\n\tonComplete?: () => void,\n): Promise<TranslationResult> => {\n\tconst instance = TranslationWidget.getInstance();\n\tif (!instance) {\n\t\treturn {\n\t\t\tsuccess: false,\n\t\t\ttargetLanguage: langCode,\n\t\t\ttranslatedNodes: 0,\n\t\t\terror: \"Translation widget not initialized\",\n\t\t\tduration: 0,\n\t\t};\n\t}\n\n\tconst startTime = Date.now();\n\ttry {\n\t\tawait instance.translateTo(langCode);\n\t\tconst endTime = Date.now();\n\n\t\t// Count translated nodes\n\t\tconst translatedNodes = document.querySelectorAll(\n\t\t\t\"[data-translated-lang]\",\n\t\t).length;\n\n\t\t// Call the onComplete callback\n\t\tonComplete?.();\n\t\treturn {\n\t\t\tsuccess: true,\n\t\t\ttargetLanguage: langCode,\n\t\t\ttranslatedNodes,\n\t\t\tduration: endTime - startTime,\n\t\t};\n\t} catch (error) {\n\t\treturn {\n\t\t\tsuccess: false,\n\t\t\ttargetLanguage: langCode,\n\t\t\ttranslatedNodes: 0,\n\t\t\terror: error instanceof Error ? error.message : \"Unknown error occurred\",\n\t\t\tduration: Date.now() - startTime,\n\t\t};\n\t}\n};\n","import styles from './translation-widget.css?inline'\nimport { TranslationWidget } from './widget'\nimport type { TranslationConfig } from './types'\n\ndeclare global {\n    interface Window {\n        TranslationWidget: (\n            publicKey: string,\n            options: {\n                pageLanguage?: string;\n                position?: string;\n                autoDetectLanguage?: boolean;\n                theme?: {\n                    baseColor?: string;\n                    textColor?: string;\n                };\n            },\n            config?: TranslationConfig\n        ) => TranslationWidget\n    }\n}\n\nlet widgetInstance: TranslationWidget | undefined;\n\n\n\nconst initializeTranslationWidget = (\n    publicKey: string,\n    config?: TranslationConfig\n): TranslationWidget => {\n    if (typeof window === 'undefined') {\n        throw new Error(\n            'Translation widget can only be used in browser environment'\n        )\n    }\n\n    const initWidget = () => {\n        if (!widgetInstance) {\n            // Ensure styles are injected\n            if (!document.querySelector('style[data-translation-widget]')) {\n                const style = document.createElement('style')\n                style.setAttribute('data-translation-widget', '')\n                style.textContent = styles\n                document.head.appendChild(style)\n            }\n            widgetInstance = new TranslationWidget(publicKey, config)\n        }\n        return widgetInstance;\n    }\n\n    if (document.readyState === 'loading') {\n        window.addEventListener('DOMContentLoaded', initWidget)\n        return undefined as any; // Widget will be created after DOMContentLoaded\n    } else {\n        return initWidget()\n    }\n}\n\nexport default initializeTranslationWidget"],"names":["k1","_a","LZString","fullTranslations","languageItems"],"mappings":";;;;AAiBO,MAAM,mBAAmB;AAAA,EAM/B,YAAY,WAAmB;AALd;AACT,wCAA6B,EAAE,MAAM,GAAG,QAAQ,EAAE;AAEzC;AAAA,kCAAS;AAGzB,SAAK,YAAY;AAAA,EAAA;AAAA,EAGlB,kBAAgC;AACxB,WAAA,EAAE,GAAG,KAAK,aAAa;AAAA,EAAA;AAAA,EAG/B,MAAM,mBACL,OACA,YACA,aAAa,GACb,aAAa,KACO;AACpB,QAAI,UAAU;AACd,WAAO,UAAU,YAAY;AACxB,UAAA;AACH,cAAM,WAAW,MAAM,MAAM,KAAK,QAAQ;AAAA,UACzC,QAAQ;AAAA,UACR,SAAS;AAAA,YACR,gBAAgB;AAAA,YAChB,aAAa,KAAK;AAAA,UACnB;AAAA,UACA,MAAM,KAAK,UAAU;AAAA,YACpB,MAAM;AAAA,YACN,iBAAiB;AAAA,UACjB,CAAA;AAAA,QAAA,CACD;AAEG,YAAA,CAAC,SAAS,IAAI;AACjB,gBAAM,QAA0B,IAAI;AAAA,YACnC,2BAA2B,SAAS,UAAU;AAAA,UAC/C;AACA,gBAAM,SAAS,SAAS;AACxB,gBAAM,WAAW;AACX,gBAAA;AAAA,QAAA;AAGD,cAAA,SAAU,MAAM,SAAS,KAAK;AAC9B,cAAA,eAAe,MAAM,QAAQ,OAAO,eAAe,IACtD,OAAO,kBACP,CAAC,OAAO,eAAe;AAEnB,eAAA;AAAA,eACC,OAAO;AACf;AACA,YAAI,WAAW,YAAY;AAClB,kBAAA,MAAM,oCAAoC,KAAK;AAChD,iBAAA;AAAA,QAAA;AAGR,cAAM,IAAI,QAAQ,CAAC,QAAQ,WAAW,KAAK,UAAU,CAAC;AAAA,MAAA;AAAA,IACvD;AAEM,WAAA;AAAA,EAAA;AAET;AC9EO,MAAM,YAAwB;AAAA,EACpC;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAA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;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,KAAK;AAAA,IACL,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;AAAA,IACC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,gBAAgB;AAAA,EACjB;AAAA,EACA;A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","x_google_ignoreList":[6]}