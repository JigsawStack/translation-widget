{"version":3,"file":"index.min.js","sources":["../src/lib/translation/index.ts","../src/constants/languages.ts","../src/utils/utils.ts","../src/lib/dom/index.ts","../src/constants/index.ts","../node_modules/lz-string/libs/lz-string.js","../src/lib/storage/localstorage.ts","../src/widget/index.ts","../src/templates/html/widget.html?raw","../src/index.ts"],"sourcesContent":["interface TranslationResponse {\n  translated_text: string | string[];\n  source_language?: string;\n  detected_language?: string;\n  confidence?: number;\n}\n\ninterface TranslationError extends Error {\n  status?: number;\n  response?: Response;\n}\n\ninterface CacheMetrics {\n  hits: number;\n  misses: number;\n}\n\nexport class TranslationService {\n  private readonly publicKey: string;\n  private cacheMetrics: CacheMetrics = { hits: 0, misses: 0 };\n  // Todo: convert this to use sdk instead of api\n  private readonly apiUrl = \"https://api.jigsawstack.com/v1/ai/translate\";\n\n  constructor(publicKey: string) {\n    this.publicKey = publicKey;\n  }\n\n  getCacheMetrics(): CacheMetrics {\n    return { ...this.cacheMetrics };\n  }\n\n  async translateBatchText(texts: string[], targetLang: string, maxRetries = 2, retryDelay = 100): Promise<string[]> {\n    let attempt = 0;\n    while (attempt < maxRetries) {\n      try {\n        const response = await fetch(this.apiUrl, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-api-key\": this.publicKey,\n          },\n          body: JSON.stringify({\n            text: texts,\n            target_language: targetLang,\n          }),\n        });\n\n        if (!response.ok) {\n          const error: TranslationError = new Error(`Error translating text: ${response.statusText}`);\n          error.status = response.status;\n          error.response = response;\n          throw error;\n        }\n\n        const result = (await response.json()) as TranslationResponse;\n        const translations = Array.isArray(result.translated_text) ? result.translated_text : [result.translated_text];\n\n        return translations;\n      } catch (error) {\n        attempt++;\n        if (attempt >= maxRetries) {\n          console.error(\"Translation error after retries:\", error);\n          return texts; // Return original texts on error\n        }\n        // Wait before retrying\n        await new Promise((res) => setTimeout(res, retryDelay));\n      }\n    }\n    return texts; // Fallback, should not reach here\n  }\n}\n","import { Language } from \"../types\";\nexport const languages: Language[] = [\n  {\n    code: \"af\",\n    name: \"Afrikaans\",\n    native: \"Afrikaans\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"am\",\n    name: \"Amharic\",\n    native: \"አማርኛ\",\n    writing_system: \"Ethiopic\",\n  },\n  {\n    code: \"ar\",\n    name: \"Arabic\",\n    native: \"العربية\",\n    rtl: 1,\n    writing_system: \"Arabic\",\n  },\n  {\n    code: \"as\",\n    name: \"Assamese\",\n    native: \"অসমীয়া\",\n    writing_system: \"Bengali\",\n  },\n  {\n    code: \"az\",\n    name: \"Azerbaijani\",\n    native: \"Azərbaycanca / آذربايجان\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"ba\",\n    name: \"Bashkir\",\n    native: \"Башҡорт\",\n    writing_system: \"Cyrillic\",\n  },\n  {\n    code: \"be\",\n    name: \"Belarusian\",\n    native: \"Беларуская\",\n    writing_system: \"Cyrillic\",\n  },\n  {\n    code: \"bg\",\n    name: \"Bulgarian\",\n    native: \"Български\",\n    writing_system: \"Cyrillic\",\n  },\n  {\n    code: \"bn\",\n    name: \"Bengali\",\n    native: \"বাংলা\",\n    writing_system: \"Bengali\",\n  },\n  {\n    code: \"bo\",\n    name: \"Tibetan\",\n    native: \"བོད་ཡིག / Bod skad\",\n    writing_system: \"Tibetan\",\n  },\n  {\n    code: \"br\",\n    name: \"Breton\",\n    native: \"Brezhoneg\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"bs\",\n    name: \"Bosnian\",\n    native: \"Bosanski\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"ca\",\n    name: \"Catalan\",\n    native: \"Català\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"ch\",\n    name: \"Chamorro\",\n    native: \"Chamoru\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"co\",\n    name: \"Corsican\",\n    native: \"Corsu\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"cs\",\n    name: \"Czech\",\n    native: \"Česky\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"cy\",\n    name: \"Welsh\",\n    native: \"Cymraeg\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"da\",\n    name: \"Danish\",\n    native: \"Dansk\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"de\",\n    name: \"German\",\n    native: \"Deutsch\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"dv\",\n    name: \"Divehi\",\n    native: \"ދިވެހިބަސް\",\n    rtl: 1,\n    writing_system: \"Thaana\",\n  },\n  {\n    code: \"dz\",\n    name: \"Dzongkha\",\n    native: \"ཇོང་ཁ\",\n    writing_system: \"Tibetan\",\n  },\n  {\n    code: \"el\",\n    name: \"Greek\",\n    native: \"Ελληνικά\",\n    writing_system: \"Greek\",\n  },\n  {\n    code: \"en\",\n    name: \"English\",\n    native: \"English\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"eo\",\n    name: \"Esperanto\",\n    native: \"Esperanto\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"es\",\n    name: \"Spanish\",\n    native: \"Español\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"et\",\n    name: \"Estonian\",\n    native: \"Eesti\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"eu\",\n    name: \"Basque\",\n    native: \"Euskara\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"fa\",\n    name: \"Persian\",\n    native: \"فارسی\",\n    rtl: 1,\n    writing_system: \"Arabic\",\n  },\n  {\n    code: \"ff\",\n    name: \"Peul\",\n    native: \"Fulfulde\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"fi\",\n    name: \"Finnish\",\n    native: \"Suomi\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"fj\",\n    name: \"Fijian\",\n    native: \"Na Vosa Vakaviti\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"fo\",\n    name: \"Faroese\",\n    native: \"Føroyskt\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"fr\",\n    name: \"French\",\n    native: \"Français\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"fy\",\n    name: \"West Frisian\",\n    native: \"Frysk\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"ga\",\n    name: \"Irish\",\n    native: \"Gaeilge\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"gd\",\n    name: \"Scottish Gaelic\",\n    native: \"Gàidhlig\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"gl\",\n    name: \"Galician\",\n    native: \"Galego\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"gn\",\n    name: \"Guarani\",\n    native: \"Avañe'ẽ\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"gu\",\n    name: \"Gujarati\",\n    native: \"ગુજરાતી\",\n    writing_system: \"Gujarati\",\n  },\n  {\n    code: \"gv\",\n    name: \"Manx\",\n    native: \"Gaelg\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"ha\",\n    name: \"Hausa\",\n    native: \"هَوُسَ\",\n    rtl: 1,\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"he\",\n    name: \"Hebrew\",\n    native: \"עברית\",\n    rtl: 1,\n    writing_system: \"Hebrew\",\n  },\n  {\n    code: \"hi\",\n    name: \"Hindi\",\n    native: \"हिन्दी\",\n    writing_system: \"Devanagari\",\n  },\n  {\n    code: \"hr\",\n    name: \"Croatian\",\n    native: \"Hrvatski\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"ht\",\n    name: \"Haitian\",\n    native: \"Krèyol ayisyen\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"hu\",\n    name: \"Hungarian\",\n    native: \"Magyar\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"hy\",\n    name: \"Armenian\",\n    native: \"Հայերեն\",\n    writing_system: \"Armenian\",\n  },\n  {\n    code: \"id\",\n    name: \"Indonesian\",\n    native: \"Bahasa Indonesia\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"ig\",\n    name: \"Igbo\",\n    native: \"Igbo\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"is\",\n    name: \"Icelandic\",\n    native: \"Íslenska\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"it\",\n    name: \"Italian\",\n    native: \"Italiano\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"iu\",\n    name: \"Inuktitut\",\n    native: \"ᐃᓄᒃᑎᑐᑦ\",\n    writing_system: \"Unified Canadian Aboriginal Syllabics\",\n  },\n  {\n    code: \"ja\",\n    name: \"Japanese\",\n    native: \"日本語\",\n    writing_system: \"Japanese\",\n  },\n  {\n    code: \"jv\",\n    name: \"Javanese\",\n    native: \"Basa Jawa\",\n    writing_system: \"Javanese\",\n  },\n  {\n    code: \"ka\",\n    name: \"Georgian\",\n    native: \"ქართული\",\n    writing_system: \"Georgian\",\n  },\n  {\n    code: \"kg\",\n    name: \"Kongo\",\n    native: \"KiKongo\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"ki\",\n    name: \"Kikuyu\",\n    native: \"Gĩkũyũ\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"kj\",\n    name: \"Kuanyama\",\n    native: \"Kuanyama\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"kk\",\n    name: \"Kazakh\",\n    native: \"Қазақша\",\n    writing_system: \"Cyrillic\",\n  },\n  {\n    code: \"kl\",\n    name: \"Greenlandic\",\n    native: \"Kalaallisut\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"km\",\n    name: \"Cambodian\",\n    native: \"ភាសាខ្មែរ\",\n    writing_system: \"Khmer\",\n  },\n  {\n    code: \"kn\",\n    name: \"Kannada\",\n    native: \"ಕನ್ನಡ\",\n    writing_system: \"Kannada\",\n  },\n  {\n    code: \"ko\",\n    name: \"Korean\",\n    native: \"한국어\",\n    writing_system: \"Korean\",\n  },\n  {\n    code: \"kr\",\n    name: \"Kanuri\",\n    native: \"Kanuri\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"ks\",\n    name: \"Kashmiri\",\n    native: \"कश्मीरी / كشميري\",\n    rtl: 1,\n    writing_system: \"Arabic\",\n  },\n  {\n    code: \"ku\",\n    name: \"Kurdish\",\n    native: \"Kurdî / كوردی\",\n    rtl: 1,\n    writing_system: \"Arabic\",\n  },\n  {\n    code: \"kv\",\n    name: \"Komi\",\n    native: \"Коми\",\n    writing_system: \"Cyrillic\",\n  },\n  {\n    code: \"kw\",\n    name: \"Cornish\",\n    native: \"Kernewek\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"ky\",\n    name: \"Kirghiz\",\n    native: \"Kırgızca / Кыргызча\",\n    writing_system: \"Cyrillic\",\n  },\n  {\n    code: \"la\",\n    name: \"Latin\",\n    native: \"Latina\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"lb\",\n    name: \"Luxembourgish\",\n    native: \"Lëtzebuergesch\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"lg\",\n    name: \"Ganda\",\n    native: \"Luganda\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"li\",\n    name: \"Limburgian\",\n    native: \"Limburgs\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"ln\",\n    name: \"Lingala\",\n    native: \"Lingála\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"lo\",\n    name: \"Laotian\",\n    native: \"ລາວ / Pha xa lao\",\n    writing_system: \"Lao\",\n  },\n  {\n    code: \"lt\",\n    name: \"Lithuanian\",\n    native: \"Lietuvių\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"lu\",\n    name: \"Luba-Katanga\",\n    native: \"Tshiluba\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"lv\",\n    name: \"Latvian\",\n    native: \"Latviešu\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"mg\",\n    name: \"Malagasy\",\n    native: \"Malagasy\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"mh\",\n    name: \"Marshallese\",\n    native: \"Kajin Majel / Ebon\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"mi\",\n    name: \"Maori\",\n    native: \"Māori\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"mk\",\n    name: \"Macedonian\",\n    native: \"Македонски\",\n    writing_system: \"Cyrillic\",\n  },\n  {\n    code: \"ml\",\n    name: \"Malayalam\",\n    native: \"മലയാളം\",\n    writing_system: \"Malayalam\",\n  },\n  {\n    code: \"mn\",\n    name: \"Mongolian\",\n    native: \"Монгол\",\n    writing_system: \"Mongolian\",\n  },\n  {\n    code: \"mo\",\n    name: \"Moldovan\",\n    native: \"Moldovenească\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"mr\",\n    name: \"Marathi\",\n    native: \"मराठी\",\n    writing_system: \"Devanagari\",\n  },\n  {\n    code: \"ms\",\n    name: \"Malay\",\n    native: \"Bahasa Melayu\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"mt\",\n    name: \"Maltese\",\n    native: \"bil-Malti\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"my\",\n    name: \"Burmese\",\n    native: \"မြန်မာစာ\",\n    writing_system: \"Myanmar\",\n  },\n  {\n    code: \"na\",\n    name: \"Nauruan\",\n    native: \"Dorerin Naoero\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"nb\",\n    name: \"Norwegian Bokmål\",\n    native: \"Norsk bokmål\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"nd\",\n    name: \"North Ndebele\",\n    native: \"Sindebele\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"ne\",\n    name: \"Nepali\",\n    native: \"नेपाली\",\n    writing_system: \"Devanagari\",\n  },\n  {\n    code: \"ng\",\n    name: \"Ndonga\",\n    native: \"Oshiwambo\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"nl\",\n    name: \"Dutch\",\n    native: \"Nederlands\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"nn\",\n    name: \"Norwegian Nynorsk\",\n    native: \"Norsk nynorsk\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"no\",\n    name: \"Norwegian\",\n    native: \"Norsk\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"nr\",\n    name: \"South Ndebele\",\n    native: \"isiNdebele\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"nv\",\n    name: \"Navajo\",\n    native: \"Diné bizaad\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"ny\",\n    name: \"Chichewa\",\n    native: \"Chi-Chewa\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"oc\",\n    name: \"Occitan\",\n    native: \"Occitan\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"oj\",\n    name: \"Ojibwa\",\n    native: \"ᐊᓂᔑᓈᐯᒧᐎᓐ / Anishinaabemowin\",\n    writing_system: \"Unified Canadian Aboriginal Syllabics\",\n  },\n  {\n    code: \"om\",\n    name: \"Oromo\",\n    native: \"Oromoo\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"or\",\n    name: \"Oriya\",\n    native: \"ଓଡ଼ିଆ\",\n    writing_system: \"Odia\",\n  },\n  {\n    code: \"os\",\n    name: \"Ossetian / Ossetic\",\n    native: \"Иронау\",\n    writing_system: \"Cyrillic\",\n  },\n  {\n    code: \"pa\",\n    name: \"Panjabi / Punjabi\",\n    native: \"ਪੰਜਾਬੀ / पंजाबी / پنجابي\",\n    writing_system: \"Gurmukhi\",\n  },\n  {\n    code: \"pi\",\n    name: \"Pali\",\n    native: \"Pāli / पाऴि\",\n    writing_system: \"Devanagari\",\n  },\n  {\n    code: \"pl\",\n    name: \"Polish\",\n    native: \"Polski\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"ps\",\n    name: \"Pashto\",\n    native: \"پښتو\",\n    rtl: 1,\n    writing_system: \"Arabic\",\n  },\n  {\n    code: \"pt\",\n    name: \"Portuguese\",\n    native: \"Português\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"qu\",\n    name: \"Quechua\",\n    native: \"Runa Simi\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"rm\",\n    name: \"Raeto Romance\",\n    native: \"Rumantsch\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"rn\",\n    name: \"Kirundi\",\n    native: \"Kirundi\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"ro\",\n    name: \"Romanian\",\n    native: \"Română\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"ru\",\n    name: \"Russian\",\n    native: \"Русский\",\n    writing_system: \"Cyrillic\",\n  },\n  {\n    code: \"rw\",\n    name: \"Rwandi\",\n    native: \"Kinyarwandi\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"sa\",\n    name: \"Sanskrit\",\n    native: \"संस्कृतम्\",\n    writing_system: \"Devanagari\",\n  },\n  {\n    code: \"sc\",\n    name: \"Sardinian\",\n    native: \"Sardu\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"sd\",\n    name: \"Sindhi\",\n    native: \"सिनधि\",\n    writing_system: \"Arabic\",\n  },\n  {\n    code: \"se\",\n    name: \"Northern Sami\",\n    native: \"Sámegiella\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"sg\",\n    name: \"Sango\",\n    native: \"Sängö\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"sh\",\n    name: \"Serbo-Croatian\",\n    native: \"Srpskohrvatski / Српскохрватски\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"si\",\n    name: \"Sinhalese\",\n    native: \"සිංහල\",\n    writing_system: \"Sinhala\",\n  },\n  {\n    code: \"sk\",\n    name: \"Slovak\",\n    native: \"Slovenčina\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"sl\",\n    name: \"Slovenian\",\n    native: \"Slovenščina\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"sm\",\n    name: \"Samoan\",\n    native: \"Gagana Samoa\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"sn\",\n    name: \"Shona\",\n    native: \"chiShona\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"so\",\n    name: \"Somalia\",\n    native: \"Soomaaliga\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"sq\",\n    name: \"Albanian\",\n    native: \"Shqip\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"sr\",\n    name: \"Serbian\",\n    native: \"Српски\",\n    writing_system: \"Cyrillic\",\n  },\n  {\n    code: \"ss\",\n    name: \"Swati\",\n    native: \"SiSwati\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"st\",\n    name: \"Southern Sotho\",\n    native: \"Sesotho\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"su\",\n    name: \"Sundanese\",\n    native: \"Basa Sunda\",\n    writing_system: \"Sundanese\",\n  },\n  {\n    code: \"sv\",\n    name: \"Swedish\",\n    native: \"Svenska\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"sw\",\n    name: \"Swahili\",\n    native: \"Kiswahili\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"ta\",\n    name: \"Tamil\",\n    native: \"தமிழ்\",\n    writing_system: \"Tamil\",\n  },\n  {\n    code: \"te\",\n    name: \"Telugu\",\n    native: \"తెలుగు\",\n    writing_system: \"Telugu\",\n  },\n  {\n    code: \"tg\",\n    name: \"Tajik\",\n    native: \"Тоҷикӣ\",\n    writing_system: \"Cyrillic\",\n  },\n  {\n    code: \"th\",\n    name: \"Thai\",\n    native: \"ไทย / Phasa Thai\",\n    writing_system: \"Thai\",\n  },\n  {\n    code: \"ti\",\n    name: \"Tigrinya\",\n    native: \"ትግርኛ\",\n    writing_system: \"Ethiopic\",\n  },\n  {\n    code: \"tk\",\n    name: \"Turkmen\",\n    native: \"Туркмен / تركمن\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"tl\",\n    name: \"Tagalog / Filipino\",\n    native: \"Tagalog\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"tn\",\n    name: \"Tswana\",\n    native: \"Setswana\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"to\",\n    name: \"Tonga\",\n    native: \"Lea Faka-Tonga\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"tr\",\n    name: \"Turkish\",\n    native: \"Türkçe\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"ts\",\n    name: \"Tsonga\",\n    native: \"Xitsonga\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"tt\",\n    name: \"Tatar\",\n    native: \"Tatarça\",\n    writing_system: \"Cyrillic\",\n  },\n  {\n    code: \"tw\",\n    name: \"Twi\",\n    native: \"Twi\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"ty\",\n    name: \"Tahitian\",\n    native: \"Reo Mā`ohi\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"ug\",\n    name: \"Uyghur\",\n    native: \"Uyƣurqə / ئۇيغۇرچە\",\n    writing_system: \"Arabic\",\n  },\n  {\n    code: \"uk\",\n    name: \"Ukrainian\",\n    native: \"Українська\",\n    writing_system: \"Cyrillic\",\n  },\n  {\n    code: \"ur\",\n    name: \"Urdu\",\n    native: \"اردو\",\n    rtl: 1,\n    writing_system: \"Arabic\",\n  },\n  {\n    code: \"uz\",\n    name: \"Uzbek\",\n    native: \"Ўзбек\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"ve\",\n    name: \"Venda\",\n    native: \"Tshivenḓa\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"vi\",\n    name: \"Vietnamese\",\n    native: \"Tiếng Việt\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"vo\",\n    name: \"Volapük\",\n    native: \"Volapük\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"wo\",\n    name: \"Wolof\",\n    native: \"Wollof\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"xh\",\n    name: \"Xhosa\",\n    native: \"isiXhosa\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"yi\",\n    name: \"Yiddish\",\n    native: \"ייִדיש\",\n    rtl: 1,\n    writing_system: \"Hebrew\",\n  },\n  {\n    code: \"yo\",\n    name: \"Yoruba\",\n    native: \"Yorùbá\",\n    writing_system: \"Latin\",\n  },\n  {\n    code: \"zh\",\n    name: \"Chinese (Simplified)\",\n    native: \"简体中文\",\n    writing_system: \"Simplied Han\",\n  },\n  {\n    code: \"zh-TW\",\n    name: \"Chinese (Traditional)\",\n    native: \"繁體中文\",\n    writing_system: \"Traditional Han\",\n  },\n  {\n    code: \"zu\",\n    name: \"Zulu\",\n    native: \"isiZulu\",\n    writing_system: \"Latin\",\n  },\n];\n","import { languages } from \"../constants/languages\";\nfunction generateHashForContent(nodes: Node[]): string {\n  const content = nodes\n    .map((node) => {\n      if (node.nodeType === Node.TEXT_NODE) {\n        const parent = node.parentElement as HTMLElement | null;\n        // Use original text if available, else current text\n        if (parent?.hasAttribute(\"data-original-text\")) {\n          return parent.getAttribute(\"data-original-text\")?.replace(/\\s+/g, \" \").trim();\n        }\n        return node.textContent?.replace(/\\s+/g, \" \").trim().toLocaleLowerCase();\n      }\n    })\n    .join(\" \")\n    .trim();\n\n  const hash = murmurhash3_32_gc(content.toLowerCase(), 42).toString(16);\n  return hash;\n}\n\nfunction murmurhash3_32_gc(key: string, seed: number) {\n  const remainder = key.length & 3;\n  const bytes = key.length - remainder;\n  let h1 = seed;\n  const c1 = 0xcc9e2d51;\n  const c2 = 0x1b873593;\n  let i = 0;\n\n  while (i < bytes) {\n    let k1 =\n      (key.charCodeAt(i) & 0xff) | ((key.charCodeAt(++i) & 0xff) << 8) | ((key.charCodeAt(++i) & 0xff) << 16) | ((key.charCodeAt(++i) & 0xff) << 24);\n    ++i;\n\n    k1 = ((k1 & 0xffff) * c1 + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n    k1 = (k1 << 15) | (k1 >>> 17);\n    k1 = ((k1 & 0xffff) * c2 + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n\n    h1 ^= k1;\n    h1 = (h1 << 13) | (h1 >>> 19);\n    const h1b = ((h1 & 0xffff) * 5 + ((((h1 >>> 16) * 5) & 0xffff) << 16)) & 0xffffffff;\n    h1 = (h1b & 0xffff) + 0x6b64 + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16);\n  }\n\n  let k1 = 0;\n\n  switch (remainder) {\n    //@ts-expect-error - this is a valid case\n    case 3:\n      k1 ^= key.charCodeAt(i + 2) << 16;\n    //@ts-expect-error - this is a valid case\n    case 2:\n      k1 ^= key.charCodeAt(i + 1) << 8;\n    case 1:\n      k1 ^= key.charCodeAt(i);\n      k1 = ((k1 & 0xffff) * c1 + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n      k1 = (k1 << 15) | (k1 >>> 17);\n      k1 = ((k1 & 0xffff) * c2 + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n      h1 ^= k1;\n  }\n\n  h1 ^= key.length;\n  h1 ^= h1 >>> 16;\n  h1 = ((h1 & 0xffff) * 0x85ebca6b + ((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) & 0xffffffff;\n  h1 ^= h1 >>> 13;\n  h1 = ((h1 & 0xffff) * 0xc2b2ae35 + ((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16)) & 0xffffffff;\n  h1 ^= h1 >>> 16;\n\n  return h1 >>> 0;\n}\n\nfunction getVisibleTextContent(element: HTMLElement): string {\n  // Get all child text nodes that are not inside .sr-only or [aria-hidden=\"true\"]\n  let text = \"\";\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE && !(element.classList.contains(\"sr-only\") || element.getAttribute(\"aria-hidden\") === \"true\")) {\n      text += node.textContent;\n    }\n    if (\n      node.nodeType === Node.ELEMENT_NODE &&\n      !(node as HTMLElement).classList.contains(\"sr-only\") &&\n      (node as HTMLElement).getAttribute(\"aria-hidden\") !== \"true\"\n    ) {\n      text += getVisibleTextContent(node as HTMLElement);\n    }\n  }\n  return text.trim();\n}\n\nconst removeEmojis = (text: string) => text.replace(/[\\p{Emoji_Presentation}\\p{Extended_Pictographic}]/gu, \"\");\n\nconst getUserLanguage = () => {\n  const userLanguages = window.navigator.languages;\n  const userLanguage = languages.find((lang) => userLanguages.includes(lang.code));\n  return userLanguage?.code || \"en\";\n};\n\nexport { generateHashForContent, getVisibleTextContent, removeEmojis, getUserLanguage };\n","// type TreeWalkerFilter = (node: Node) => number\n\ninterface NodeProcessor {\n  acceptNode(node: Node): number;\n}\n\nimport { removeEmojis } from \"../../utils/utils\";\n\nexport class DocumentNavigator {\n  /**\n   * Retrieves text nodes eligible for translation from the document\n   * @returns Collection of text nodes ready for translation\n   */\n  static findTranslatableContent(): Text[] {\n    // Skip during server-side rendering\n    if (typeof window === \"undefined\") {\n      return [];\n    }\n\n    const validator: NodeProcessor = {\n      acceptNode(node: Node): number {\n        if (node.nodeType !== Node.TEXT_NODE) {\n          // Log non-text nodes\n          return NodeFilter.FILTER_REJECT;\n        }\n\n        const container = (node as Text).parentElement;\n        if (!container) {\n          return NodeFilter.FILTER_REJECT;\n        }\n\n        // Skip if any ancestor has aria-hidden=\"true\"\n        if (container.closest('[aria-hidden=\"true\"]')) {\n          return NodeFilter.FILTER_REJECT;\n        }\n\n        // // check if the classname is sr-only\n        if (container.classList.contains(\"sr-only\")) {\n          return NodeFilter.FILTER_REJECT;\n        }\n\n        const shouldSkip =\n          container.closest(\"script, style, code\") !== null ||\n          container.closest(\"next-route-announcer\") !== null ||\n          container.closest(\".jigts-translation-widget\") !== null ||\n          container.closest(\".jigts-widget-trigger\") !== null ||\n          container.closest(\".jigts-widget-dropdown\") !== null ||\n          container.closest(\".notranslate\") !== null ||\n          !node.textContent?.trim();\n        return shouldSkip ? NodeFilter.FILTER_REJECT : NodeFilter.FILTER_ACCEPT;\n      },\n    };\n\n    const navigator = document.createTreeWalker(document.body, NodeFilter.SHOW_TEXT, validator);\n\n    const results: Text[] = [];\n    let currentNode: Node | null;\n\n    while ((currentNode = navigator.nextNode())) {\n      if (currentNode.nodeType === Node.TEXT_NODE) {\n        let text = currentNode.textContent?.trim() || \"\";\n        const parentElement = currentNode.parentElement;\n        if (parentElement) {\n          const originalText = parentElement.getAttribute(\"data-original-text\");\n          if (originalText) {\n            text = originalText;\n          }\n        }\n        /**\n         * Skip the content if\n         * 1. the content if empty\n         * 2. the content is only one character in length\n         * 3. the content is only an emoji\n         */\n        const textWithoutEmojis = removeEmojis(text);\n        if (text.length === 0 || text.length === 1 || textWithoutEmojis.length === 0) {\n          continue;\n        }\n        results.push(currentNode as Text);\n      }\n    }\n\n    return results;\n  }\n\n  /**\n   * Divides a collection into smaller groups\n   * @param items Collection to divide\n   * @param groupSize Maximum size of each group\n   * @returns Array of item groups\n   */\n  static divideIntoGroups<T>(items: T[], groupSize: number): T[][] {\n    const groups: T[][] = [];\n\n    for (let i = 0; i < items.length; i += groupSize) {\n      groups.push(items.slice(i, i + groupSize));\n    }\n\n    return groups;\n  }\n\n  /**\n   * Determines if a node contains translatable text\n   * @param node Node to evaluate\n   * @returns Whether the node contains translatable content\n   */\n  static containsTranslatableContent(node: Node): node is Text {\n    if (node.nodeType !== Node.TEXT_NODE) {\n      return false;\n    }\n\n    const container = node.parentElement;\n    if (!container) {\n      return false;\n    }\n    return !(\n      container.tagName === \"SCRIPT\" ||\n      container.tagName === \"STYLE\" ||\n      container.tagName === \"CODE\" ||\n      container.tagName === \"next-route-announcer\" ||\n      container.closest(\".translate-widget\") ||\n      container.closest(\".notranslate\") ||\n      !node.textContent?.trim()\n    );\n  }\n\n  /**\n   * Retrieves the containing element of a node\n   * @param node Node to find container for\n   * @returns Containing element or null if none exists\n   */\n  static getContainer(node: Node): HTMLElement | null {\n    return node.parentElement;\n  }\n}\n","export const MAX_CACHE_SIZE = 1000;\nexport const BATCH_SIZE = 10;\nexport const CACHE_PREFIX = \"jss-\";\n\nexport const DEFAULT_CONFIG = {\n  primaryColor: \"#2563eb\",\n  pageLanguage: \"en\",\n  autoDetectLanguage: false,\n  position: \"top-right\" as const,\n};\n","// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.5\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n} else if( typeof angular !== 'undefined' && angular != null ) {\n  angular.module('LZString', [])\n  .factory('LZString', function () {\n    return LZString;\n  });\n}\n","import LZString from \"lz-string\";\n\nexport class LocalStorageWrapper {\n  private prefix: string;\n  private readonly COMPRESSION_THRESHOLD = 10000;\n  private readonly COMPRESSION_MARKER = \"__COMPRESSED__\";\n\n  constructor(prefix = \"\") {\n    this.prefix = prefix;\n  }\n\n  getKey(hash: string, url: string, targetLang: string): string {\n    // get rid of query params\n    const urlWithoutQuery = url.split(\"?\")[0];\n    // Only encode the URL, not the whole key\n    return `${hash}-${encodeURIComponent(urlWithoutQuery)}-${targetLang}`;\n  }\n\n  private shouldCompress(value: string): boolean {\n    return value.length > this.COMPRESSION_THRESHOLD;\n  }\n\n  private compress(value: string): string {\n    try {\n      return LZString.compressToBase64(value);\n    } catch (error) {\n      console.error(\"Compression failed:\", error);\n      return value;\n    }\n  }\n\n  private decompress(value: string): string {\n    try {\n      return LZString.decompressFromBase64(value) || value;\n    } catch (error) {\n      console.error(\"Decompression failed:\", error);\n      return value;\n    }\n  }\n\n  getItem(key: string): any {\n    const prefixedKey = this.prefix + key;\n    const item = localStorage.getItem(prefixedKey);\n    if (!item) return null;\n\n    try {\n      // Check if the item is compressed\n      const decompressed = item.startsWith(this.COMPRESSION_MARKER) ? this.decompress(item.slice(this.COMPRESSION_MARKER.length)) : item;\n      return JSON.parse(decompressed);\n    } catch (e) {\n      console.error(\"Error parsing cached item:\", e);\n      return null;\n    }\n  }\n\n  setItem(key: string, value: any): void {\n    const prefixedKey = this.prefix + key;\n    const stringified = JSON.stringify(value);\n\n    // Use requestIdleCallback to defer compression if available\n    const storeValue = () => {\n      try {\n        const finalValue = this.shouldCompress(stringified) ? `${this.COMPRESSION_MARKER}${this.compress(stringified)}` : stringified;\n        localStorage.setItem(prefixedKey, finalValue);\n      } catch (error) {\n        console.error(\"Error storing item:\", error);\n        // Fallback to storing uncompressed value\n        localStorage.setItem(prefixedKey, stringified);\n      }\n    };\n\n    if (typeof requestIdleCallback !== \"undefined\") {\n      requestIdleCallback(() => storeValue());\n    } else {\n      // Fallback to setTimeout if requestIdleCallback is not available\n      setTimeout(storeValue, 0);\n    }\n  }\n\n  removeItem(key: string): void {\n    const prefixedKey = this.prefix + key;\n    localStorage.removeItem(prefixedKey);\n  }\n\n  clear(): void {\n    if (this.prefix) {\n      for (let key in localStorage) {\n        if (key.startsWith(this.prefix)) {\n          localStorage.removeItem(key);\n        }\n      }\n    } else {\n      localStorage.clear();\n    }\n  }\n\n  key(index: number): string | null {\n    return localStorage.key(index);\n  }\n\n  get length(): number {\n    return localStorage.length;\n  }\n}\n","import { TranslationService } from \"../lib/translation/index\";\nimport { DocumentNavigator } from \"../lib/dom\";\nimport { languages } from \"../constants/languages\";\nimport { BATCH_SIZE, DEFAULT_CONFIG } from \"../constants\";\nimport type { Language, TranslationConfig } from \"../types\";\nimport widgetTemplate from \"../templates/html/widget.html?raw\";\nimport { generateHashForContent, getUserLanguage, removeEmojis } from \"../utils/utils\";\nimport { CACHE_PREFIX } from \"../constants\";\nimport { LocalStorageWrapper } from \"../lib/storage/localstorage\";\n// import emojiRegex from 'emoji-regex'\ninterface WidgetElements {\n  trigger: HTMLDivElement | null;\n  dropdown: HTMLDivElement | null;\n  searchInput: HTMLInputElement | null;\n  clearSearch: HTMLDivElement | null;\n  languageItems: NodeListOf<HTMLDivElement> | null;\n  loadingIndicator: HTMLDivElement | null;\n}\n\ninterface TranslationResult {\n  success: boolean;\n  targetLanguage: string;\n  translatedNodes: number;\n  error?: string;\n  duration?: number;\n}\n\nexport class TranslationWidget {\n  private config: Required<TranslationConfig>;\n  private translationService: TranslationService;\n  private currentLanguage: string;\n  private widget: HTMLDivElement;\n  private elements: WidgetElements;\n  private autoDetectLanguage: boolean;\n  private isTranslated = false;\n  private userLanguage: string;\n  private isTranslating = false;\n  private observer: MutationObserver | null = null;\n  private translationScheduled = false;\n  private scheduleTimeout: number | null = null;\n  private lastTranslated: { url: string; lang: string; hash: string } | null = null;\n  private static instance: TranslationWidget | null = null;\n  private currentTranslationPromise: Promise<void> | null = null;\n  private lastRequestedLanguage: string | null = null;\n  private translationRequestId = 0;\n\n  constructor(publicKey: string, config: Partial<TranslationConfig> = {}) {\n    const allowedPositions = [\"top-right\", \"top-left\", \"bottom-left\", \"bottom-right\"] as const;\n    const safeConfig = { ...DEFAULT_CONFIG, ...config };\n    if (safeConfig.position && !allowedPositions.includes(safeConfig.position)) {\n      console.warn(`Invalid position '${safeConfig.position}' passed to TranslationWidget. Falling back to 'top-right'.`);\n      safeConfig.position = \"top-right\";\n    }\n    this.config = safeConfig as Required<TranslationConfig>;\n\n    if (!publicKey) {\n      throw new Error(\"Public key is required to initialize the translation widget\");\n    }\n\n    if (publicKey.startsWith(\"sk_\")) {\n      throw new Error(\"Please use public api key for security reasons. You can get one from https://jigsawstack.com\");\n    }\n\n    if (!publicKey.startsWith(\"pk_\")) {\n      throw new Error(\"Please use proper api key. You can get one from https://jigsawstack.com\");\n    }\n\n    this.translationService = new TranslationService(publicKey);\n    this.autoDetectLanguage = this.config.autoDetectLanguage || false;\n    this.currentLanguage = this.config.pageLanguage || \"en\";\n    this.userLanguage = getUserLanguage();\n    this.widget = document.createElement(\"div\");\n    this.elements = {\n      trigger: null,\n      dropdown: null,\n      searchInput: null,\n      clearSearch: null,\n      languageItems: null,\n      loadingIndicator: null,\n    };\n    this.initialize();\n    TranslationWidget.instance = this;\n  }\n\n  private initialize(): void {\n    if (!this.validateConfig()) return;\n\n    // Get language from URL parameter\n    const urlLang = this.getUrlParameter(\"lang\");\n    let initialLang = this.config.pageLanguage;\n    if (urlLang) {\n      const supportedLang = languages.find((lang) => lang.code === urlLang);\n      if (supportedLang) {\n        initialLang = urlLang;\n      }\n    } else {\n      // Check localStorage for preferred language\n      const prefLang = localStorage.getItem(\"jss-pref\");\n      if (prefLang && languages.find((lang) => lang.code === prefLang)) {\n        initialLang = prefLang;\n      } else if (this.autoDetectLanguage) {\n        initialLang = this.userLanguage;\n      }\n    }\n    this.currentLanguage = initialLang;\n    this.createWidget();\n    // Update icon if not default language\n    const triggerIcon = this.elements.trigger?.querySelector(\".jigts-trigger-icon\");\n    if (triggerIcon && this.currentLanguage !== this.config.pageLanguage) {\n      // Find the language name\n      const langObj = languages.find((lang) => lang.code === this.currentLanguage);\n      const langName = langObj ? langObj.name : this.currentLanguage.toUpperCase();\n      triggerIcon.innerHTML = `<span class=\\\"jigts-lang-code\\\">${this.currentLanguage.toUpperCase()}</span><span class=\\\"jigts-lang-name\\\">${langName}</span>`;\n    }\n    this.setupEventListeners();\n    this.setupURLObserver();\n    this.setupContentObserver();\n\n    // Trigger translation immediately if language is different from page language\n    if (this.currentLanguage !== this.config.pageLanguage) {\n      this.translatePage(this.currentLanguage).catch((error) => {\n        console.error(\"Initial translation error:\", error);\n      });\n    }\n  }\n\n  private getUrlParameter(name: string): string | null {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.get(name);\n  }\n\n  private setupContentObserver(): void {\n    this.observer = new MutationObserver((mutations) => {\n      for (const mutation of mutations) {\n        if (this.widget.contains(mutation.target)) {\n          return;\n        }\n        if (\n          mutation.type === \"characterData\" ||\n          (mutation.type === \"childList\" && Array.from(mutation.addedNodes).some((node) => node.nodeType === Node.TEXT_NODE))\n        ) {\n        }\n      }\n      if (this.isTranslating) return;\n      this.scheduleTranslation();\n    });\n    this.observeBody();\n  }\n\n  private observeBody() {\n    this.observer?.observe(document.body, {\n      childList: true,\n      subtree: true,\n      attributes: true,\n      characterData: true,\n    });\n  }\n\n  private onUrlChange = () => {\n    this.scheduleTranslation();\n  };\n\n  private setupURLObserver(): void {\n    const historyMethods = [\"pushState\", \"replaceState\"] as const;\n\n    for (const method of historyMethods) {\n      const original = history[method];\n      history[method] = function (state: unknown, title: string, url?: string | URL | null) {\n        const result = original.call(this, state, title, url);\n        window.dispatchEvent(new Event(method));\n        return result;\n      };\n      window.addEventListener(method, this.onUrlChange);\n    }\n\n    // Also listen for popstate events (browser back/forward)\n    window.addEventListener(\"popstate\", this.onUrlChange);\n  }\n\n  private validateConfig(): boolean {\n    if (!this.translationService) {\n      console.error(\"Translation service is required to initialize the translation widget\");\n      return false;\n    }\n    return true;\n  }\n\n  private createWidget(): void {\n    const currentLanguageLabel = this.getCurrentLanguageLabel();\n\n    // Create widget element\n    this.widget = document.createElement(\"div\");\n    this.widget.className = `jigts-translation-widget jigts-position-${this.config.position || \"top-right\"}`;\n\n    // Apply theme colors if provided\n    if (this.config.theme) {\n      if (this.config.theme.baseColor) {\n        this.widget.style.setProperty(\"--jigts-custom-base-color\", this.config.theme.baseColor);\n      }\n      if (this.config.theme.textColor) {\n        this.widget.style.setProperty(\"--jigts-custom-text-color\", this.config.theme.textColor);\n      }\n    }\n\n    document.body.appendChild(this.widget);\n\n    this.widget.innerHTML = this.createWidgetHTML(currentLanguageLabel);\n\n    // Cache element references\n    this.elements = {\n      trigger: this.widget.querySelector<HTMLDivElement>(\".jigts-widget-trigger\"),\n      dropdown: this.widget.querySelector<HTMLDivElement>(\".jigts-widget-dropdown\"),\n      searchInput: this.widget.querySelector<HTMLInputElement>(\".jigts-search-input\"),\n      clearSearch: this.widget.querySelector<HTMLDivElement>(\".jigts-clear-search\"),\n      languageItems: this.widget.querySelectorAll<HTMLDivElement>(\".jigts-language-item\"),\n      loadingIndicator: this.widget.querySelector<HTMLDivElement>(\".jigts-loading-spinner\"),\n    };\n\n    // Initialize trigger text with fade-in class\n    const triggerSpan = this.elements.trigger?.querySelector(\"span\");\n    if (triggerSpan) {\n      triggerSpan.classList.add(\"jigts-fade-in\");\n    }\n  }\n\n  private getCurrentLanguageLabel(): string {\n    return languages.find((language: Language) => language.code === this.currentLanguage)?.native || \"English\";\n  }\n\n  private createWidgetHTML(currentLanguageLabel: string): string {\n    const languageOptions = this.createLanguageOptions();\n    const languageCount = languages.length;\n    return widgetTemplate\n      .replace(\"{{languageOptions}}\", languageOptions)\n      .replace(\"{{currentLanguageLabel}}\", currentLanguageLabel)\n      .replace(\"{{languageCount}}\", languageCount.toString());\n  }\n\n  private createLanguageOptions(): string {\n    const currentLang = this.currentLanguage;\n    const currentLanguage = languages.find((lang: Language) => lang.code === currentLang);\n    const otherLanguages = languages\n      .filter((lang: Language) => lang.code !== currentLang)\n      .sort((a: Language, b: Language) => a.native.localeCompare(b.native));\n\n    if (!currentLanguage) return \"\";\n\n    const createLanguageItem = (lang: Language, isSelected = false) => `\n            <div class=\"jigts-language-item ${isSelected ? \"jigts-selected\" : \"\"}\" tabindex=\"0\" role=\"option\" aria-selected=\"${isSelected}\" data-language-code=\"${lang.code}\">\n                <div class=\"jigts-language-info\">\n                    <div class=\"jigts-language-main\">\n                        <span class=\"jigts-language-name\">${lang.name}</span>\n                        <div class=\"jigts-language-code\">${lang.code}</div>\n                    </div>\n                    <div class=\"jigts-language-details\">\n                        <span class=\"jigts-language-native\">${lang.native}</span>\n                    </div>\n                </div>\n                <svg class=\"jigts-check-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path>\n                </svg>\n            </div>\n        `;\n\n    return `\n            ${createLanguageItem(currentLanguage, true)}\n            ${otherLanguages.map((lang) => createLanguageItem(lang)).join(\"\")}\n        `;\n  }\n\n  private async updateTriggerText(newText: string): Promise<void> {\n    const triggerSpan = this.elements.trigger?.querySelector(\"span\");\n    if (!triggerSpan) return;\n\n    // Force a reflow to ensure the animation plays\n    triggerSpan.offsetHeight;\n\n    // Start fade out\n    triggerSpan.classList.remove(\"jigts-fade-in\");\n    triggerSpan.classList.add(\"jigts-fade-out\");\n\n    // Wait for fade out\n    await new Promise((resolve) => setTimeout(resolve, 300));\n\n    // Update text\n    triggerSpan.textContent = newText;\n\n    // Force a reflow\n    triggerSpan.offsetHeight;\n\n    // Start fade in\n    triggerSpan.classList.remove(\"jigts-fade-out\");\n    triggerSpan.classList.add(\"jigts-fade-in\");\n  }\n\n  private getTextToTranslate(node: Text, parent: HTMLElement, targetLang: string): string | null {\n    if (!parent.hasAttribute(\"data-original-text\")) {\n      const originalText = node.textContent?.trim();\n      if (originalText) {\n        parent.setAttribute(\"data-translated-lang\", targetLang);\n        parent.setAttribute(\"data-original-text\", originalText);\n        // Store original font size if not already stored\n        if (!parent.hasAttribute(\"data-original-font-size\")) {\n          const computedStyle = window.getComputedStyle(parent);\n          parent.setAttribute(\"data-original-font-size\", computedStyle.fontSize);\n        }\n        return originalText;\n      }\n    } else {\n      const textToTranslate = node.textContent?.trim();\n      if (this.currentLanguage !== \"en\" && targetLang !== \"en\") {\n        parent.setAttribute(\"data-translated-lang\", targetLang);\n        return parent.getAttribute(\"data-original-text\");\n      }\n      return textToTranslate || null;\n    }\n    return null;\n  }\n\n  private calculateFontSize(text: string, originalFontSize: string, originalText: string): string {\n    const baseFontSize = 12; // Minimum font size in pixels\n    const maxFontSize = Number.parseInt(originalFontSize); // Maximum font size is the original size\n    const textLength = text.length;\n    const originalLength = originalText.length;\n\n    // Only scale down if translated text is longer than original\n    if (textLength <= originalLength) {\n      return originalFontSize;\n    }\n\n    // Calculate font size based on text length\n    // The longer the text, the smaller the font size\n    // We use a logarithmic scale to make the reduction more gradual\n    const fontSize = Math.max(baseFontSize, Math.min(maxFontSize, maxFontSize * (1 - Math.log(textLength) / 10)));\n\n    return `${fontSize}px`;\n  }\n\n  private updateLoadingState(isLoading: boolean): void {\n    const triggerContent = this.elements.trigger?.querySelector<HTMLDivElement>(\".jigts-trigger-content\");\n    const triggerLoading = this.elements.trigger?.querySelector<HTMLDivElement>(\".jigts-trigger-loading\");\n    if (triggerContent && triggerLoading) {\n      if (isLoading) {\n        triggerContent.style.display = \"none\";\n        triggerLoading.style.display = \"flex\";\n      } else {\n        triggerLoading.style.display = \"none\";\n        triggerContent.style.display = \"flex\";\n      }\n    }\n  }\n\n  private async translatePage(targetLang: string): Promise<void> {\n    // Increment the request ID for each new translation\n    const requestId = ++this.translationRequestId;\n    this.lastRequestedLanguage = targetLang;\n    this.updateLoadingState(true);\n    // If there's already a translation in progress, wait for it\n    if (this.currentTranslationPromise) {\n      await this.currentTranslationPromise;\n    }\n    // If target language is the default page language, restore original text\n    if (targetLang === this.config.pageLanguage) {\n      this.resetTranslations();\n      // Only hide loader if this is the latest request\n      if (requestId === this.translationRequestId) {\n        this.updateLoadingState(false);\n      }\n      return;\n    }\n    // Create a new promise for this translation\n    this.currentTranslationPromise = this._translatePage(targetLang);\n    try {\n      await this.currentTranslationPromise;\n    } catch (error) {\n      console.error(\"Translation failed:\", error);\n      // If translation fails, reset to default language\n      this.resetToDefaultLanguage();\n    } finally {\n      // Only hide loader if this is the latest request\n      if (requestId === this.translationRequestId) {\n        this.currentTranslationPromise = null;\n        this.updateLoadingState(false);\n      }\n    }\n  }\n\n  private resetToDefaultLanguage(): void {\n    // Reset translations\n    this.resetTranslations();\n\n    // Update language states\n    this.lastRequestedLanguage = this.config.pageLanguage;\n    this.currentLanguage = this.config.pageLanguage;\n\n    // Update UI\n    const languageItems = this.widget.querySelectorAll<HTMLElement>(\".jigts-language-item\");\n    for (const item of languageItems) {\n      const isSelected = item.getAttribute(\"data-language-code\") === this.config.pageLanguage;\n      item.classList.toggle(\"jigts-selected\", isSelected);\n      item.setAttribute(\"aria-selected\", isSelected.toString());\n    }\n\n    // Update localStorage preference to original language\n    console.log(\"resetToDefaultLanguage\", this.config.pageLanguage);\n    localStorage.setItem(\"jss-pref\", this.config.pageLanguage);\n\n    // Update trigger icon\n    const triggerIcon = this.elements.trigger?.querySelector(\".jigts-trigger-icon\");\n    if (triggerIcon) {\n      triggerIcon.innerHTML = this.getLanguageSVG();\n    }\n\n    // Update translation state\n    this.isTranslated = false;\n    this.updateResetButtonVisibility();\n  }\n\n  private async _translatePage(targetLang: string): Promise<void> {\n    this.isTranslating = true;\n    this.observer?.disconnect(); // Pause observing during translation\n    try {\n      const nodes = DocumentNavigator.findTranslatableContent();\n      const batches = DocumentNavigator.divideIntoGroups(nodes, BATCH_SIZE);\n\n      const cache = new LocalStorageWrapper(CACHE_PREFIX);\n      const hash = generateHashForContent(nodes);\n      // Store all nodes and their corresponding texts for each batch\n      const allBatchNodes: Node[][] = [];\n      const allBatchTexts: string[][] = [];\n\n      // Prepare batches\n      for (const batch of batches) {\n        const textsToTranslate: string[] = [];\n        const batchNodes: Node[] = [];\n        for (const node of batch) {\n          if (node.nodeType !== Node.TEXT_NODE) return;\n          const parent = node.parentElement;\n          if (!parent) return;\n\n          const translatedLang = parent.getAttribute(\"data-translated-lang\");\n\n          // Skip if parent already has data-original-text and we're not translating to English\n          if (parent.hasAttribute(\"data-original-text\") && targetLang === translatedLang) {\n            return;\n          }\n\n          let textToTranslate = this.getTextToTranslate(node as Text, parent, targetLang);\n          textToTranslate = removeEmojis(textToTranslate || \"\");\n          if (textToTranslate.length === 0 || textToTranslate.length === 1) {\n            return;\n          }\n\n          if (textToTranslate) {\n            textsToTranslate.push(textToTranslate.trim());\n            batchNodes.push(node);\n          }\n        }\n        allBatchNodes.push(batchNodes);\n        allBatchTexts.push(textsToTranslate);\n      }\n\n      // Only keep non-empty batches\n      const nonEmptyBatchNodes: Node[][] = [];\n      const nonEmptyBatchTexts: string[][] = [];\n      for (const [i, texts] of allBatchTexts.entries()) {\n        if (texts.length > 0) {\n          nonEmptyBatchTexts.push(texts);\n          nonEmptyBatchNodes.push(allBatchNodes[i]);\n        }\n      }\n\n      const key = cache.getKey(hash, window.location.href, targetLang);\n      const cachedTranslations = cache.getItem(key);\n      if (cachedTranslations?.[0]) {\n        const fullTranslations = cachedTranslations[0];\n        // Only update DOM if this is still the most recently requested language\n        if (this.lastRequestedLanguage === targetLang) {\n          for (const [idx, node] of nodes.entries()) {\n            if (node.nodeType === Node.TEXT_NODE) {\n              const parent = node.parentElement;\n              if (parent) {\n                const originalText = parent.getAttribute(\"data-original-text\") || \"\";\n                const originalFontSize = parent.getAttribute(\"data-original-font-size\") || \"16px\";\n                const newFontSize = this.calculateFontSize(fullTranslations[idx], originalFontSize, originalText);\n                parent.style.fontSize = newFontSize;\n              }\n              node.textContent = fullTranslations[idx];\n            }\n          }\n          this.isTranslated = true;\n          this.updateResetButtonVisibility();\n        }\n        return;\n      }\n\n      // Send all batch requests in parallel\n      const allTranslatedTexts = await Promise.all(nonEmptyBatchTexts.map((texts) => this.translationService.translateBatchText(texts, targetLang)));\n\n      if (allTranslatedTexts.length === 0) {\n        if (this.lastRequestedLanguage === targetLang) {\n          this.isTranslated = true;\n          this.updateResetButtonVisibility();\n        }\n        return;\n      }\n\n      // Check if all batches failed (returned original texts)\n      const allBatchesFailed = allTranslatedTexts.every((translations, batchIndex) => {\n        const originalTexts = nonEmptyBatchTexts[batchIndex];\n        return translations.every((translation, index) => translation === originalTexts[index]);\n      });\n\n      if (allBatchesFailed) {\n        console.warn(\"All translations failed, not caching results\");\n        throw new Error(\"All translation batches failed\");\n      }\n\n      // Build a full translation array for all nodes\n      const fullTranslations: string[] = [];\n      for (const [nodeIdx, node] of nodes.entries()) {\n        const parent = node.parentElement as HTMLElement | null;\n        // Check if this node was included in the API call\n        const batchIdx = nonEmptyBatchNodes.findIndex((batch) => batch.includes(node));\n        if (batchIdx !== -1) {\n          // This node was translated in this batch\n          const textIdx = nonEmptyBatchNodes[batchIdx].indexOf(node);\n          const translatedText = allTranslatedTexts[batchIdx][textIdx];\n          fullTranslations[nodeIdx] = translatedText;\n\n          console.log(this.lastRequestedLanguage, targetLang);\n          // Only update DOM if this is still the most recently requested language\n          if (this.lastRequestedLanguage === targetLang) {\n            // Apply font size adjustment\n            if (parent) {\n              const originalText = parent.getAttribute(\"data-original-text\") || \"\";\n              const originalFontSize = parent.getAttribute(\"data-original-font-size\") || \"16px\";\n              const newFontSize = this.calculateFontSize(translatedText, originalFontSize, originalText);\n              parent.style.fontSize = newFontSize;\n            }\n            node.textContent = translatedText;\n          }\n        } else if (parent && parent.getAttribute(\"data-translated-lang\") === targetLang) {\n          // Already translated, use current text\n          fullTranslations[nodeIdx] = node.textContent || \"\";\n        } else {\n          fullTranslations[nodeIdx] = node.textContent || \"\";\n        }\n      }\n\n      // Always cache the translations, even if they're not the most recent\n      cache.setItem(key, [fullTranslations]);\n\n      // Only update UI state if this is still the most recently requested language\n      if (this.lastRequestedLanguage === targetLang) {\n        this.isTranslated = true;\n        this.updateResetButtonVisibility();\n      }\n    } finally {\n      this.isTranslating = false;\n      this.observeBody(); // Resume observing after translation\n    }\n  }\n\n  private updateResetButtonVisibility(): void {\n    const resetButton = this.widget.querySelector<HTMLElement>(\".jigts-reset-option\");\n    if (resetButton) {\n      resetButton.style.display = this.isTranslated ? \"flex\" : \"none\";\n    }\n  }\n\n  resetTranslations(): void {\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n    const elements = document.querySelectorAll<HTMLElement>(\"[data-original-text]\");\n    for (const element of elements) {\n      const textNodes = Array.from(element.childNodes).filter((node): node is Text => node.nodeType === Node.TEXT_NODE);\n      if (textNodes.length > 0) {\n        const originalText = element.getAttribute(\"data-original-text\");\n        if (originalText) {\n          textNodes[0].textContent = originalText;\n        }\n      }\n      // Restore original font size\n      const originalFontSize = element.getAttribute(\"data-original-font-size\");\n      if (originalFontSize) {\n        element.style.fontSize = originalFontSize;\n      }\n      element.removeAttribute(\"data-original-text\");\n      element.removeAttribute(\"data-translated-lang\");\n      element.removeAttribute(\"data-original-font-size\");\n    }\n    this.isTranslated = false;\n\n    this.currentLanguage = this.config.pageLanguage;\n    // Update lastTranslated to reflect the reset state\n    const nodes = DocumentNavigator.findTranslatableContent();\n    const hash = generateHashForContent(nodes);\n    this.lastTranslated = {\n      url: window.location.href,\n      lang: this.config.pageLanguage,\n      hash,\n    };\n\n    this.updateResetButtonVisibility();\n    this.observeBody(); // Reconnect observer\n  }\n\n  private adjustDropdownPosition(): void {\n    const { dropdown, trigger } = this.elements;\n    if (!dropdown || !trigger) return;\n\n    const triggerRect = trigger.getBoundingClientRect();\n    const dropdownRect = dropdown.getBoundingClientRect();\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n\n    dropdown.style.top = \"\";\n    dropdown.style.bottom = \"\";\n    dropdown.style.left = \"\";\n    dropdown.style.right = \"\";\n    dropdown.style.transform = \"\";\n\n    const spaceBelow = viewportHeight - triggerRect.bottom;\n    const spaceAbove = triggerRect.top;\n    const spaceRight = viewportWidth - triggerRect.right;\n    const spaceLeft = triggerRect.left;\n\n    // Determine vertical position\n    if (spaceBelow < dropdownRect.height && spaceAbove > spaceBelow) {\n      dropdown.style.bottom = \"100%\";\n      dropdown.style.top = \"auto\";\n      dropdown.style.marginBottom = \"0.5rem\";\n      dropdown.style.marginTop = \"0\";\n    } else {\n      dropdown.style.top = \"100%\";\n      dropdown.style.bottom = \"auto\";\n      dropdown.style.marginTop = \"0.5rem\";\n      dropdown.style.marginBottom = \"0\";\n    }\n\n    // Determine horizontal position\n    if (spaceRight < dropdownRect.width && spaceLeft > spaceRight) {\n      dropdown.style.right = \"0\";\n      dropdown.style.left = \"auto\";\n    } else {\n      dropdown.style.left = \"0\";\n      dropdown.style.right = \"auto\";\n    }\n\n    const finalRect = dropdown.getBoundingClientRect();\n\n    if (finalRect.right > viewportWidth) {\n      dropdown.style.right = \"0\";\n      dropdown.style.left = \"auto\";\n    }\n\n    if (finalRect.left < 0) {\n      dropdown.style.left = \"0\";\n      dropdown.style.right = \"auto\";\n    }\n  }\n\n  private setupEventListeners(): void {\n    const { trigger, dropdown, searchInput, clearSearch, languageItems } = this.elements;\n\n    if (!trigger || !dropdown || !searchInput || !clearSearch || !languageItems) {\n      console.error(\"Failed to find required elements\");\n      return;\n    }\n\n    // Reset button functionality\n    const resetButton = this.widget.querySelector<HTMLElement>(\".jigts-reset-option\");\n    if (resetButton) {\n      resetButton.addEventListener(\"click\", () => {\n        if (this.isTranslating) return;\n        this.resetToDefaultLanguage();\n        resetButton.classList.remove(\"jigts-active\");\n        this.isTranslated = false;\n        this.updateResetButtonVisibility();\n        // Reset language selector to page language\n        const languageItems = this.widget.querySelectorAll<HTMLElement>(\".jigts-language-item\");\n        for (const item of languageItems) {\n          const isSelected = item.getAttribute(\"data-language-code\") === this.config.pageLanguage;\n          item.classList.toggle(\"jigts-selected\", isSelected);\n          item.setAttribute(\"aria-selected\", isSelected.toString());\n        }\n        // Restore SVG icon\n        const triggerIcon = this.elements.trigger?.querySelector(\".jigts-trigger-icon\");\n        if (triggerIcon) {\n          triggerIcon.innerHTML = this.getLanguageSVG();\n        }\n        // Close dropdown\n        dropdown.classList.remove(\"jigts-open\");\n        trigger.setAttribute(\"aria-expanded\", \"false\");\n        // Remove has-translation class\n        const triggerContent = trigger.querySelector<HTMLDivElement>(\".jigts-trigger-content\");\n        if (triggerContent) triggerContent.classList.remove(\"jigts-has-translation\");\n      });\n    }\n\n    this.updateResetButtonVisibility();\n\n    trigger.addEventListener(\"click\", () => {\n      dropdown.classList.toggle(\"jigts-open\");\n      const isOpen = dropdown.classList.contains(\"jigts-open\");\n      trigger.setAttribute(\"aria-expanded\", isOpen.toString());\n      if (isOpen) {\n        this.adjustDropdownPosition();\n        searchInput.focus();\n      }\n    });\n\n    window.addEventListener(\"resize\", () => {\n      if (dropdown.classList.contains(\"jigts-open\")) {\n        this.adjustDropdownPosition();\n      }\n    });\n\n    document.addEventListener(\"click\", (e: MouseEvent) => {\n      if (!(e.target as Element).closest(\".jigts-translation-widget\")) {\n        if (dropdown.classList.contains(\"jigts-open\")) {\n          dropdown.classList.add(\"jigts-closing\");\n          setTimeout(() => {\n            dropdown.classList.remove(\"jigts-open\", \"jigts-closing\");\n            trigger.setAttribute(\"aria-expanded\", \"false\");\n          }, 300);\n        }\n      }\n    });\n\n    searchInput.addEventListener(\"input\", () => {\n      const searchTerm = searchInput.value.toLowerCase();\n      const hasValue = searchTerm.length > 0;\n      clearSearch.classList.toggle(\"jigts-visible\", hasValue);\n\n      const items = this.widget.querySelectorAll<HTMLElement>(\".jigts-language-item\");\n      const noResults = this.widget.querySelector<HTMLElement>(\".jigts-no-results\");\n      let visibleCount = 0;\n\n      for (const item of items) {\n        const name = item.querySelector(\".jigts-language-name\")?.textContent?.toLowerCase() || \"\";\n        const native = item.querySelector(\".jigts-language-native\")?.textContent?.toLowerCase() || \"\";\n        const code = item.querySelector(\".jigts-language-code\")?.textContent?.toLowerCase() || \"\";\n        const region = item.querySelector(\".jigts-language-region\")?.textContent?.toLowerCase() || \"\";\n\n        const matches = name.includes(searchTerm) || native.includes(searchTerm) || code.includes(searchTerm) || region.includes(searchTerm);\n\n        item.style.display = matches ? \"\" : \"none\";\n        if (matches) visibleCount++;\n      }\n\n      if (noResults) {\n        noResults.style.display = visibleCount === 0 ? \"flex\" : \"none\";\n      }\n    });\n\n    clearSearch.addEventListener(\"click\", () => {\n      searchInput.value = \"\";\n      clearSearch.classList.remove(\"jigts-visible\");\n      searchInput.focus();\n\n      const items = this.widget.querySelectorAll<HTMLElement>(\".jigts-language-item\");\n      const noResults = this.widget.querySelector<HTMLElement>(\".jigts-no-results\");\n\n      for (const item of items) {\n        item.style.display = \"\";\n      }\n\n      if (noResults) {\n        noResults.style.display = \"none\";\n      }\n    });\n\n    for (const item of languageItems) {\n      item.addEventListener(\"click\", async () => {\n        for (const i of languageItems) {\n          i.classList.remove(\"jigts-selected\");\n          i.setAttribute(\"aria-selected\", \"false\");\n        }\n\n        item.classList.add(\"jigts-selected\");\n        item.setAttribute(\"aria-selected\", \"true\");\n\n        const langName = item.querySelector(\".jigts-language-name\")?.textContent;\n        const langCode = item.getAttribute(\"data-language-code\");\n\n        // Close dropdown immediately\n        dropdown.classList.remove(\"jigts-open\");\n        trigger.setAttribute(\"aria-expanded\", \"false\");\n\n        if (langName) {\n          await this.updateTriggerText(langName);\n        }\n\n        if (langCode) {\n          localStorage.setItem(\"jss-pref\", langCode);\n        }\n\n        const triggerIcon = this.elements.trigger?.querySelector(\".jigts-trigger-icon\");\n        if (triggerIcon && langCode && langName) {\n          triggerIcon.innerHTML = `<span class=\\\"jigts-lang-code\\\">${langCode.toUpperCase()}</span><span class=\\\"jigts-lang-name\\\">${langName}</span>`;\n        }\n\n        const triggerContent = trigger.querySelector<HTMLDivElement>(\".jigts-trigger-content\");\n        if (langCode && langCode !== this.currentLanguage) {\n          if (triggerContent) triggerContent.classList.add(\"jigts-has-translation\");\n          const triggerLoading = trigger.querySelector<HTMLDivElement>(\".jigts-trigger-loading\");\n          if (triggerContent && triggerLoading) {\n            triggerContent.style.display = \"none\";\n            triggerLoading.style.display = \"flex\";\n          }\n\n          try {\n            await this.translatePage(langCode);\n            this.currentLanguage = langCode;\n          } catch (error) {\n            console.error(\"Translation error:\", error);\n            alert(\"An error occurred during translation. Please try again.\");\n          }\n        } else if (triggerContent) {\n          triggerContent.classList.remove(\"jigts-has-translation\");\n        }\n      });\n    }\n\n    document.addEventListener(\"keydown\", (e: KeyboardEvent) => {\n      if (!dropdown.classList.contains(\"jigts-open\")) return;\n\n      if (e.key === \"Escape\") {\n        dropdown.classList.remove(\"jigts-open\");\n        trigger.setAttribute(\"aria-expanded\", \"false\");\n        trigger.focus();\n      }\n    });\n  }\n\n  private scheduleTranslation() {\n    if (this.translationScheduled) return;\n    const currentUrl = window.location.href;\n    const currentLang = this.currentLanguage;\n    const nodes = DocumentNavigator.findTranslatableContent();\n    const hash = generateHashForContent(nodes);\n    if (\n      this.lastTranslated &&\n      this.lastTranslated.url === currentUrl &&\n      this.lastTranslated.lang === currentLang &&\n      this.lastTranslated.hash === hash\n    ) {\n      return;\n    }\n    this.translationScheduled = true;\n    if (this.scheduleTimeout) clearTimeout(this.scheduleTimeout);\n    this.scheduleTimeout = window.setTimeout(() => {\n      this.translationScheduled = false;\n      if (this.currentLanguage !== this.config.pageLanguage) {\n        this.lastTranslated = { url: currentUrl, lang: currentLang, hash };\n        const triggerContent = this.elements.trigger?.querySelector<HTMLDivElement>(\".jigts-trigger-content\");\n        const triggerLoading = this.elements.trigger?.querySelector<HTMLDivElement>(\".jigts-trigger-loading\");\n        if (triggerContent && triggerLoading) {\n          triggerContent.style.display = \"none\";\n          triggerLoading.style.display = \"flex\";\n        }\n        this.translatePage(this.currentLanguage)\n          .then(() => {\n            const languageItems = this.widget.querySelectorAll<HTMLElement>(\".jigts-language-item\");\n            for (const item of languageItems) {\n              const isSelected = item.getAttribute(\"data-language-code\") === this.currentLanguage;\n              item.classList.toggle(\"jigts-selected\", isSelected);\n              item.setAttribute(\"aria-selected\", isSelected.toString());\n            }\n          })\n          .catch((error) => {\n            console.error(\"Auto-translation error:\", error);\n          });\n      }\n    }, 200);\n  }\n\n  /**\n   * Public method to translate the page to a specific language\n   * @param langCode The language code to translate to\n   * @returns Promise that resolves when translation is complete\n   */\n  public async translateTo(langCode: string): Promise<void> {\n    if (this.isTranslating) {\n      console.warn(\"Translation already in progress\");\n      return;\n    }\n\n    const supportedLang = languages.find((lang) => lang.code === langCode);\n    if (!supportedLang) {\n      console.error(`Unsupported language code: ${langCode}`);\n      return;\n    }\n\n    if (langCode === this.currentLanguage) {\n      console.log(\"Page is already in the requested language\");\n      return;\n    }\n\n    try {\n      await this.translatePage(langCode);\n      this.currentLanguage = langCode;\n\n      // Update UI to reflect the selected language\n      const languageItems = this.widget.querySelectorAll<HTMLElement>(\".jigts-language-item\");\n      for (const item of languageItems) {\n        const isSelected = item.getAttribute(\"data-language-code\") === langCode;\n        item.classList.toggle(\"jigts-selected\", isSelected);\n        item.setAttribute(\"aria-selected\", isSelected.toString());\n      }\n\n      // Update trigger text\n      const triggerContent = this.elements.trigger?.querySelector<HTMLDivElement>(\".jigts-trigger-content\");\n      if (triggerContent) {\n        triggerContent.classList.add(\"jigts-has-translation\");\n        const triggerSpan = triggerContent.querySelector(\"span\");\n        if (triggerSpan) {\n          this.updateTriggerText(supportedLang.name);\n        }\n      }\n    } catch (error) {\n      console.error(\"Translation error:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get the current instance of TranslationWidget\n   * @returns The current TranslationWidget instance or null if not initialized\n   */\n  public static getInstance(): TranslationWidget | null {\n    return TranslationWidget.instance;\n  }\n\n  // Add this helper method to the class\n  private getLanguageSVG(): string {\n    return `\\n            <svg class=\\\"jigts-languages-icon\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                    d=\\\"M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129\\\">\\n                </path>\\n            </svg>\\n        `;\n  }\n}\n\n// Expose the translate function globally\ndeclare global {\n  interface Window {\n    translate: (langCode: string) => Promise<TranslationResult>;\n  }\n}\n\n// Add the global translate function\nwindow.translate = async (langCode: string, onComplete?: () => void): Promise<TranslationResult> => {\n  const instance = TranslationWidget.getInstance();\n  if (!instance) {\n    return {\n      success: false,\n      targetLanguage: langCode,\n      translatedNodes: 0,\n      error: \"Translation widget not initialized\",\n      duration: 0,\n    };\n  }\n\n  const startTime = Date.now();\n  try {\n    await instance.translateTo(langCode);\n    const endTime = Date.now();\n\n    // Count translated nodes\n    const translatedNodes = document.querySelectorAll(\"[data-translated-lang]\").length;\n\n    // Call the onComplete callback\n    onComplete?.();\n    return {\n      success: true,\n      targetLanguage: langCode,\n      translatedNodes,\n      duration: endTime - startTime,\n    };\n  } catch (error) {\n    return {\n      success: false,\n      targetLanguage: langCode,\n      translatedNodes: 0,\n      error: error instanceof Error ? error.message : \"Unknown error occurred\",\n      duration: Date.now() - startTime,\n    };\n  }\n};\n","export default \"<!-- Widget Trigger Button -->\\n<div class=\\\"jigts-widget-trigger\\\" tabindex=\\\"0\\\" role=\\\"button\\\" aria-label=\\\"Open translation menu\\\" aria-expanded=\\\"false\\\">\\n    <!-- Normal State -->\\n    <div class=\\\"jigts-trigger-content\\\">\\n        <span class=\\\"jigts-trigger-icon\\\">\\n            <svg class=\\\"jigts-languages-icon\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                    d=\\\"M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129\\\">\\n                </path>\\n            </svg>\\n        </span>\\n    </div>\\n\\n    <!-- Loading State (hidden by default) -->\\n    <div class=\\\"jigts-trigger-loading\\\" style=\\\"display: none;\\\">\\n        <div class=\\\"jigts-loading-spinner\\\"></div>\\n    </div>\\n</div>\\n\\n<!-- Dropdown Menu -->\\n<div class=\\\"jigts-widget-dropdown\\\">\\n    <!-- Header -->\\n    <div class=\\\"jigts-dropdown-header\\\">\\n        <div class=\\\"jigts-dropdown-title\\\">\\n            <div class=\\\"jigts-title-left\\\">\\n                <svg class=\\\"jigts-languages-icon\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                        d=\\\"M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129\\\">\\n                    </path>\\n                </svg>\\n                <span class=\\\"jigts-title-text\\\">Select Language</span>\\n            </div>\\n            <div class=\\\"jigts-language-count\\\">{{languageCount}} languages</div>\\n        </div>\\n\\n        <!-- Search Input -->\\n        <div class=\\\"jigts-search-container\\\">\\n            <svg class=\\\"jigts-search-icon\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                    d=\\\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\\\"></path>\\n            </svg>\\n            <input type=\\\"text\\\" class=\\\"jigts-search-input\\\" placeholder=\\\"Search languages...\\\" aria-label=\\\"Search languages\\\">\\n            <svg class=\\\"jigts-clear-search\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\" d=\\\"M6 18L18 6M6 6l12 12\\\">\\n                </path>\\n            </svg>\\n        </div>\\n    </div>\\n\\n    <!-- Reset Option -->\\n    <div class=\\\"jigts-reset-option\\\" tabindex=\\\"0\\\" role=\\\"button\\\" aria-label=\\\"Reset to original language\\\">\\n        <svg class=\\\"jigts-reset-icon\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                d=\\\"M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6\\\"></path>\\n        </svg>\\n        <div class=\\\"jigts-reset-text\\\">\\n            <span class=\\\"jigts-reset-title\\\">Original Language</span>\\n            <span class=\\\"jigts-reset-subtitle\\\">Reset translation</span>\\n        </div>\\n    </div>\\n\\n    <!-- Language List -->\\n    <div class=\\\"jigts-language-list\\\">\\n        {{languageOptions}}\\n        <div class=\\\"jigts-no-results\\\" style=\\\"display: none;\\\">\\n            <svg class=\\\"jigts-no-results-icon\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                    d=\\\"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\\\"></path>\\n            </svg>\\n            <span>No languages found</span>\\n        </div>\\n    </div>\\n</div>\"","import styles from \"./translation-widget.css?inline\";\nimport { TranslationWidget } from \"./widget\";\nimport type { TranslationConfig } from \"./types\";\n\ndeclare global {\n  interface Window {\n    TranslationWidget: (\n      publicKey: string,\n      options: {\n        pageLanguage?: string;\n        position?: string;\n        autoDetectLanguage?: boolean;\n        theme?: {\n          baseColor?: string;\n          textColor?: string;\n        };\n      },\n      config?: TranslationConfig\n    ) => TranslationWidget;\n  }\n}\n\nlet widgetInstance: TranslationWidget | undefined;\n\nconst initializeTranslationWidget = (publicKey: string, config?: TranslationConfig): TranslationWidget => {\n  if (typeof window === \"undefined\") {\n    throw new Error(\"Translation widget can only be used in browser environment\");\n  }\n\n  const initWidget = () => {\n    if (!widgetInstance) {\n      // Ensure styles are injected\n      if (!document.querySelector(\"style[data-translation-widget]\")) {\n        const style = document.createElement(\"style\");\n        style.setAttribute(\"data-translation-widget\", \"\");\n        style.textContent = styles;\n        document.head.appendChild(style);\n      }\n      widgetInstance = new TranslationWidget(publicKey, config);\n    }\n    return widgetInstance;\n  };\n\n  if (document.readyState === \"loading\") {\n    window.addEventListener(\"DOMContentLoaded\", initWidget);\n    return undefined as unknown as TranslationWidget; // Widget will be created after DOMContentLoaded\n  }\n  return initWidget();\n};\n\nexport default initializeTranslationWidget;\n"],"names":["TranslationService","constructor","publicKey","__publicField","this","hits","misses","getCacheMetrics","cacheMetrics","translateBatchText","texts","targetLang","maxRetries","retryDelay","attempt","response","fetch","apiUrl","method","headers","body","JSON","stringify","text","target_language","ok","error","Error","statusText","status","result","json","Array","isArray","translated_text","console","Promise","res","setTimeout","languages","code","name","native","writing_system","rtl","generateHashForContent","nodes","key","seed","remainder","length","bytes","h1","c1","c2","i","k1","charCodeAt","h1b","murmurhash3_32_gc","map","node","nodeType","Node","TEXT_NODE","parent","parentElement","hasAttribute","_a","getAttribute","replace","trim","_b","textContent","toLocaleLowerCase","join","toLowerCase","toString","removeEmojis","DocumentNavigator","findTranslatableContent","window","validator","acceptNode","NodeFilter","FILTER_REJECT","container","closest","classList","contains","FILTER_ACCEPT","navigator","document","createTreeWalker","SHOW_TEXT","results","currentNode","nextNode","originalText","textWithoutEmojis","push","divideIntoGroups","items","groupSize","groups","slice","containsTranslatableContent","tagName","getContainer","DEFAULT_CONFIG","primaryColor","pageLanguage","autoDetectLanguage","position","LZString","f","String","fromCharCode","keyStrBase64","keyStrUriSafe","baseReverseDic","getBaseValue","alphabet","character","charAt","compressToBase64","input","_compress","a","decompressFromBase64","_decompress","index","compressToUTF16","decompressFromUTF16","compressed","compressToUint8Array","uncompressed","compress","buf","Uint8Array","TotalLen","current_value","decompressFromUint8Array","decompress","forEach","c","compressToEncodedURIComponent","decompressFromEncodedURIComponent","bitsPerChar","getCharFromInt","value","ii","context_dictionary","context_dictionaryToCreate","context_c","context_wc","context_w","context_enlargeIn","context_dictSize","context_numBits","context_data","context_data_val","context_data_position","Object","prototype","hasOwnProperty","call","Math","pow","resetValue","getNextValue","w","bits","resb","maxpower","power","dictionary","enlargeIn","dictSize","numBits","entry","data","val","module","exports","angular","factory","LocalStorageWrapper","prefix","getKey","hash","url","urlWithoutQuery","split","encodeURIComponent","shouldCompress","COMPRESSION_THRESHOLD","getItem","prefixedKey","item","localStorage","decompressed","startsWith","COMPRESSION_MARKER","parse","e","setItem","stringified","storeValue","finalValue","requestIdleCallback","removeItem","clear","_TranslationWidget","config","scheduleTranslation","safeConfig","includes","warn","translationService","currentLanguage","userLanguage","userLanguages","find","lang","getUserLanguage","widget","createElement","elements","trigger","dropdown","searchInput","clearSearch","languageItems","loadingIndicator","initialize","instance","validateConfig","urlLang","getUrlParameter","initialLang","prefLang","createWidget","triggerIcon","querySelector","langObj","langName","toUpperCase","innerHTML","setupEventListeners","setupURLObserver","setupContentObserver","translatePage","catch","URLSearchParams","location","search","get","observer","MutationObserver","mutations","mutation","target","type","from","addedNodes","some","isTranslating","observeBody","observe","childList","subtree","attributes","characterData","historyMethods","original","history","state","title","dispatchEvent","Event","addEventListener","onUrlChange","currentLanguageLabel","getCurrentLanguageLabel","className","theme","baseColor","style","setProperty","textColor","appendChild","createWidgetHTML","querySelectorAll","triggerSpan","add","language","languageOptions","createLanguageOptions","languageCount","currentLang","otherLanguages","filter","sort","b","localeCompare","createLanguageItem","isSelected","updateTriggerText","newText","offsetHeight","remove","resolve","getTextToTranslate","textToTranslate","setAttribute","computedStyle","getComputedStyle","fontSize","calculateFontSize","originalFontSize","maxFontSize","Number","parseInt","textLength","max","min","log","updateLoadingState","isLoading","triggerContent","triggerLoading","display","requestId","translationRequestId","lastRequestedLanguage","currentTranslationPromise","resetTranslations","_translatePage","resetToDefaultLanguage","toggle","getLanguageSVG","isTranslated","updateResetButtonVisibility","disconnect","batches","cache","allBatchNodes","allBatchTexts","batch","textsToTranslate","batchNodes","translatedLang","nonEmptyBatchNodes","nonEmptyBatchTexts","entries","href","cachedTranslations","fullTranslations","idx","newFontSize","allTranslatedTexts","all","every","translations","batchIndex","originalTexts","translation","nodeIdx","batchIdx","findIndex","textIdx","indexOf","translatedText","resetButton","element","textNodes","childNodes","removeAttribute","lastTranslated","adjustDropdownPosition","triggerRect","getBoundingClientRect","dropdownRect","viewportWidth","innerWidth","viewportHeight","innerHeight","top","bottom","left","right","transform","spaceBelow","spaceAbove","spaceRight","spaceLeft","height","marginBottom","marginTop","width","finalRect","isOpen","focus","searchTerm","hasValue","noResults","visibleCount","_d","_c","_f","_e","region","_h","_g","matches","async","langCode","alert","translationScheduled","currentUrl","scheduleTimeout","clearTimeout","then","translateTo","supportedLang","getInstance","widgetInstance","TranslationWidget","translate","onComplete","success","targetLanguage","translatedNodes","duration","startTime","Date","now","endTime","message","initWidget","head","readyState"],"mappings":"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","x_google_ignoreList":[5]}