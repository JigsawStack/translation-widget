{"version":3,"file":"index.min.js","sources":["../src/lib/translation/index.ts","../src/constants/languages.ts","../src/utils/utils.ts","../src/lib/dom/index.ts","../src/constants/index.ts","../node_modules/lz-string/libs/lz-string.js","../src/lib/storage/localstorage.ts","../src/widget/index.ts","../src/templates/html/widget.html?raw","../src/index.ts"],"sourcesContent":["interface TranslationResponse {\n\ttranslated_text: string | string[];\n\tsource_language?: string;\n\tdetected_language?: string;\n\tconfidence?: number;\n}\n\ninterface TranslationError extends Error {\n\tstatus?: number;\n\tresponse?: Response;\n}\n\ninterface CacheMetrics {\n\thits: number;\n\tmisses: number;\n}\n\nexport class TranslationService {\n\tprivate readonly publicKey: string;\n\tprivate cacheMetrics: CacheMetrics = { hits: 0, misses: 0 };\n\t// Todo: convert this to use sdk instead of api\n\tprivate readonly apiUrl = \"https://api.jigsawstack.com/v1/ai/translate\";\n\n\tconstructor(publicKey: string) {\n\t\tthis.publicKey = publicKey;\n\t}\n\n\tgetCacheMetrics(): CacheMetrics {\n\t\treturn { ...this.cacheMetrics };\n\t}\n\n\tasync translateBatchText(\n\t\ttexts: string[],\n\t\ttargetLang: string,\n\t\tmaxRetries = 2,\n\t\tretryDelay = 100,\n\t): Promise<string[]> {\n\t\tlet attempt = 0;\n\t\twhile (attempt < maxRetries) {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(this.apiUrl, {\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\t\"x-api-key\": this.publicKey,\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\ttext: texts,\n\t\t\t\t\t\ttarget_language: targetLang,\n\t\t\t\t\t}),\n\t\t\t\t});\n\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tconst error: TranslationError = new Error(\n\t\t\t\t\t\t`Error translating text: ${response.statusText}`,\n\t\t\t\t\t);\n\t\t\t\t\terror.status = response.status;\n\t\t\t\t\terror.response = response;\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\tconst result = (await response.json()) as TranslationResponse;\n\t\t\t\tconst translations = Array.isArray(result.translated_text)\n\t\t\t\t\t? result.translated_text\n\t\t\t\t\t: [result.translated_text];\n\n\t\t\t\treturn translations;\n\t\t\t} catch (error) {\n\t\t\t\tattempt++;\n\t\t\t\tif (attempt >= maxRetries) {\n\t\t\t\t\tconsole.error(\"Translation error after retries:\", error);\n\t\t\t\t\treturn texts; // Return original texts on error\n\t\t\t\t}\n\t\t\t\t// Wait before retrying\n\t\t\t\tawait new Promise((res) => setTimeout(res, retryDelay));\n\t\t\t}\n\t\t}\n\t\treturn texts; // Fallback, should not reach here\n\t}\n}\n","import { Language } from \"../types\";\nexport const languages: Language[] = [\n\t{\n\t\tcode: \"af\",\n\t\tname: \"Afrikaans\",\n\t\tnative: \"Afrikaans\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"am\",\n\t\tname: \"Amharic\",\n\t\tnative: \"አማርኛ\",\n\t\twriting_system: \"Ethiopic\",\n\t},\n\t{\n\t\tcode: \"ar\",\n\t\tname: \"Arabic\",\n\t\tnative: \"العربية\",\n\t\trtl: 1,\n\t\twriting_system: \"Arabic\",\n\t},\n\t{\n\t\tcode: \"as\",\n\t\tname: \"Assamese\",\n\t\tnative: \"অসমীয়া\",\n\t\twriting_system: \"Bengali\",\n\t},\n\t{\n\t\tcode: \"az\",\n\t\tname: \"Azerbaijani\",\n\t\tnative: \"Azərbaycanca / آذربايجان\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ba\",\n\t\tname: \"Bashkir\",\n\t\tnative: \"Башҡорт\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"be\",\n\t\tname: \"Belarusian\",\n\t\tnative: \"Беларуская\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"bg\",\n\t\tname: \"Bulgarian\",\n\t\tnative: \"Български\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"bn\",\n\t\tname: \"Bengali\",\n\t\tnative: \"বাংলা\",\n\t\twriting_system: \"Bengali\",\n\t},\n\t{\n\t\tcode: \"bo\",\n\t\tname: \"Tibetan\",\n\t\tnative: \"བོད་ཡིག / Bod skad\",\n\t\twriting_system: \"Tibetan\",\n\t},\n\t{\n\t\tcode: \"br\",\n\t\tname: \"Breton\",\n\t\tnative: \"Brezhoneg\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"bs\",\n\t\tname: \"Bosnian\",\n\t\tnative: \"Bosanski\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ca\",\n\t\tname: \"Catalan\",\n\t\tnative: \"Català\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ch\",\n\t\tname: \"Chamorro\",\n\t\tnative: \"Chamoru\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"co\",\n\t\tname: \"Corsican\",\n\t\tnative: \"Corsu\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"cs\",\n\t\tname: \"Czech\",\n\t\tnative: \"Česky\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"cy\",\n\t\tname: \"Welsh\",\n\t\tnative: \"Cymraeg\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"da\",\n\t\tname: \"Danish\",\n\t\tnative: \"Dansk\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"de\",\n\t\tname: \"German\",\n\t\tnative: \"Deutsch\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"dv\",\n\t\tname: \"Divehi\",\n\t\tnative: \"ދިވެހިބަސް\",\n\t\trtl: 1,\n\t\twriting_system: \"Thaana\",\n\t},\n\t{\n\t\tcode: \"dz\",\n\t\tname: \"Dzongkha\",\n\t\tnative: \"ཇོང་ཁ\",\n\t\twriting_system: \"Tibetan\",\n\t},\n\t{\n\t\tcode: \"el\",\n\t\tname: \"Greek\",\n\t\tnative: \"Ελληνικά\",\n\t\twriting_system: \"Greek\",\n\t},\n\t{\n\t\tcode: \"en\",\n\t\tname: \"English\",\n\t\tnative: \"English\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"eo\",\n\t\tname: \"Esperanto\",\n\t\tnative: \"Esperanto\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"es\",\n\t\tname: \"Spanish\",\n\t\tnative: \"Español\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"et\",\n\t\tname: \"Estonian\",\n\t\tnative: \"Eesti\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"eu\",\n\t\tname: \"Basque\",\n\t\tnative: \"Euskara\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"fa\",\n\t\tname: \"Persian\",\n\t\tnative: \"فارسی\",\n\t\trtl: 1,\n\t\twriting_system: \"Arabic\",\n\t},\n\t{\n\t\tcode: \"ff\",\n\t\tname: \"Peul\",\n\t\tnative: \"Fulfulde\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"fi\",\n\t\tname: \"Finnish\",\n\t\tnative: \"Suomi\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"fj\",\n\t\tname: \"Fijian\",\n\t\tnative: \"Na Vosa Vakaviti\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"fo\",\n\t\tname: \"Faroese\",\n\t\tnative: \"Føroyskt\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"fr\",\n\t\tname: \"French\",\n\t\tnative: \"Français\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"fy\",\n\t\tname: \"West Frisian\",\n\t\tnative: \"Frysk\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ga\",\n\t\tname: \"Irish\",\n\t\tnative: \"Gaeilge\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"gd\",\n\t\tname: \"Scottish Gaelic\",\n\t\tnative: \"Gàidhlig\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"gl\",\n\t\tname: \"Galician\",\n\t\tnative: \"Galego\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"gn\",\n\t\tname: \"Guarani\",\n\t\tnative: \"Avañe'ẽ\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"gu\",\n\t\tname: \"Gujarati\",\n\t\tnative: \"ગુજરાતી\",\n\t\twriting_system: \"Gujarati\",\n\t},\n\t{\n\t\tcode: \"gv\",\n\t\tname: \"Manx\",\n\t\tnative: \"Gaelg\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ha\",\n\t\tname: \"Hausa\",\n\t\tnative: \"هَوُسَ\",\n\t\trtl: 1,\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"he\",\n\t\tname: \"Hebrew\",\n\t\tnative: \"עברית\",\n\t\trtl: 1,\n\t\twriting_system: \"Hebrew\",\n\t},\n\t{\n\t\tcode: \"hi\",\n\t\tname: \"Hindi\",\n\t\tnative: \"हिन्दी\",\n\t\twriting_system: \"Devanagari\",\n\t},\n\t{\n\t\tcode: \"hr\",\n\t\tname: \"Croatian\",\n\t\tnative: \"Hrvatski\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ht\",\n\t\tname: \"Haitian\",\n\t\tnative: \"Krèyol ayisyen\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"hu\",\n\t\tname: \"Hungarian\",\n\t\tnative: \"Magyar\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"hy\",\n\t\tname: \"Armenian\",\n\t\tnative: \"Հայերեն\",\n\t\twriting_system: \"Armenian\",\n\t},\n\t{\n\t\tcode: \"id\",\n\t\tname: \"Indonesian\",\n\t\tnative: \"Bahasa Indonesia\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ig\",\n\t\tname: \"Igbo\",\n\t\tnative: \"Igbo\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"is\",\n\t\tname: \"Icelandic\",\n\t\tnative: \"Íslenska\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"it\",\n\t\tname: \"Italian\",\n\t\tnative: \"Italiano\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"iu\",\n\t\tname: \"Inuktitut\",\n\t\tnative: \"ᐃᓄᒃᑎᑐᑦ\",\n\t\twriting_system: \"Unified Canadian Aboriginal Syllabics\",\n\t},\n\t{\n\t\tcode: \"ja\",\n\t\tname: \"Japanese\",\n\t\tnative: \"日本語\",\n\t\twriting_system: \"Japanese\",\n\t},\n\t{\n\t\tcode: \"jv\",\n\t\tname: \"Javanese\",\n\t\tnative: \"Basa Jawa\",\n\t\twriting_system: \"Javanese\",\n\t},\n\t{\n\t\tcode: \"ka\",\n\t\tname: \"Georgian\",\n\t\tnative: \"ქართული\",\n\t\twriting_system: \"Georgian\",\n\t},\n\t{\n\t\tcode: \"kg\",\n\t\tname: \"Kongo\",\n\t\tnative: \"KiKongo\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ki\",\n\t\tname: \"Kikuyu\",\n\t\tnative: \"Gĩkũyũ\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"kj\",\n\t\tname: \"Kuanyama\",\n\t\tnative: \"Kuanyama\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"kk\",\n\t\tname: \"Kazakh\",\n\t\tnative: \"Қазақша\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"kl\",\n\t\tname: \"Greenlandic\",\n\t\tnative: \"Kalaallisut\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"km\",\n\t\tname: \"Cambodian\",\n\t\tnative: \"ភាសាខ្មែរ\",\n\t\twriting_system: \"Khmer\",\n\t},\n\t{\n\t\tcode: \"kn\",\n\t\tname: \"Kannada\",\n\t\tnative: \"ಕನ್ನಡ\",\n\t\twriting_system: \"Kannada\",\n\t},\n\t{\n\t\tcode: \"ko\",\n\t\tname: \"Korean\",\n\t\tnative: \"한국어\",\n\t\twriting_system: \"Korean\",\n\t},\n\t{\n\t\tcode: \"kr\",\n\t\tname: \"Kanuri\",\n\t\tnative: \"Kanuri\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ks\",\n\t\tname: \"Kashmiri\",\n\t\tnative: \"कश्मीरी / كشميري\",\n\t\trtl: 1,\n\t\twriting_system: \"Arabic\",\n\t},\n\t{\n\t\tcode: \"ku\",\n\t\tname: \"Kurdish\",\n\t\tnative: \"Kurdî / كوردی\",\n\t\trtl: 1,\n\t\twriting_system: \"Arabic\",\n\t},\n\t{\n\t\tcode: \"kv\",\n\t\tname: \"Komi\",\n\t\tnative: \"Коми\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"kw\",\n\t\tname: \"Cornish\",\n\t\tnative: \"Kernewek\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ky\",\n\t\tname: \"Kirghiz\",\n\t\tnative: \"Kırgızca / Кыргызча\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"la\",\n\t\tname: \"Latin\",\n\t\tnative: \"Latina\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"lb\",\n\t\tname: \"Luxembourgish\",\n\t\tnative: \"Lëtzebuergesch\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"lg\",\n\t\tname: \"Ganda\",\n\t\tnative: \"Luganda\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"li\",\n\t\tname: \"Limburgian\",\n\t\tnative: \"Limburgs\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ln\",\n\t\tname: \"Lingala\",\n\t\tnative: \"Lingála\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"lo\",\n\t\tname: \"Laotian\",\n\t\tnative: \"ລາວ / Pha xa lao\",\n\t\twriting_system: \"Lao\",\n\t},\n\t{\n\t\tcode: \"lt\",\n\t\tname: \"Lithuanian\",\n\t\tnative: \"Lietuvių\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"lu\",\n\t\tname: \"Luba-Katanga\",\n\t\tnative: \"Tshiluba\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"lv\",\n\t\tname: \"Latvian\",\n\t\tnative: \"Latviešu\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"mg\",\n\t\tname: \"Malagasy\",\n\t\tnative: \"Malagasy\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"mh\",\n\t\tname: \"Marshallese\",\n\t\tnative: \"Kajin Majel / Ebon\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"mi\",\n\t\tname: \"Maori\",\n\t\tnative: \"Māori\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"mk\",\n\t\tname: \"Macedonian\",\n\t\tnative: \"Македонски\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"ml\",\n\t\tname: \"Malayalam\",\n\t\tnative: \"മലയാളം\",\n\t\twriting_system: \"Malayalam\",\n\t},\n\t{\n\t\tcode: \"mn\",\n\t\tname: \"Mongolian\",\n\t\tnative: \"Монгол\",\n\t\twriting_system: \"Mongolian\",\n\t},\n\t{\n\t\tcode: \"mo\",\n\t\tname: \"Moldovan\",\n\t\tnative: \"Moldovenească\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"mr\",\n\t\tname: \"Marathi\",\n\t\tnative: \"मराठी\",\n\t\twriting_system: \"Devanagari\",\n\t},\n\t{\n\t\tcode: \"ms\",\n\t\tname: \"Malay\",\n\t\tnative: \"Bahasa Melayu\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"mt\",\n\t\tname: \"Maltese\",\n\t\tnative: \"bil-Malti\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"my\",\n\t\tname: \"Burmese\",\n\t\tnative: \"မြန်မာစာ\",\n\t\twriting_system: \"Myanmar\",\n\t},\n\t{\n\t\tcode: \"na\",\n\t\tname: \"Nauruan\",\n\t\tnative: \"Dorerin Naoero\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"nb\",\n\t\tname: \"Norwegian Bokmål\",\n\t\tnative: \"Norsk bokmål\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"nd\",\n\t\tname: \"North Ndebele\",\n\t\tnative: \"Sindebele\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ne\",\n\t\tname: \"Nepali\",\n\t\tnative: \"नेपाली\",\n\t\twriting_system: \"Devanagari\",\n\t},\n\t{\n\t\tcode: \"ng\",\n\t\tname: \"Ndonga\",\n\t\tnative: \"Oshiwambo\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"nl\",\n\t\tname: \"Dutch\",\n\t\tnative: \"Nederlands\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"nn\",\n\t\tname: \"Norwegian Nynorsk\",\n\t\tnative: \"Norsk nynorsk\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"no\",\n\t\tname: \"Norwegian\",\n\t\tnative: \"Norsk\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"nr\",\n\t\tname: \"South Ndebele\",\n\t\tnative: \"isiNdebele\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"nv\",\n\t\tname: \"Navajo\",\n\t\tnative: \"Diné bizaad\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ny\",\n\t\tname: \"Chichewa\",\n\t\tnative: \"Chi-Chewa\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"oc\",\n\t\tname: \"Occitan\",\n\t\tnative: \"Occitan\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"oj\",\n\t\tname: \"Ojibwa\",\n\t\tnative: \"ᐊᓂᔑᓈᐯᒧᐎᓐ / Anishinaabemowin\",\n\t\twriting_system: \"Unified Canadian Aboriginal Syllabics\",\n\t},\n\t{\n\t\tcode: \"om\",\n\t\tname: \"Oromo\",\n\t\tnative: \"Oromoo\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"or\",\n\t\tname: \"Oriya\",\n\t\tnative: \"ଓଡ଼ିଆ\",\n\t\twriting_system: \"Odia\",\n\t},\n\t{\n\t\tcode: \"os\",\n\t\tname: \"Ossetian / Ossetic\",\n\t\tnative: \"Иронау\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"pa\",\n\t\tname: \"Panjabi / Punjabi\",\n\t\tnative: \"ਪੰਜਾਬੀ / पंजाबी / پنجابي\",\n\t\twriting_system: \"Gurmukhi\",\n\t},\n\t{\n\t\tcode: \"pi\",\n\t\tname: \"Pali\",\n\t\tnative: \"Pāli / पाऴि\",\n\t\twriting_system: \"Devanagari\",\n\t},\n\t{\n\t\tcode: \"pl\",\n\t\tname: \"Polish\",\n\t\tnative: \"Polski\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ps\",\n\t\tname: \"Pashto\",\n\t\tnative: \"پښتو\",\n\t\trtl: 1,\n\t\twriting_system: \"Arabic\",\n\t},\n\t{\n\t\tcode: \"pt\",\n\t\tname: \"Portuguese\",\n\t\tnative: \"Português\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"qu\",\n\t\tname: \"Quechua\",\n\t\tnative: \"Runa Simi\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"rm\",\n\t\tname: \"Raeto Romance\",\n\t\tnative: \"Rumantsch\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"rn\",\n\t\tname: \"Kirundi\",\n\t\tnative: \"Kirundi\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ro\",\n\t\tname: \"Romanian\",\n\t\tnative: \"Română\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ru\",\n\t\tname: \"Russian\",\n\t\tnative: \"Русский\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"rw\",\n\t\tname: \"Rwandi\",\n\t\tnative: \"Kinyarwandi\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sa\",\n\t\tname: \"Sanskrit\",\n\t\tnative: \"संस्कृतम्\",\n\t\twriting_system: \"Devanagari\",\n\t},\n\t{\n\t\tcode: \"sc\",\n\t\tname: \"Sardinian\",\n\t\tnative: \"Sardu\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sd\",\n\t\tname: \"Sindhi\",\n\t\tnative: \"सिनधि\",\n\t\twriting_system: \"Arabic\",\n\t},\n\t{\n\t\tcode: \"se\",\n\t\tname: \"Northern Sami\",\n\t\tnative: \"Sámegiella\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sg\",\n\t\tname: \"Sango\",\n\t\tnative: \"Sängö\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sh\",\n\t\tname: \"Serbo-Croatian\",\n\t\tnative: \"Srpskohrvatski / Српскохрватски\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"si\",\n\t\tname: \"Sinhalese\",\n\t\tnative: \"සිංහල\",\n\t\twriting_system: \"Sinhala\",\n\t},\n\t{\n\t\tcode: \"sk\",\n\t\tname: \"Slovak\",\n\t\tnative: \"Slovenčina\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sl\",\n\t\tname: \"Slovenian\",\n\t\tnative: \"Slovenščina\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sm\",\n\t\tname: \"Samoan\",\n\t\tnative: \"Gagana Samoa\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sn\",\n\t\tname: \"Shona\",\n\t\tnative: \"chiShona\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"so\",\n\t\tname: \"Somalia\",\n\t\tnative: \"Soomaaliga\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sq\",\n\t\tname: \"Albanian\",\n\t\tnative: \"Shqip\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sr\",\n\t\tname: \"Serbian\",\n\t\tnative: \"Српски\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"ss\",\n\t\tname: \"Swati\",\n\t\tnative: \"SiSwati\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"st\",\n\t\tname: \"Southern Sotho\",\n\t\tnative: \"Sesotho\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"su\",\n\t\tname: \"Sundanese\",\n\t\tnative: \"Basa Sunda\",\n\t\twriting_system: \"Sundanese\",\n\t},\n\t{\n\t\tcode: \"sv\",\n\t\tname: \"Swedish\",\n\t\tnative: \"Svenska\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"sw\",\n\t\tname: \"Swahili\",\n\t\tnative: \"Kiswahili\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ta\",\n\t\tname: \"Tamil\",\n\t\tnative: \"தமிழ்\",\n\t\twriting_system: \"Tamil\",\n\t},\n\t{\n\t\tcode: \"te\",\n\t\tname: \"Telugu\",\n\t\tnative: \"తెలుగు\",\n\t\twriting_system: \"Telugu\",\n\t},\n\t{\n\t\tcode: \"tg\",\n\t\tname: \"Tajik\",\n\t\tnative: \"Тоҷикӣ\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"th\",\n\t\tname: \"Thai\",\n\t\tnative: \"ไทย / Phasa Thai\",\n\t\twriting_system: \"Thai\",\n\t},\n\t{\n\t\tcode: \"ti\",\n\t\tname: \"Tigrinya\",\n\t\tnative: \"ትግርኛ\",\n\t\twriting_system: \"Ethiopic\",\n\t},\n\t{\n\t\tcode: \"tk\",\n\t\tname: \"Turkmen\",\n\t\tnative: \"Туркмен / تركمن\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"tl\",\n\t\tname: \"Tagalog / Filipino\",\n\t\tnative: \"Tagalog\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"tn\",\n\t\tname: \"Tswana\",\n\t\tnative: \"Setswana\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"to\",\n\t\tname: \"Tonga\",\n\t\tnative: \"Lea Faka-Tonga\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"tr\",\n\t\tname: \"Turkish\",\n\t\tnative: \"Türkçe\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ts\",\n\t\tname: \"Tsonga\",\n\t\tnative: \"Xitsonga\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"tt\",\n\t\tname: \"Tatar\",\n\t\tnative: \"Tatarça\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"tw\",\n\t\tname: \"Twi\",\n\t\tnative: \"Twi\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ty\",\n\t\tname: \"Tahitian\",\n\t\tnative: \"Reo Mā`ohi\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ug\",\n\t\tname: \"Uyghur\",\n\t\tnative: \"Uyƣurqə / ئۇيغۇرچە\",\n\t\twriting_system: \"Arabic\",\n\t},\n\t{\n\t\tcode: \"uk\",\n\t\tname: \"Ukrainian\",\n\t\tnative: \"Українська\",\n\t\twriting_system: \"Cyrillic\",\n\t},\n\t{\n\t\tcode: \"ur\",\n\t\tname: \"Urdu\",\n\t\tnative: \"اردو\",\n\t\trtl: 1,\n\t\twriting_system: \"Arabic\",\n\t},\n\t{\n\t\tcode: \"uz\",\n\t\tname: \"Uzbek\",\n\t\tnative: \"Ўзбек\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"ve\",\n\t\tname: \"Venda\",\n\t\tnative: \"Tshivenḓa\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"vi\",\n\t\tname: \"Vietnamese\",\n\t\tnative: \"Tiếng Việt\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"vo\",\n\t\tname: \"Volapük\",\n\t\tnative: \"Volapük\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"wo\",\n\t\tname: \"Wolof\",\n\t\tnative: \"Wollof\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"xh\",\n\t\tname: \"Xhosa\",\n\t\tnative: \"isiXhosa\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"yi\",\n\t\tname: \"Yiddish\",\n\t\tnative: \"ייִדיש\",\n\t\trtl: 1,\n\t\twriting_system: \"Hebrew\",\n\t},\n\t{\n\t\tcode: \"yo\",\n\t\tname: \"Yoruba\",\n\t\tnative: \"Yorùbá\",\n\t\twriting_system: \"Latin\",\n\t},\n\t{\n\t\tcode: \"zh\",\n\t\tname: \"Chinese (Simplified)\",\n\t\tnative: \"简体中文\",\n\t\twriting_system: \"Simplied Han\",\n\t},\n\t{\n\t\tcode: \"zh-TW\",\n\t\tname: \"Chinese (Traditional)\",\n\t\tnative: \"繁體中文\",\n\t\twriting_system: \"Traditional Han\",\n\t},\n\t{\n\t\tcode: \"zu\",\n\t\tname: \"Zulu\",\n\t\tnative: \"isiZulu\",\n\t\twriting_system: \"Latin\",\n\t},\n];\n","import { languages } from \"../constants/languages\";\nfunction generateHashForContent(nodes: Node[]): string {\n\tconst content = nodes\n\t\t.map((node) => {\n\t\t\tif (node.nodeType === Node.TEXT_NODE) {\n\t\t\t\tconst parent = node.parentElement as HTMLElement | null;\n\t\t\t\t// Use original text if available, else current text\n\t\t\t\tif (parent && parent.hasAttribute(\"data-original-text\")) {\n\t\t\t\t\treturn parent\n\t\t\t\t\t\t.getAttribute(\"data-original-text\")\n\t\t\t\t\t\t?.replace(/\\s+/g, \" \")\n\t\t\t\t\t\t.trim();\n\t\t\t\t}\n\t\t\t\treturn node.textContent\n\t\t\t\t\t?.replace(/\\s+/g, \" \")\n\t\t\t\t\t.trim()\n\t\t\t\t\t.toLocaleLowerCase();\n\t\t\t}\n\t\t})\n\t\t.join(\" \")\n\t\t.trim();\n\n\tconst hash = murmurhash3_32_gc(content.toLowerCase(), 42).toString(16);\n\treturn hash;\n}\n\nfunction murmurhash3_32_gc(key: string, seed: number) {\n\tlet remainder = key.length & 3,\n\t\tbytes = key.length - remainder;\n\tlet h1 = seed,\n\t\tc1 = 0xcc9e2d51,\n\t\tc2 = 0x1b873593;\n\tlet i = 0;\n\n\twhile (i < bytes) {\n\t\tlet k1 =\n\t\t\t(key.charCodeAt(i) & 0xff) |\n\t\t\t((key.charCodeAt(++i) & 0xff) << 8) |\n\t\t\t((key.charCodeAt(++i) & 0xff) << 16) |\n\t\t\t((key.charCodeAt(++i) & 0xff) << 24);\n\t\t++i;\n\n\t\tk1 =\n\t\t\t((k1 & 0xffff) * c1 + ((((k1 >>> 16) * c1) & 0xffff) << 16)) & 0xffffffff;\n\t\tk1 = (k1 << 15) | (k1 >>> 17);\n\t\tk1 =\n\t\t\t((k1 & 0xffff) * c2 + ((((k1 >>> 16) * c2) & 0xffff) << 16)) & 0xffffffff;\n\n\t\th1 ^= k1;\n\t\th1 = (h1 << 13) | (h1 >>> 19);\n\t\tconst h1b =\n\t\t\t((h1 & 0xffff) * 5 + ((((h1 >>> 16) * 5) & 0xffff) << 16)) & 0xffffffff;\n\t\th1 = (h1b & 0xffff) + 0x6b64 + ((((h1b >>> 16) + 0xe654) & 0xffff) << 16);\n\t}\n\n\tlet k1 = 0;\n\n\tswitch (remainder) {\n\t\t//@ts-expect-error - this is a valid case\n\t\tcase 3:\n\t\t\tk1 ^= key.charCodeAt(i + 2) << 16;\n\t\t//@ts-expect-error - this is a valid case\n\t\tcase 2:\n\t\t\tk1 ^= key.charCodeAt(i + 1) << 8;\n\t\tcase 1:\n\t\t\tk1 ^= key.charCodeAt(i);\n\t\t\tk1 =\n\t\t\t\t((k1 & 0xffff) * c1 + ((((k1 >>> 16) * c1) & 0xffff) << 16)) &\n\t\t\t\t0xffffffff;\n\t\t\tk1 = (k1 << 15) | (k1 >>> 17);\n\t\t\tk1 =\n\t\t\t\t((k1 & 0xffff) * c2 + ((((k1 >>> 16) * c2) & 0xffff) << 16)) &\n\t\t\t\t0xffffffff;\n\t\t\th1 ^= k1;\n\t}\n\n\th1 ^= key.length;\n\th1 ^= h1 >>> 16;\n\th1 =\n\t\t((h1 & 0xffff) * 0x85ebca6b +\n\t\t\t((((h1 >>> 16) * 0x85ebca6b) & 0xffff) << 16)) &\n\t\t0xffffffff;\n\th1 ^= h1 >>> 13;\n\th1 =\n\t\t((h1 & 0xffff) * 0xc2b2ae35 +\n\t\t\t((((h1 >>> 16) * 0xc2b2ae35) & 0xffff) << 16)) &\n\t\t0xffffffff;\n\th1 ^= h1 >>> 16;\n\n\treturn h1 >>> 0;\n}\n\nfunction getVisibleTextContent(element: HTMLElement): string {\n\t// Get all child text nodes that are not inside .sr-only or [aria-hidden=\"true\"]\n\tlet text = \"\";\n\telement.childNodes.forEach((node) => {\n\t\tif (\n\t\t\tnode.nodeType === Node.TEXT_NODE &&\n\t\t\t!(\n\t\t\t\telement.classList.contains(\"sr-only\") ||\n\t\t\t\telement.getAttribute(\"aria-hidden\") === \"true\"\n\t\t\t)\n\t\t) {\n\t\t\ttext += node.textContent;\n\t\t}\n\t\tif (\n\t\t\tnode.nodeType === Node.ELEMENT_NODE &&\n\t\t\t!(node as HTMLElement).classList.contains(\"sr-only\") &&\n\t\t\t(node as HTMLElement).getAttribute(\"aria-hidden\") !== \"true\"\n\t\t) {\n\t\t\ttext += getVisibleTextContent(node as HTMLElement);\n\t\t}\n\t});\n\treturn text.trim();\n}\n\nconst removeEmojis = (text: string) =>\n\ttext.replace(/[\\p{Emoji_Presentation}\\p{Extended_Pictographic}]/gu, \"\");\n\nconst getUserLanguage = () => {\n\tconst userLanguages = window.navigator.languages;\n\tconst userLanguage = languages.find((lang) =>\n\t\tuserLanguages.includes(lang.code),\n\t);\n\treturn userLanguage?.code || \"en\";\n};\n\nexport {\n\tgenerateHashForContent,\n\tgetVisibleTextContent,\n\tremoveEmojis,\n\tgetUserLanguage,\n};\n","// type TreeWalkerFilter = (node: Node) => number\n\ninterface NodeProcessor {\n\tacceptNode(node: Node): number;\n}\n\nimport { removeEmojis } from \"../../utils/utils\";\n\nexport class DocumentNavigator {\n\t/**\n\t * Retrieves text nodes eligible for translation from the document\n\t * @returns Collection of text nodes ready for translation\n\t */\n\tstatic findTranslatableContent(): Text[] {\n\t\t// Skip during server-side rendering\n\t\tif (typeof window === \"undefined\") {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst validator: NodeProcessor = {\n\t\t\tacceptNode(node: Node): number {\n\t\t\t\tif (node.nodeType !== Node.TEXT_NODE) {\n\t\t\t\t\t// Log non-text nodes\n\t\t\t\t\treturn NodeFilter.FILTER_REJECT;\n\t\t\t\t}\n\n\t\t\t\tconst container = (node as Text).parentElement;\n\t\t\t\tif (!container) {\n\t\t\t\t\treturn NodeFilter.FILTER_REJECT;\n\t\t\t\t}\n\n\t\t\t\t// Skip if any ancestor has aria-hidden=\"true\"\n\t\t\t\tif (container.closest('[aria-hidden=\"true\"]')) {\n\t\t\t\t\treturn NodeFilter.FILTER_REJECT;\n\t\t\t\t}\n\n\t\t\t\t// // check if the classname is sr-only\n\t\t\t\tif (container.classList.contains(\"sr-only\")) {\n\t\t\t\t\treturn NodeFilter.FILTER_REJECT;\n\t\t\t\t}\n\n\t\t\t\tconst shouldSkip =\n\t\t\t\t\tcontainer.closest(\"script, style, code\") !== null ||\n\t\t\t\t\tcontainer.closest(\"next-route-announcer\") !== null ||\n\t\t\t\t\tcontainer.closest(\".jigts-translation-widget\") !== null ||\n\t\t\t\t\tcontainer.closest(\".jigts-widget-trigger\") !== null ||\n\t\t\t\t\tcontainer.closest(\".jigts-widget-dropdown\") !== null ||\n\t\t\t\t\tcontainer.closest(\".notranslate\") !== null ||\n\t\t\t\t\t!node.textContent?.trim();\n\t\t\t\treturn shouldSkip ? NodeFilter.FILTER_REJECT : NodeFilter.FILTER_ACCEPT;\n\t\t\t},\n\t\t};\n\n\t\tconst navigator = document.createTreeWalker(\n\t\t\tdocument.body,\n\t\t\tNodeFilter.SHOW_TEXT,\n\t\t\tvalidator,\n\t\t);\n\n\t\tconst results: Text[] = [];\n\t\tlet currentNode: Node | null;\n\n\t\twhile ((currentNode = navigator.nextNode())) {\n\t\t\tif (currentNode.nodeType === Node.TEXT_NODE) {\n\t\t\t\tlet text = currentNode.textContent?.trim() || \"\";\n\t\t\t\tconst parentElement = currentNode.parentElement;\n\t\t\t\tif (parentElement) {\n\t\t\t\t\tconst originalText = parentElement.getAttribute(\"data-original-text\");\n\t\t\t\t\tif (originalText) {\n\t\t\t\t\t\ttext = originalText;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * Skip the content if\n\t\t\t\t * 1. the content if empty\n\t\t\t\t * 2. the content is only one character in length\n\t\t\t\t * 3. the content is only an emoji\n\t\t\t\t */\n\t\t\t\tconst textWithoutEmojis = removeEmojis(text);\n\t\t\t\tif (\n\t\t\t\t\ttext.length === 0 ||\n\t\t\t\t\ttext.length === 1 ||\n\t\t\t\t\ttextWithoutEmojis.length === 0\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tresults.push(currentNode as Text);\n\t\t\t}\n\t\t}\n\n\t\treturn results;\n\t}\n\n\t/**\n\t * Divides a collection into smaller groups\n\t * @param items Collection to divide\n\t * @param groupSize Maximum size of each group\n\t * @returns Array of item groups\n\t */\n\tstatic divideIntoGroups<T>(items: T[], groupSize: number): T[][] {\n\t\tconst groups: T[][] = [];\n\n\t\tfor (let i = 0; i < items.length; i += groupSize) {\n\t\t\tgroups.push(items.slice(i, i + groupSize));\n\t\t}\n\n\t\treturn groups;\n\t}\n\n\t/**\n\t * Determines if a node contains translatable text\n\t * @param node Node to evaluate\n\t * @returns Whether the node contains translatable content\n\t */\n\tstatic containsTranslatableContent(node: Node): node is Text {\n\t\tif (node.nodeType !== Node.TEXT_NODE) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst container = node.parentElement;\n\t\tif (!container) {\n\t\t\treturn false;\n\t\t}\n\t\treturn !(\n\t\t\tcontainer.tagName === \"SCRIPT\" ||\n\t\t\tcontainer.tagName === \"STYLE\" ||\n\t\t\tcontainer.tagName === \"CODE\" ||\n\t\t\tcontainer.tagName === \"next-route-announcer\" ||\n\t\t\tcontainer.closest(\".translate-widget\") ||\n\t\t\tcontainer.closest(\".notranslate\") ||\n\t\t\t!node.textContent?.trim()\n\t\t);\n\t}\n\n\t/**\n\t * Retrieves the containing element of a node\n\t * @param node Node to find container for\n\t * @returns Containing element or null if none exists\n\t */\n\tstatic getContainer(node: Node): HTMLElement | null {\n\t\treturn node.parentElement;\n\t}\n}\n","export const MAX_CACHE_SIZE = 1000;\nexport const BATCH_SIZE = 10;\nexport const CACHE_PREFIX = \"jss-\";\n\nexport const DEFAULT_CONFIG = {\n\tpageLanguage: \"en\",\n\tautoDetectLanguage: false,\n\tposition: \"top-right\" as const,\n};\n","// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.5\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n} else if( typeof angular !== 'undefined' && angular != null ) {\n  angular.module('LZString', [])\n  .factory('LZString', function () {\n    return LZString;\n  });\n}\n","import LZString from \"lz-string\";\n\nexport class LocalStorageWrapper {\n\tprivate prefix: string;\n\tprivate readonly COMPRESSION_THRESHOLD = 10000;\n\tprivate readonly COMPRESSION_MARKER = \"__COMPRESSED__\";\n\n\tconstructor(prefix = \"\") {\n\t\tthis.prefix = prefix;\n\t}\n\n\tgetKey(hash: string, url: string, targetLang: string): string {\n\t\t// get rid of query params\n\t\tconst urlWithoutQuery = url.split(\"?\")[0];\n\t\t// Only encode the URL, not the whole key\n\t\treturn `${hash}-${encodeURIComponent(urlWithoutQuery)}-${targetLang}`;\n\t}\n\n\tprivate shouldCompress(value: string): boolean {\n\t\treturn value.length > this.COMPRESSION_THRESHOLD;\n\t}\n\n\tprivate compress(value: string): string {\n\t\ttry {\n\t\t\treturn LZString.compressToBase64(value);\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Compression failed:\", error);\n\t\t\treturn value;\n\t\t}\n\t}\n\n\tprivate decompress(value: string): string {\n\t\ttry {\n\t\t\treturn LZString.decompressFromBase64(value) || value;\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Decompression failed:\", error);\n\t\t\treturn value;\n\t\t}\n\t}\n\n\tgetItem(key: string): any {\n\t\tconst prefixedKey = this.prefix + key;\n\t\tconst item = localStorage.getItem(prefixedKey);\n\t\tif (!item) return null;\n\n\t\ttry {\n\t\t\t// Check if the item is compressed\n\t\t\tconst decompressed = item.startsWith(this.COMPRESSION_MARKER)\n\t\t\t\t? this.decompress(item.slice(this.COMPRESSION_MARKER.length))\n\t\t\t\t: item;\n\t\t\treturn JSON.parse(decompressed);\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Error parsing cached item:\", e);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tsetItem(key: string, value: any): void {\n\t\tconst prefixedKey = this.prefix + key;\n\t\tconst stringified = JSON.stringify(value);\n\n\t\t// Use requestIdleCallback to defer compression if available\n\t\tconst storeValue = () => {\n\t\t\ttry {\n\t\t\t\tconst finalValue = this.shouldCompress(stringified)\n\t\t\t\t\t? `${this.COMPRESSION_MARKER}${this.compress(stringified)}`\n\t\t\t\t\t: stringified;\n\t\t\t\tlocalStorage.setItem(prefixedKey, finalValue);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\"Error storing item:\", error);\n\t\t\t\t// Fallback to storing uncompressed value\n\t\t\t\tlocalStorage.setItem(prefixedKey, stringified);\n\t\t\t}\n\t\t};\n\n\t\tif (typeof requestIdleCallback !== \"undefined\") {\n\t\t\trequestIdleCallback(() => storeValue());\n\t\t} else {\n\t\t\t// Fallback to setTimeout if requestIdleCallback is not available\n\t\t\tsetTimeout(storeValue, 0);\n\t\t}\n\t}\n\n\tremoveItem(key: string): void {\n\t\tconst prefixedKey = this.prefix + key;\n\t\tlocalStorage.removeItem(prefixedKey);\n\t}\n\n\tclear(): void {\n\t\tif (this.prefix) {\n\t\t\tfor (let key in localStorage) {\n\t\t\t\tif (key.startsWith(this.prefix)) {\n\t\t\t\t\tlocalStorage.removeItem(key);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tlocalStorage.clear();\n\t\t}\n\t}\n\n\tkey(index: number): string | null {\n\t\treturn localStorage.key(index);\n\t}\n\n\tget length(): number {\n\t\treturn localStorage.length;\n\t}\n}\n","import { TranslationService } from \"../lib/translation/index\";\nimport { DocumentNavigator } from \"../lib/dom\";\nimport { languages } from \"../constants/languages\";\nimport { BATCH_SIZE, DEFAULT_CONFIG } from \"../constants\";\nimport type { Language, TranslationConfig } from \"../types\";\nimport widgetTemplate from \"../templates/html/widget.html?raw\";\nimport {\n\tgenerateHashForContent,\n\tgetUserLanguage,\n\tremoveEmojis,\n} from \"../utils/utils\";\nimport { CACHE_PREFIX } from \"../constants\";\nimport { LocalStorageWrapper } from \"../lib/storage/localstorage\";\n// import emojiRegex from 'emoji-regex'\ninterface WidgetElements {\n\ttrigger: HTMLDivElement | null;\n\tdropdown: HTMLDivElement | null;\n\tsearchInput: HTMLInputElement | null;\n\tclearSearch: HTMLDivElement | null;\n\tlanguageItems: NodeListOf<HTMLDivElement> | null;\n\tloadingIndicator: HTMLDivElement | null;\n}\n\ninterface TranslationResult {\n\tsuccess: boolean;\n\ttargetLanguage: string;\n\ttranslatedNodes: number;\n\terror?: string;\n\tduration?: number;\n}\n\nexport class TranslationWidget {\n\tprivate config: Required<TranslationConfig>;\n\tprivate translationService: TranslationService;\n\tprivate currentLanguage: string;\n\tprivate widget: HTMLDivElement;\n\tprivate elements: WidgetElements;\n\tprivate autoDetectLanguage: boolean;\n\tprivate isTranslated: boolean = false;\n\tprivate userLanguage: string;\n\tprivate isTranslating: boolean = false;\n\tprivate observer: MutationObserver | null = null;\n\tprivate translationScheduled: boolean = false;\n\tprivate scheduleTimeout: number | null = null;\n\tprivate showUI = true;\n\tprivate lastTranslated: { url: string; lang: string; hash: string } | null = null;\n\tprivate static instance: TranslationWidget | null = null;\n\tprivate currentTranslationPromise: Promise<void> | null = null;\n\tprivate lastRequestedLanguage: string | null = null;\n\tprivate translationRequestId: number = 0;\n\n\tconstructor(publicKey: string, config: Partial<TranslationConfig> = {}) {\n\t\tconst allowedPositions = [\n\t\t\t\"top-right\",\n\t\t\t\"top-left\",\n\t\t\t\"bottom-left\",\n\t\t\t\"bottom-right\",\n\t\t] as const;\n\t\tlet safeConfig = { ...DEFAULT_CONFIG, ...config };\n\t\tif (\n\t\t\tsafeConfig.position &&\n\t\t\t!allowedPositions.includes(safeConfig.position)\n\t\t) {\n\t\t\tconsole.warn(\n\t\t\t\t`Invalid position '${safeConfig.position}' passed to TranslationWidget. Falling back to 'top-right'.`,\n\t\t\t);\n\t\t\tsafeConfig.position = \"top-right\";\n\t\t}\n\t\tthis.config = safeConfig as Required<TranslationConfig>;\n\n\t\tif (!publicKey) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Public key is required to initialize the translation widget\",\n\t\t\t);\n\t\t}\n\n\t\tif (publicKey.startsWith(\"sk_\")) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Please use public api key for security reasons. You can get one from https://jigsawstack.com\",\n\t\t\t);\n\t\t}\n\n\t\tif (!publicKey.startsWith(\"pk_\")) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Please use proper api key. You can get one from https://jigsawstack.com\",\n\t\t\t);\n\t\t}\n\n\t\tthis.translationService = new TranslationService(publicKey);\n\t\tthis.autoDetectLanguage = this.config.autoDetectLanguage || false;\n\t\tthis.currentLanguage = this.config.pageLanguage;\n\t\tthis.userLanguage = getUserLanguage();\n\t\tthis.widget = document.createElement(\"div\");\n\t\tthis.showUI = this.config.showUI ?? true;\n\t\tthis.elements = {\n\t\t\ttrigger: null,\n\t\t\tdropdown: null,\n\t\t\tsearchInput: null,\n\t\t\tclearSearch: null,\n\t\t\tlanguageItems: null,\n\t\t\tloadingIndicator: null,\n\t\t};\n\t\tthis.initialize();\n\t\tTranslationWidget.instance = this;\n\t}\n\n\tprivate initialize(): void {\n\t\tif (!this.validateConfig()) return;\n\n\t\t// Get language from URL parameter\n\n\t\t// Translation Language Preference Checks \n\n\t\t// CASE 1: URL Parameter\n\t\tconst urlLang = this.getUrlParameter(\"lang\");\n\n\n\t\tlet initialLang = this.config.pageLanguage;\n\n\t\t// Priority 1: URL Parameter\n\t\tif (urlLang) {\n\t\t\tconst supportedLang = languages.find((lang) => lang.code === urlLang);\n\t\t\tif (supportedLang) {\n\t\t\t\tinitialLang = urlLang;\n\t\t\t}\n\t\t} else if (localStorage.getItem(\"jss-pref\")) {\n\t\t\tinitialLang = localStorage.getItem(\"jss-pref\") as string;\n\t\t} else if (this.autoDetectLanguage) {\n\t\t\tinitialLang = this.userLanguage;\n\t\t} else if (!this.config.pageLanguage) {\n\t\t\tconst htmlTag = document.querySelector(\"html\");\n\t\t\tif (htmlTag && htmlTag.getAttribute(\"lang\")) {\n\t\t\t\tinitialLang = htmlTag.getAttribute(\"lang\") as string;\n\t\t\t} else {\n\t\t\t\tinitialLang = \"en\";\n\t\t\t}\n\t\t}\n\n\n\t\tthis.currentLanguage = initialLang;\n\t\tif (this.showUI) {\n\t\t\tthis.createWidget();\n\t\t\t// Update icon if not default language\n\t\t\tconst triggerIcon = this.elements.trigger?.querySelector(\n\t\t\t\t\".jigts-trigger-icon\",\n\t\t\t);\n\t\t\tif (triggerIcon && this.currentLanguage !== this.config.pageLanguage) {\n\t\t\t\t// Find the language name\n\t\t\t\tconst langObj = languages.find(\n\t\t\t\t\t(lang) => lang.code === this.currentLanguage,\n\t\t\t\t);\n\t\t\t\tconst langName = langObj\n\t\t\t\t\t? langObj.name\n\t\t\t\t\t: this.currentLanguage.toUpperCase();\n\t\t\t\ttriggerIcon.innerHTML = `<span class=\\\"jigts-lang-code\\\">${this.currentLanguage.toUpperCase()}</span><span class=\\\"jigts-lang-name\\\">${langName}</span>`;\n\t\t\t}\n\t\t\tthis.setupEventListeners();\n\t\t\tthis.setupURLObserver();\n\t\t\tthis.setupContentObserver();\n\t\t}\n\t\t// Trigger translation immediately if language is different from page language\n\t\tif (this.currentLanguage !== this.config.pageLanguage) {\n\t\t\tthis.translatePage(this.currentLanguage).catch((error) => {\n\t\t\t\tconsole.error(\"Initial translation error:\", error);\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate getUrlParameter(name: string): string | null {\n\t\tconst urlParams = new URLSearchParams(window.location.search);\n\t\treturn urlParams.get(name);\n\t}\n\n\tprivate setupContentObserver(): void {\n\t\tthis.observer = new MutationObserver((mutations) => {\n\t\t\tmutations.forEach((mutation) => {\n\t\t\t\tif (this.widget.contains(mutation.target)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tmutation.type === \"characterData\" ||\n\t\t\t\t\t(mutation.type === \"childList\" &&\n\t\t\t\t\t\tArray.from(mutation.addedNodes).some(\n\t\t\t\t\t\t\t(node) => node.nodeType === Node.TEXT_NODE,\n\t\t\t\t\t\t))\n\t\t\t\t) {\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (this.isTranslating) return;\n\t\t\tthis.scheduleTranslation();\n\t\t});\n\t\tthis.observeBody();\n\t}\n\n\tprivate observeBody() {\n\t\tthis.observer?.observe(document.body, {\n\t\t\tchildList: true,\n\t\t\tsubtree: true,\n\t\t\tattributes: true,\n\t\t\tcharacterData: true,\n\t\t});\n\t}\n\n\tprivate onUrlChange = () => {\n\t\tthis.scheduleTranslation();\n\t};\n\n\tprivate setupURLObserver(): void {\n\t\tconst historyMethods = [\"pushState\", \"replaceState\"] as const;\n\n\t\thistoryMethods.forEach((method) => {\n\t\t\tconst original = history[method];\n\t\t\thistory[method] = function (\n\t\t\t\tstate: any,\n\t\t\t\ttitle: string,\n\t\t\t\turl?: string | URL | null,\n\t\t\t) {\n\t\t\t\tconst result = original.call(this, state, title, url);\n\t\t\t\twindow.dispatchEvent(new Event(method));\n\t\t\t\treturn result;\n\t\t\t};\n\t\t\twindow.addEventListener(method, this.onUrlChange);\n\t\t});\n\n\t\t// Also listen for popstate events (browser back/forward)\n\t\twindow.addEventListener(\"popstate\", this.onUrlChange);\n\t}\n\n\tprivate validateConfig(): boolean {\n\t\tif (!this.translationService) {\n\t\t\tconsole.error(\n\t\t\t\t\"Translation service is required to initialize the translation widget\",\n\t\t\t);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate createWidget(): void {\n\t\tconst currentLanguageLabel = this.getCurrentLanguageLabel();\n\n\t\t// Create widget element\n\t\tthis.widget = document.createElement(\"div\");\n\t\tthis.widget.className = `jigts-translation-widget jigts-position-${this.config.position || \"top-right\"}`;\n\n\t\t// Apply theme colors if provided\n\t\tif (this.config.theme) {\n\t\t\tif (this.config.theme.baseColor) {\n\t\t\t\tthis.widget.style.setProperty(\n\t\t\t\t\t\"--jigts-custom-base-color\",\n\t\t\t\t\tthis.config.theme.baseColor,\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (this.config.theme.textColor) {\n\t\t\t\tthis.widget.style.setProperty(\n\t\t\t\t\t\"--jigts-custom-text-color\",\n\t\t\t\t\tthis.config.theme.textColor,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tdocument.body.appendChild(this.widget);\n\n\t\tthis.widget.innerHTML = this.createWidgetHTML(currentLanguageLabel);\n\n\t\t// Cache element references\n\t\tthis.elements = {\n\t\t\ttrigger: this.widget.querySelector<HTMLDivElement>(\n\t\t\t\t\".jigts-widget-trigger\",\n\t\t\t),\n\t\t\tdropdown: this.widget.querySelector<HTMLDivElement>(\n\t\t\t\t\".jigts-widget-dropdown\",\n\t\t\t),\n\t\t\tsearchInput: this.widget.querySelector<HTMLInputElement>(\n\t\t\t\t\".jigts-search-input\",\n\t\t\t),\n\t\t\tclearSearch: this.widget.querySelector<HTMLDivElement>(\n\t\t\t\t\".jigts-clear-search\",\n\t\t\t),\n\t\t\tlanguageItems: this.widget.querySelectorAll<HTMLDivElement>(\n\t\t\t\t\".jigts-language-item\",\n\t\t\t),\n\t\t\tloadingIndicator: this.widget.querySelector<HTMLDivElement>(\n\t\t\t\t\".jigts-loading-spinner\",\n\t\t\t),\n\t\t};\n\n\t\t// Initialize trigger text with fade-in class\n\t\tconst triggerSpan = this.elements.trigger?.querySelector(\"span\");\n\t\tif (triggerSpan) {\n\t\t\ttriggerSpan.classList.add(\"jigts-fade-in\");\n\t\t}\n\t}\n\n\tprivate getCurrentLanguageLabel(): string {\n\t\treturn (\n\t\t\tlanguages.find(\n\t\t\t\t(language: Language) => language.code === this.currentLanguage,\n\t\t\t)?.native || \"English\"\n\t\t);\n\t}\n\n\tprivate createWidgetHTML(currentLanguageLabel: string): string {\n\t\tconst languageOptions = this.createLanguageOptions();\n\t\tconst languageCount = languages.length;\n\t\treturn widgetTemplate\n\t\t\t.replace(\"{{languageOptions}}\", languageOptions)\n\t\t\t.replace(\"{{currentLanguageLabel}}\", currentLanguageLabel)\n\t\t\t.replace(\"{{languageCount}}\", languageCount.toString());\n\t}\n\n\tprivate createLanguageOptions(): string {\n\t\tconst currentLang = this.currentLanguage;\n\t\tconst currentLanguage = languages.find(\n\t\t\t(lang: Language) => lang.code === currentLang,\n\t\t);\n\t\tconst otherLanguages = languages\n\t\t\t.filter((lang: Language) => lang.code !== currentLang)\n\t\t\t.sort((a: Language, b: Language) => a.native.localeCompare(b.native));\n\n\t\tif (!currentLanguage) return \"\";\n\n\t\tconst createLanguageItem = (\n\t\t\tlang: Language,\n\t\t\tisSelected: boolean = false,\n\t\t) => `\n            <div class=\"jigts-language-item ${isSelected ? \"jigts-selected\" : \"\"}\" tabindex=\"0\" role=\"option\" aria-selected=\"${isSelected}\" data-language-code=\"${lang.code}\">\n                <div class=\"jigts-language-info\">\n                    <div class=\"jigts-language-main\">\n                        <span class=\"jigts-language-name\">${lang.name}</span>\n                        <div class=\"jigts-language-code\">${lang.code}</div>\n                    </div>\n                    <div class=\"jigts-language-details\">\n                        <span class=\"jigts-language-native\">${lang.native}</span>\n                    </div>\n                </div>\n                <svg class=\"jigts-check-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path>\n                </svg>\n            </div>\n        `;\n\n\t\treturn `\n            ${createLanguageItem(currentLanguage, true)}\n            ${otherLanguages.map((lang) => createLanguageItem(lang)).join(\"\")}\n        `;\n\t}\n\n\tprivate async updateTriggerText(newText: string): Promise<void> {\n\t\tconst triggerSpan = this.elements.trigger?.querySelector(\"span\");\n\t\tif (!triggerSpan) return;\n\n\t\t// Force a reflow to ensure the animation plays\n\t\ttriggerSpan.offsetHeight;\n\n\t\t// Start fade out\n\t\ttriggerSpan.classList.remove(\"jigts-fade-in\");\n\t\ttriggerSpan.classList.add(\"jigts-fade-out\");\n\n\t\t// Wait for fade out\n\t\tawait new Promise((resolve) => setTimeout(resolve, 300));\n\n\t\t// Update text\n\t\ttriggerSpan.textContent = newText;\n\n\t\t// Force a reflow\n\t\ttriggerSpan.offsetHeight;\n\n\t\t// Start fade in\n\t\ttriggerSpan.classList.remove(\"jigts-fade-out\");\n\t\ttriggerSpan.classList.add(\"jigts-fade-in\");\n\t}\n\n\tprivate getTextToTranslate(\n\t\tnode: Text,\n\t\tparent: HTMLElement,\n\t\ttargetLang: string,\n\t): string | null {\n\t\tif (!parent.hasAttribute(\"data-original-text\")) {\n\t\t\tconst originalText = node.textContent?.trim();\n\t\t\tif (originalText) {\n\t\t\t\tparent.setAttribute(\"data-translated-lang\", targetLang);\n\t\t\t\tparent.setAttribute(\"data-original-text\", originalText);\n\t\t\t\t// Store original font size if not already stored\n\t\t\t\tif (!parent.hasAttribute(\"data-original-font-size\")) {\n\t\t\t\t\tconst computedStyle = window.getComputedStyle(parent);\n\t\t\t\t\tparent.setAttribute(\n\t\t\t\t\t\t\"data-original-font-size\",\n\t\t\t\t\t\tcomputedStyle.fontSize,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn originalText;\n\t\t\t}\n\t\t} else {\n\t\t\tconst textToTranslate = node.textContent?.trim();\n\t\t\tif (this.currentLanguage !== \"en\" && targetLang !== \"en\") {\n\t\t\t\tparent.setAttribute(\"data-translated-lang\", targetLang);\n\t\t\t\treturn parent.getAttribute(\"data-original-text\");\n\t\t\t}\n\t\t\treturn textToTranslate || null;\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate calculateFontSize(\n\t\ttext: string,\n\t\toriginalFontSize: string,\n\t\toriginalText: string,\n\t): string {\n\t\tconst baseFontSize = 12; // Minimum font size in pixels\n\t\tconst maxFontSize = parseInt(originalFontSize); // Maximum font size is the original size\n\t\tconst textLength = text.length;\n\t\tconst originalLength = originalText.length;\n\n\t\t// Only scale down if translated text is longer than original\n\t\tif (textLength <= originalLength) {\n\t\t\treturn originalFontSize;\n\t\t}\n\n\t\t// Calculate font size based on text length\n\t\t// The longer the text, the smaller the font size\n\t\t// We use a logarithmic scale to make the reduction more gradual\n\t\tconst fontSize = Math.max(\n\t\t\tbaseFontSize,\n\t\t\tMath.min(maxFontSize, maxFontSize * (1 - Math.log(textLength) / 10)),\n\t\t);\n\n\t\treturn `${fontSize}px`;\n\t}\n\n\tprivate updateLoadingState(isLoading: boolean): void {\n\t\tconst triggerContent = this.elements.trigger?.querySelector<HTMLDivElement>(\n\t\t\t\".jigts-trigger-content\",\n\t\t);\n\t\tconst triggerLoading = this.elements.trigger?.querySelector<HTMLDivElement>(\n\t\t\t\".jigts-trigger-loading\",\n\t\t);\n\t\tif (triggerContent && triggerLoading) {\n\t\t\tif (isLoading) {\n\t\t\t\ttriggerContent.style.display = \"none\";\n\t\t\t\ttriggerLoading.style.display = \"flex\";\n\t\t\t} else {\n\t\t\t\ttriggerLoading.style.display = \"none\";\n\t\t\t\ttriggerContent.style.display = \"flex\";\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async translatePage(targetLang: string): Promise<void> {\n\t\t// Increment the request ID for each new translation\n\t\tconst requestId = ++this.translationRequestId;\n\t\tthis.lastRequestedLanguage = targetLang;\n\t\tthis.updateLoadingState(true);\n\t\t// If there's already a translation in progress, wait for it\n\t\tif (this.currentTranslationPromise) {\n\t\t\tawait this.currentTranslationPromise;\n\t\t}\n\t\t// If target language is the default page language, restore original text\n\t\tif (targetLang === this.config.pageLanguage) {\n\t\t\tthis.resetTranslations();\n\t\t\t// Only hide loader if this is the latest request\n\t\t\tif (requestId === this.translationRequestId) {\n\t\t\t\tthis.updateLoadingState(false);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t// Create a new promise for this translation\n\t\tthis.currentTranslationPromise = this._translatePage(targetLang);\n\t\ttry {\n\t\t\tawait this.currentTranslationPromise;\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Translation failed:\", error);\n\t\t\t// If translation fails, reset to default language\n\t\t\tthis.resetToDefaultLanguage();\n\t\t} finally {\n\t\t\t// Only hide loader if this is the latest request\n\t\t\tif (requestId === this.translationRequestId) {\n\t\t\t\tthis.currentTranslationPromise = null;\n\t\t\t\tthis.updateLoadingState(false);\n\t\t\t}\n\t\t}\n\t}\n\n\t resetToDefaultLanguage(): void {\n\t\tif( this.isTranslating){\n\t\t\treturn;\n\t\t}\n\t\t// Reset translations\n\t\tthis.resetTranslations();\n\n\t\t// Update language states\n\t\tthis.lastRequestedLanguage = this.config.pageLanguage;\n\t\tthis.currentLanguage = this.config.pageLanguage;\n\n\t\t// Update UI\n\t\tconst languageItems = this.widget.querySelectorAll<HTMLElement>(\n\t\t\t\".jigts-language-item\",\n\t\t);\n\t\tlanguageItems.forEach((item) => {\n\t\t\tconst isSelected =\n\t\t\t\titem.getAttribute(\"data-language-code\") === this.config.pageLanguage;\n\t\t\titem.classList.toggle(\"jigts-selected\", isSelected);\n\t\t\titem.setAttribute(\"aria-selected\", isSelected.toString());\n\t\t});\n\n\t\t// Update localStorage preference to original language\n\t\tconsole.log(\"resetToDefaultLanguage\", this.config.pageLanguage);\n\t\tlocalStorage.setItem(\"jss-pref\", this.config.pageLanguage);\n\n\t\t// Update trigger icon\n\t\tconst triggerIcon = this.elements.trigger?.querySelector(\n\t\t\t\".jigts-trigger-icon\",\n\t\t);\n\t\tif (triggerIcon) {\n\t\t\ttriggerIcon.innerHTML = this.getLanguageSVG();\n\t\t}\n\n\t\t// Update translation state\n\t\tthis.isTranslated = false;\n\t\tthis.updateResetButtonVisibility();\n\t}\n\n\tprivate async _translatePage(targetLang: string): Promise<void> {\n\t\tthis.isTranslating = true;\n\t\tthis.observer?.disconnect(); // Pause observing during translation\n\t\ttry {\n\t\t\tconst nodes = DocumentNavigator.findTranslatableContent();\n\t\t\tconst batches = DocumentNavigator.divideIntoGroups(nodes, BATCH_SIZE);\n\n\t\t\tconst cache = new LocalStorageWrapper(CACHE_PREFIX);\n\t\t\tlet hash = generateHashForContent(nodes);\n\t\t\t// Store all nodes and their corresponding texts for each batch\n\t\t\tconst allBatchNodes: Node[][] = [];\n\t\t\tconst allBatchTexts: string[][] = [];\n\n\t\t\t// Prepare batches\n\t\t\tbatches.forEach((batch) => {\n\t\t\t\tconst textsToTranslate: string[] = [];\n\t\t\t\tconst batchNodes: Node[] = [];\n\t\t\t\tbatch.forEach((node: Node) => {\n\t\t\t\t\tif (node.nodeType !== Node.TEXT_NODE) return;\n\t\t\t\t\tconst parent = node.parentElement;\n\t\t\t\t\tif (!parent) return;\n\n\t\t\t\t\tconst translatedLang = parent.getAttribute(\"data-translated-lang\");\n\n\t\t\t\t\t// Skip if parent already has data-original-text and we're not translating to English\n\t\t\t\t\tif (\n\t\t\t\t\t\tparent.hasAttribute(\"data-original-text\") &&\n\t\t\t\t\t\ttargetLang === translatedLang\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet textToTranslate = this.getTextToTranslate(\n\t\t\t\t\t\tnode as Text,\n\t\t\t\t\t\tparent,\n\t\t\t\t\t\ttargetLang,\n\t\t\t\t\t);\n\t\t\t\t\ttextToTranslate = removeEmojis(textToTranslate || \"\");\n\t\t\t\t\tif (textToTranslate.length === 0 || textToTranslate.length === 1) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (textToTranslate) {\n\t\t\t\t\t\ttextsToTranslate.push(textToTranslate.trim());\n\t\t\t\t\t\tbatchNodes.push(node);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tallBatchNodes.push(batchNodes);\n\t\t\t\tallBatchTexts.push(textsToTranslate);\n\t\t\t});\n\n\t\t\t// Only keep non-empty batches\n\t\t\tconst nonEmptyBatchNodes: Node[][] = [];\n\t\t\tconst nonEmptyBatchTexts: string[][] = [];\n\t\t\tallBatchTexts.forEach((texts, i) => {\n\t\t\t\tif (texts.length > 0) {\n\t\t\t\t\tnonEmptyBatchTexts.push(texts);\n\t\t\t\t\tnonEmptyBatchNodes.push(allBatchNodes[i]);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst key = cache.getKey(hash, window.location.href, targetLang);\n\t\t\tconst cachedTranslations = cache.getItem(key);\n\t\t\tif (cachedTranslations && cachedTranslations[0]) {\n\t\t\t\tconst fullTranslations = cachedTranslations[0];\n\t\t\t\t// Only update DOM if this is still the most recently requested language\n\t\t\t\tif (this.lastRequestedLanguage === targetLang) {\n\t\t\t\t\tnodes.forEach((node, idx) => {\n\t\t\t\t\t\tif (node.nodeType === Node.TEXT_NODE) {\n\t\t\t\t\t\t\tconst parent = node.parentElement;\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tconst originalText =\n\t\t\t\t\t\t\t\t\tparent.getAttribute(\"data-original-text\") || \"\";\n\t\t\t\t\t\t\t\tconst originalFontSize =\n\t\t\t\t\t\t\t\t\tparent.getAttribute(\"data-original-font-size\") || \"16px\";\n\t\t\t\t\t\t\t\tconst newFontSize = this.calculateFontSize(\n\t\t\t\t\t\t\t\t\tfullTranslations[idx],\n\t\t\t\t\t\t\t\t\toriginalFontSize,\n\t\t\t\t\t\t\t\t\toriginalText,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tparent.style.fontSize = newFontSize;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnode.textContent = fullTranslations[idx];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tthis.isTranslated = true;\n\t\t\t\t\tthis.updateResetButtonVisibility();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Send all batch requests in parallel\n\t\t\tconst allTranslatedTexts = await Promise.all(\n\t\t\t\tnonEmptyBatchTexts.map((texts) =>\n\t\t\t\t\tthis.translationService.translateBatchText(texts, targetLang),\n\t\t\t\t),\n\t\t\t);\n\n\t\t\tif (allTranslatedTexts.length === 0) {\n\t\t\t\tif (this.lastRequestedLanguage === targetLang) {\n\t\t\t\t\tthis.isTranslated = true;\n\t\t\t\t\tthis.updateResetButtonVisibility();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Check if all batches failed (returned original texts)\n\t\t\tconst allBatchesFailed = allTranslatedTexts.every(\n\t\t\t\t(translations, batchIndex) => {\n\t\t\t\t\tconst originalTexts = nonEmptyBatchTexts[batchIndex];\n\t\t\t\t\treturn translations.every(\n\t\t\t\t\t\t(translation, index) => translation === originalTexts[index],\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tif (allBatchesFailed) {\n\t\t\t\tconsole.warn(\"All translations failed, not caching results\");\n\t\t\t\tthrow new Error(\"All translation batches failed\");\n\t\t\t}\n\n\t\t\t// Build a full translation array for all nodes\n\t\t\tconst fullTranslations: string[] = [];\n\t\t\tnodes.forEach((node, nodeIdx) => {\n\t\t\t\tconst parent = node.parentElement as HTMLElement | null;\n\t\t\t\t// Check if this node was included in the API call\n\t\t\t\tconst batchIdx = nonEmptyBatchNodes.findIndex((batch) =>\n\t\t\t\t\tbatch.includes(node),\n\t\t\t\t);\n\t\t\t\tif (batchIdx !== -1) {\n\t\t\t\t\t// This node was translated in this batch\n\t\t\t\t\tconst textIdx = nonEmptyBatchNodes[batchIdx].indexOf(node);\n\t\t\t\t\tconst translatedText = allTranslatedTexts[batchIdx][textIdx];\n\t\t\t\t\tfullTranslations[nodeIdx] = translatedText;\n\n\t\t\t\t\tconsole.log(this.lastRequestedLanguage, targetLang);\n\t\t\t\t\t// Only update DOM if this is still the most recently requested language\n\t\t\t\t\tif (this.lastRequestedLanguage === targetLang) {\n\t\t\t\t\t\t// Apply font size adjustment\n\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\tconst originalText =\n\t\t\t\t\t\t\t\tparent.getAttribute(\"data-original-text\") || \"\";\n\t\t\t\t\t\t\tconst originalFontSize =\n\t\t\t\t\t\t\t\tparent.getAttribute(\"data-original-font-size\") || \"16px\";\n\t\t\t\t\t\t\tconst newFontSize = this.calculateFontSize(\n\t\t\t\t\t\t\t\ttranslatedText,\n\t\t\t\t\t\t\t\toriginalFontSize,\n\t\t\t\t\t\t\t\toriginalText,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tparent.style.fontSize = newFontSize;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnode.textContent = translatedText;\n\t\t\t\t\t}\n\t\t\t\t} else if (\n\t\t\t\t\tparent &&\n\t\t\t\t\tparent.getAttribute(\"data-translated-lang\") === targetLang\n\t\t\t\t) {\n\t\t\t\t\t// Already translated, use current text\n\t\t\t\t\tfullTranslations[nodeIdx] = node.textContent || \"\";\n\t\t\t\t} else {\n\t\t\t\t\tfullTranslations[nodeIdx] = node.textContent || \"\";\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Always cache the translations, even if they're not the most recent\n\t\t\tcache.setItem(key, [fullTranslations]);\n\n\t\t\t// Only update UI state if this is still the most recently requested language\n\t\t\tif (this.lastRequestedLanguage === targetLang) {\n\t\t\t\tthis.isTranslated = true;\n\t\t\t\tthis.updateResetButtonVisibility();\n\t\t\t}\n\t\t} finally {\n\t\t\tthis.isTranslating = false;\n\t\t\tthis.observeBody(); // Resume observing after translation\n\t\t}\n\t}\n\n\tprivate updateResetButtonVisibility(): void {\n\t\tconst resetButton = this.widget.querySelector<HTMLElement>(\n\t\t\t\".jigts-reset-option\",\n\t\t);\n\t\tif (resetButton) {\n\t\t\tresetButton.style.display = this.isTranslated ? \"flex\" : \"none\";\n\t\t}\n\t}\n\n\tprivate resetTranslations(): void {\n\t\t\n\t\tif (this.observer) {\n\t\t\tthis.observer.disconnect();\n\t\t}\n\t\tconst elements = document.querySelectorAll<HTMLElement>(\n\t\t\t\"[data-original-text]\",\n\t\t);\n\t\telements.forEach((element) => {\n\t\t\tconst textNodes = Array.from(element.childNodes).filter(\n\t\t\t\t(node): node is Text => node.nodeType === Node.TEXT_NODE,\n\t\t\t);\n\t\t\tif (textNodes.length > 0) {\n\t\t\t\tconst originalText = element.getAttribute(\"data-original-text\");\n\t\t\t\tif (originalText) {\n\t\t\t\t\ttextNodes[0].textContent = originalText;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Restore original font size\n\t\t\tconst originalFontSize = element.getAttribute(\"data-original-font-size\");\n\t\t\tif (originalFontSize) {\n\t\t\t\telement.style.fontSize = originalFontSize;\n\t\t\t}\n\t\t\telement.removeAttribute(\"data-original-text\");\n\t\t\telement.removeAttribute(\"data-translated-lang\");\n\t\t\telement.removeAttribute(\"data-original-font-size\");\n\t\t});\n\t\tthis.isTranslated = false;\n\n\t\tthis.currentLanguage = this.config.pageLanguage;\n\t\t// Update lastTranslated to reflect the reset state\n\t\tconst nodes = DocumentNavigator.findTranslatableContent();\n\t\tconst hash = generateHashForContent(nodes);\n\t\tthis.lastTranslated = {\n\t\t\turl: window.location.href,\n\t\t\tlang: this.config.pageLanguage,\n\t\t\thash,\n\t\t};\n\n\t\tthis.updateResetButtonVisibility();\n\t\tthis.observeBody(); // Reconnect observer\n\t}\n\n\tprivate adjustDropdownPosition(): void {\n\t\tconst { dropdown, trigger } = this.elements;\n\t\tif (!dropdown || !trigger) return;\n\n\t\tconst triggerRect = trigger.getBoundingClientRect();\n\t\tconst dropdownRect = dropdown.getBoundingClientRect();\n\t\tconst viewportWidth = window.innerWidth;\n\t\tconst viewportHeight = window.innerHeight;\n\n\t\tdropdown.style.top = \"\";\n\t\tdropdown.style.bottom = \"\";\n\t\tdropdown.style.left = \"\";\n\t\tdropdown.style.right = \"\";\n\t\tdropdown.style.transform = \"\";\n\n\t\tconst spaceBelow = viewportHeight - triggerRect.bottom;\n\t\tconst spaceAbove = triggerRect.top;\n\t\tconst spaceRight = viewportWidth - triggerRect.right;\n\t\tconst spaceLeft = triggerRect.left;\n\n\t\t// Determine vertical position\n\t\tif (spaceBelow < dropdownRect.height && spaceAbove > spaceBelow) {\n\t\t\tdropdown.style.bottom = \"100%\";\n\t\t\tdropdown.style.top = \"auto\";\n\t\t\tdropdown.style.marginBottom = \"0.5rem\";\n\t\t\tdropdown.style.marginTop = \"0\";\n\t\t} else {\n\t\t\tdropdown.style.top = \"100%\";\n\t\t\tdropdown.style.bottom = \"auto\";\n\t\t\tdropdown.style.marginTop = \"0.5rem\";\n\t\t\tdropdown.style.marginBottom = \"0\";\n\t\t}\n\n\t\t// Determine horizontal position\n\t\tif (spaceRight < dropdownRect.width && spaceLeft > spaceRight) {\n\t\t\tdropdown.style.right = \"0\";\n\t\t\tdropdown.style.left = \"auto\";\n\t\t} else {\n\t\t\tdropdown.style.left = \"0\";\n\t\t\tdropdown.style.right = \"auto\";\n\t\t}\n\n\t\tconst finalRect = dropdown.getBoundingClientRect();\n\n\t\tif (finalRect.right > viewportWidth) {\n\t\t\tdropdown.style.right = \"0\";\n\t\t\tdropdown.style.left = \"auto\";\n\t\t}\n\n\t\tif (finalRect.left < 0) {\n\t\t\tdropdown.style.left = \"0\";\n\t\t\tdropdown.style.right = \"auto\";\n\t\t}\n\t}\n\n\tprivate setupEventListeners(): void {\n\t\tconst { trigger, dropdown, searchInput, clearSearch, languageItems } =\n\t\t\tthis.elements;\n\n\t\tif (\n\t\t\t!trigger ||\n\t\t\t!dropdown ||\n\t\t\t!searchInput ||\n\t\t\t!clearSearch ||\n\t\t\t!languageItems\n\t\t) {\n\t\t\tconsole.error(\"Failed to find required elements\");\n\t\t\treturn;\n\t\t}\n\n\t\t// Reset button functionality\n\t\tconst resetButton = this.widget.querySelector<HTMLElement>(\n\t\t\t\".jigts-reset-option\",\n\t\t);\n\t\tif (resetButton) {\n\t\t\tresetButton.addEventListener(\"click\", () => {\n\t\t\t\tif (this.isTranslating) return;\n\t\t\t\tthis.resetToDefaultLanguage();\n\t\t\t\tresetButton.classList.remove(\"jigts-active\");\n\t\t\t\tthis.isTranslated = false;\n\t\t\t\tthis.updateResetButtonVisibility();\n\t\t\t\t// Reset language selector to page language\n\t\t\t\tconst languageItems = this.widget.querySelectorAll<HTMLElement>(\n\t\t\t\t\t\".jigts-language-item\",\n\t\t\t\t);\n\t\t\t\tlanguageItems.forEach((item) => {\n\t\t\t\t\tconst isSelected =\n\t\t\t\t\t\titem.getAttribute(\"data-language-code\") ===\n\t\t\t\t\t\tthis.config.pageLanguage;\n\t\t\t\t\titem.classList.toggle(\"jigts-selected\", isSelected);\n\t\t\t\t\titem.setAttribute(\"aria-selected\", isSelected.toString());\n\t\t\t\t});\n\t\t\t\t// Restore SVG icon\n\t\t\t\tconst triggerIcon = this.elements.trigger?.querySelector(\n\t\t\t\t\t\".jigts-trigger-icon\",\n\t\t\t\t);\n\t\t\t\tif (triggerIcon) {\n\t\t\t\t\ttriggerIcon.innerHTML = this.getLanguageSVG();\n\t\t\t\t}\n\t\t\t\t// Close dropdown\n\t\t\t\tdropdown.classList.remove(\"jigts-open\");\n\t\t\t\ttrigger.setAttribute(\"aria-expanded\", \"false\");\n\t\t\t\t// Remove has-translation class\n\t\t\t\tconst triggerContent = trigger.querySelector<HTMLDivElement>(\n\t\t\t\t\t\".jigts-trigger-content\",\n\t\t\t\t);\n\t\t\t\tif (triggerContent)\n\t\t\t\t\ttriggerContent.classList.remove(\"jigts-has-translation\");\n\t\t\t});\n\t\t}\n\n\t\tthis.updateResetButtonVisibility();\n\n\t\ttrigger.addEventListener(\"click\", () => {\n\t\t\tdropdown.classList.toggle(\"jigts-open\");\n\t\t\tconst isOpen = dropdown.classList.contains(\"jigts-open\");\n\t\t\ttrigger.setAttribute(\"aria-expanded\", isOpen.toString());\n\t\t\tif (isOpen) {\n\t\t\t\tthis.adjustDropdownPosition();\n\t\t\t\tsearchInput.focus();\n\t\t\t}\n\t\t});\n\n\t\twindow.addEventListener(\"resize\", () => {\n\t\t\tif (dropdown.classList.contains(\"jigts-open\")) {\n\t\t\t\tthis.adjustDropdownPosition();\n\t\t\t}\n\t\t});\n\n\t\tdocument.addEventListener(\"click\", (e: MouseEvent) => {\n\t\t\tif (!(e.target as Element).closest(\".jigts-translation-widget\")) {\n\t\t\t\tif (dropdown.classList.contains(\"jigts-open\")) {\n\t\t\t\t\tdropdown.classList.add(\"jigts-closing\");\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tdropdown.classList.remove(\"jigts-open\", \"jigts-closing\");\n\t\t\t\t\t\ttrigger.setAttribute(\"aria-expanded\", \"false\");\n\t\t\t\t\t}, 300);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tsearchInput.addEventListener(\"input\", () => {\n\t\t\tconst searchTerm = searchInput.value.toLowerCase();\n\t\t\tconst hasValue = searchTerm.length > 0;\n\t\t\tclearSearch.classList.toggle(\"jigts-visible\", hasValue);\n\n\t\t\tconst items = this.widget.querySelectorAll<HTMLElement>(\n\t\t\t\t\".jigts-language-item\",\n\t\t\t);\n\t\t\tconst noResults =\n\t\t\t\tthis.widget.querySelector<HTMLElement>(\".jigts-no-results\");\n\t\t\tlet visibleCount = 0;\n\n\t\t\titems.forEach((item) => {\n\t\t\t\tconst name =\n\t\t\t\t\titem\n\t\t\t\t\t\t.querySelector(\".jigts-language-name\")\n\t\t\t\t\t\t?.textContent?.toLowerCase() || \"\";\n\t\t\t\tconst native =\n\t\t\t\t\titem\n\t\t\t\t\t\t.querySelector(\".jigts-language-native\")\n\t\t\t\t\t\t?.textContent?.toLowerCase() || \"\";\n\t\t\t\tconst code =\n\t\t\t\t\titem\n\t\t\t\t\t\t.querySelector(\".jigts-language-code\")\n\t\t\t\t\t\t?.textContent?.toLowerCase() || \"\";\n\t\t\t\tconst region =\n\t\t\t\t\titem\n\t\t\t\t\t\t.querySelector(\".jigts-language-region\")\n\t\t\t\t\t\t?.textContent?.toLowerCase() || \"\";\n\n\t\t\t\tconst matches =\n\t\t\t\t\tname.includes(searchTerm) ||\n\t\t\t\t\tnative.includes(searchTerm) ||\n\t\t\t\t\tcode.includes(searchTerm) ||\n\t\t\t\t\tregion.includes(searchTerm);\n\n\t\t\t\titem.style.display = matches ? \"\" : \"none\";\n\t\t\t\tif (matches) visibleCount++;\n\t\t\t});\n\n\t\t\tif (noResults) {\n\t\t\t\tnoResults.style.display = visibleCount === 0 ? \"flex\" : \"none\";\n\t\t\t}\n\t\t});\n\n\t\tclearSearch.addEventListener(\"click\", () => {\n\t\t\tsearchInput.value = \"\";\n\t\t\tclearSearch.classList.remove(\"jigts-visible\");\n\t\t\tsearchInput.focus();\n\n\t\t\tconst items = this.widget.querySelectorAll<HTMLElement>(\n\t\t\t\t\".jigts-language-item\",\n\t\t\t);\n\t\t\tconst noResults =\n\t\t\t\tthis.widget.querySelector<HTMLElement>(\".jigts-no-results\");\n\n\t\t\titems.forEach((item) => {\n\t\t\t\titem.style.display = \"\";\n\t\t\t});\n\n\t\t\tif (noResults) {\n\t\t\t\tnoResults.style.display = \"none\";\n\t\t\t}\n\t\t});\n\n\t\tlanguageItems.forEach((item) => {\n\t\t\titem.addEventListener(\"click\", async () => {\n\t\t\t\tlanguageItems.forEach((i) => {\n\t\t\t\t\ti.classList.remove(\"jigts-selected\");\n\t\t\t\t\ti.setAttribute(\"aria-selected\", \"false\");\n\t\t\t\t});\n\n\t\t\t\titem.classList.add(\"jigts-selected\");\n\t\t\t\titem.setAttribute(\"aria-selected\", \"true\");\n\n\t\t\t\tconst langName = item.querySelector(\n\t\t\t\t\t\".jigts-language-name\",\n\t\t\t\t)?.textContent;\n\t\t\t\tconst langCode = item.getAttribute(\"data-language-code\");\n\n\t\t\t\t// Close dropdown immediately\n\t\t\t\tdropdown.classList.remove(\"jigts-open\");\n\t\t\t\ttrigger.setAttribute(\"aria-expanded\", \"false\");\n\n\t\t\t\tif (langName) {\n\t\t\t\t\tawait this.updateTriggerText(langName);\n\t\t\t\t}\n\n\t\t\t\tif (langCode) {\n\t\t\t\t\tlocalStorage.setItem(\"jss-pref\", langCode);\n\t\t\t\t}\n\n\t\t\t\tconst triggerIcon = this.elements.trigger?.querySelector(\n\t\t\t\t\t\".jigts-trigger-icon\",\n\t\t\t\t);\n\t\t\t\tif (triggerIcon && langCode && langName) {\n\t\t\t\t\ttriggerIcon.innerHTML = `<span class=\\\"jigts-lang-code\\\">${langCode.toUpperCase()}</span><span class=\\\"jigts-lang-name\\\">${langName}</span>`;\n\t\t\t\t}\n\n\t\t\t\tconst triggerContent = trigger.querySelector<HTMLDivElement>(\n\t\t\t\t\t\".jigts-trigger-content\",\n\t\t\t\t);\n\t\t\t\tif (langCode && langCode !== this.currentLanguage) {\n\t\t\t\t\tif (triggerContent)\n\t\t\t\t\t\ttriggerContent.classList.add(\"jigts-has-translation\");\n\t\t\t\t\tconst triggerLoading = trigger.querySelector<HTMLDivElement>(\n\t\t\t\t\t\t\".jigts-trigger-loading\",\n\t\t\t\t\t);\n\t\t\t\t\tif (triggerContent && triggerLoading) {\n\t\t\t\t\t\ttriggerContent.style.display = \"none\";\n\t\t\t\t\t\ttriggerLoading.style.display = \"flex\";\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.translatePage(langCode);\n\t\t\t\t\t\tthis.currentLanguage = langCode;\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error(\"Translation error:\", error);\n\t\t\t\t\t\talert(\"An error occurred during translation. Please try again.\");\n\t\t\t\t\t}\n\t\t\t\t} else if (triggerContent) {\n\t\t\t\t\ttriggerContent.classList.remove(\"jigts-has-translation\");\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tdocument.addEventListener(\"keydown\", (e: KeyboardEvent) => {\n\t\t\tif (!dropdown.classList.contains(\"jigts-open\")) return;\n\n\t\t\tif (e.key === \"Escape\") {\n\t\t\t\tdropdown.classList.remove(\"jigts-open\");\n\t\t\t\ttrigger.setAttribute(\"aria-expanded\", \"false\");\n\t\t\t\ttrigger.focus();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate scheduleTranslation() {\n\t\tif (this.translationScheduled) return;\n\t\tconst currentUrl = window.location.href;\n\t\tconst currentLang = this.currentLanguage;\n\t\tconst nodes = DocumentNavigator.findTranslatableContent();\n\t\tconst hash = generateHashForContent(nodes);\n\t\tif (\n\t\t\tthis.lastTranslated &&\n\t\t\tthis.lastTranslated.url === currentUrl &&\n\t\t\tthis.lastTranslated.lang === currentLang &&\n\t\t\tthis.lastTranslated.hash === hash\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tthis.translationScheduled = true;\n\t\tif (this.scheduleTimeout) clearTimeout(this.scheduleTimeout);\n\t\tthis.scheduleTimeout = window.setTimeout(() => {\n\t\t\tthis.translationScheduled = false;\n\t\t\tif (this.currentLanguage !== this.config.pageLanguage) {\n\t\t\t\tthis.lastTranslated = { url: currentUrl, lang: currentLang, hash };\n\t\t\t\tconst triggerContent =\n\t\t\t\t\tthis.elements.trigger?.querySelector<HTMLDivElement>(\n\t\t\t\t\t\t\".jigts-trigger-content\",\n\t\t\t\t\t);\n\t\t\t\tconst triggerLoading =\n\t\t\t\t\tthis.elements.trigger?.querySelector<HTMLDivElement>(\n\t\t\t\t\t\t\".jigts-trigger-loading\",\n\t\t\t\t\t);\n\t\t\t\tif (triggerContent && triggerLoading) {\n\t\t\t\t\ttriggerContent.style.display = \"none\";\n\t\t\t\t\ttriggerLoading.style.display = \"flex\";\n\t\t\t\t}\n\t\t\t\tthis.translatePage(this.currentLanguage)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tconst languageItems = this.widget.querySelectorAll<HTMLElement>(\n\t\t\t\t\t\t\t\".jigts-language-item\",\n\t\t\t\t\t\t);\n\t\t\t\t\t\tlanguageItems.forEach((item) => {\n\t\t\t\t\t\t\tconst isSelected =\n\t\t\t\t\t\t\t\titem.getAttribute(\"data-language-code\") ===\n\t\t\t\t\t\t\t\tthis.currentLanguage;\n\t\t\t\t\t\t\titem.classList.toggle(\"jigts-selected\", isSelected);\n\t\t\t\t\t\t\titem.setAttribute(\"aria-selected\", isSelected.toString());\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tconsole.error(\"Auto-translation error:\", error);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}, 200);\n\t}\n\n\t/**\n\t * Public method to translate the page to a specific language\n\t * @param langCode The language code to translate to\n\t * @returns Promise that resolves when translation is complete\n\t */\n\tpublic async translateTo(langCode: string, onComplete?: (result: TranslationResult) => void, onError?: (error: Error) => void): Promise<TranslationResult> {\n\n\t\tconst startTime = Date.now();\n\t\tif (this.isTranslating) {\n\t\t\tconsole.warn(\"Translation already in progress\");\n\t\t\tonError?.(new Error(\"Translation already in progress\"));\n\t\t\treturn {\n\t\t\t\tsuccess: false,\n\t\t\t\ttargetLanguage: langCode,\n\t\t\t\ttranslatedNodes: 0,\n\t\t\t\terror: \"Translation already in progress\",\n\t\t\t\tduration: 0,\n\t\t\t};\n\t\t}\n\n\t\tconst supportedLang = languages.find((lang) => lang.code === langCode);\n\t\tif (!supportedLang) {\n\t\t\tonError?.(new Error(`Unsupported language code: ${langCode}`));\n\t\t\treturn {\n\t\t\t\tsuccess: false,\n\t\t\t\ttargetLanguage: langCode,\n\t\t\t\ttranslatedNodes: 0,\n\t\t\t\terror: `Unsupported language code: ${langCode}`,\n\t\t\t\tduration: 0,\n\t\t\t};\n\t\t}\n\n\t\tif (langCode === this.currentLanguage) {\n\t\t\tonComplete?.({\n\t\t\t\tsuccess: true,\n\t\t\t\ttargetLanguage: langCode,\n\t\t\t\ttranslatedNodes: 0,\n\t\t\t\tduration: 0,\n\t\t\t});\n\t\t\treturn {\n\t\t\t\tsuccess: true,\n\t\t\t\ttargetLanguage: langCode,\n\t\t\t\ttranslatedNodes: 0,\n\t\t\t\tduration: 0,\n\t\t\t};\n\t\t}\n\n\t\ttry {\n\t\t\tlocalStorage.setItem(\"jss-pref\", langCode);\n\t\t\tawait this.translatePage(langCode);\n\t\t\t// Update the current language\n\t\t\tthis.currentLanguage = langCode;\n\n\t\t\t// Update UI to reflect the selected language\n\t\t\tconst languageItems = this.widget.querySelectorAll<HTMLElement>(\".jigts-language-item\");\n\t\t\tfor (const item of languageItems) {\n\t\t\t\tconst isSelected = item.getAttribute(\"data-language-code\") === langCode;\n\t\t\t\titem.classList.toggle(\"jigts-selected\", isSelected);\n\t\t\t\titem.setAttribute(\"aria-selected\", isSelected.toString());\n\t\t\t}\n\n\t\t\t// Update trigger text\n\t\t\tconst triggerContent = this.elements.trigger?.querySelector<HTMLDivElement>(\".jigts-trigger-content\");\n\t\t\tif (triggerContent) {\n\t\t\t\ttriggerContent.classList.add(\"jigts-has-translation\");\n\t\t\t\tconst triggerIcon = triggerContent.querySelector(\".jigts-trigger-icon\");\n\t\t\t\tif (triggerIcon && supportedLang) {\n\t\t\t\t\ttriggerIcon.innerHTML = `<span class=\"jigts-lang-code\">${supportedLang.code.toUpperCase()}</span><span class=\"jigts-lang-name\">${supportedLang.name}</span>`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst endTime = Date.now();\n\t\t\tconst translatedNodes = document.querySelectorAll(\"[data-translated-lang]\").length;\n\t\t\tonComplete?.({\n\t\t\t\tsuccess: true,\n\t\t\t\ttargetLanguage: langCode,\n\t\t\t\ttranslatedNodes,\n\t\t\t\tduration: endTime - startTime,\n\t\t\t});\n\n\t\t\t// upate the localstroage pref\n\t\t\treturn {\n\t\t\t\tsuccess: true,\n\t\t\t\ttargetLanguage: langCode,\n\t\t\t\ttranslatedNodes,\n\t\t\t\tduration: endTime - startTime,\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tonError?.(error as Error);\n\t\t\treturn {\n\t\t\t\tsuccess: false,\n\t\t\t\ttargetLanguage: langCode,\n\t\t\t\ttranslatedNodes: 0,\n\t\t\t\terror: error instanceof Error ? error.message : \"Unknown error occurred\",\n\t\t\t\tduration: 0,\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Get the current instance of TranslationWidget\n\t * @returns The current TranslationWidget instance or null if not initialized\n\t */\n\tpublic static getInstance(): TranslationWidget | null {\n\t\treturn TranslationWidget.instance;\n\t}\n\n\t// Add this helper method to the class\n\tprivate getLanguageSVG(): string {\n\t\treturn `\\n            <svg class=\\\"jigts-languages-icon\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                    d=\\\"M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129\\\">\\n                </path>\\n            </svg>\\n        `;\n\t}\n}\n\n// Expose the translate function globally\ndeclare global {\n\tinterface Window {\n\t\tresetTranslation: (defaultLang: string, onComplete?: (result: Pick<TranslationResult, \"success\" | \"targetLanguage\">) => void, onError?: (error: Error) => void) => void;\n\t\ttranslate: (langCode: string, onComplete?: (result: TranslationResult) => void, onError?: (error: Error) => void) => Promise<TranslationResult>;\n\t}\n}\n\n\nif (typeof window !== \"undefined\") {\n\n\twindow.resetTranslation = (defaultLang: string, onComplete?: (result: Pick<TranslationResult, \"success\" | \"targetLanguage\">) => void, onError?: (error: Error) => void) => {\n\t\tconst instance = TranslationWidget.getInstance();\n\t\tif (!instance) {\n\t\t  return;\n\t\t}\t\n\t\ttry {\n\t\t  instance.resetToDefaultLanguage\t();\n\t\t  onComplete?.({\n\t\t\tsuccess: true,\n\t\t\ttargetLanguage: defaultLang,\n\t\t  });\n\t\t} catch (error) {\n\t\t  onError?.(error as Error);\n\t\t}\n\t  };\n\n\n\t// Add the global translate function\n\twindow.translate = async (langCode: string, onComplete?: (result: TranslationResult) => void, onError?: (error: Error) => void): Promise<TranslationResult> => {\n\t\tconst instance = TranslationWidget.getInstance();\n\t\tif (!instance) {\n\t\t\tonError?.(new Error(\"Translation widget not initialized\"));\n\t\t\treturn {\n\t\t\t\tsuccess: false,\n\t\t\t\ttargetLanguage: langCode,\n\t\t\t\ttranslatedNodes: 0,\n\t\t\t\terror: \"Translation widget not initialized\",\n\t\t\t\tduration: 0,\n\t\t\t};\n\t\t}\n\t\tconst startTime = Date.now();\n\t\ttry {\n\t\t\tconst result = await instance.translateTo(langCode, onComplete, onError);\n\t\t\tonComplete?.(result);\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\tonError?.(error as Error);\n\t\t\treturn {\n\t\t\t\tsuccess: false,\n\t\t\t\ttargetLanguage: langCode,\n\t\t\t\ttranslatedNodes: 0,\n\t\t\t\terror: error instanceof Error ? error.message : \"Unknown error occurred\",\n\t\t\t\tduration: Date.now() - startTime,\n\t\t\t};\n\t\t}\n\t};\n}","export default \"<!-- Widget Trigger Button -->\\n<div class=\\\"jigts-widget-trigger\\\" tabindex=\\\"0\\\" role=\\\"button\\\" aria-label=\\\"Open translation menu\\\" aria-expanded=\\\"false\\\">\\n    <!-- Normal State -->\\n    <div class=\\\"jigts-trigger-content\\\">\\n        <span class=\\\"jigts-trigger-icon\\\">\\n            <svg class=\\\"jigts-languages-icon\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                    d=\\\"M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129\\\">\\n                </path>\\n            </svg>\\n        </span>\\n    </div>\\n\\n    <!-- Loading State (hidden by default) -->\\n    <div class=\\\"jigts-trigger-loading\\\" style=\\\"display: none;\\\">\\n        <div class=\\\"jigts-loading-spinner\\\"></div>\\n    </div>\\n</div>\\n\\n<!-- Dropdown Menu -->\\n<div class=\\\"jigts-widget-dropdown\\\">\\n    <!-- Header -->\\n    <div class=\\\"jigts-dropdown-header\\\">\\n        <div class=\\\"jigts-dropdown-title\\\">\\n            <div class=\\\"jigts-title-left\\\">\\n                <svg class=\\\"jigts-languages-icon\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n                    <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                        d=\\\"M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129\\\">\\n                    </path>\\n                </svg>\\n                <span class=\\\"jigts-title-text\\\">Select Language</span>\\n            </div>\\n            <div class=\\\"jigts-language-count\\\">{{languageCount}} languages</div>\\n        </div>\\n\\n        <!-- Search Input -->\\n        <div class=\\\"jigts-search-container\\\">\\n            <svg class=\\\"jigts-search-icon\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                    d=\\\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\\\"></path>\\n            </svg>\\n            <input type=\\\"text\\\" class=\\\"jigts-search-input\\\" placeholder=\\\"Search languages...\\\" aria-label=\\\"Search languages\\\">\\n            <svg class=\\\"jigts-clear-search\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\" d=\\\"M6 18L18 6M6 6l12 12\\\">\\n                </path>\\n            </svg>\\n        </div>\\n    </div>\\n\\n    <!-- Reset Option -->\\n    <div class=\\\"jigts-reset-option\\\" tabindex=\\\"0\\\" role=\\\"button\\\" aria-label=\\\"Reset to original language\\\">\\n        <svg class=\\\"jigts-reset-icon\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n            <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                d=\\\"M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6\\\"></path>\\n        </svg>\\n        <div class=\\\"jigts-reset-text\\\">\\n            <span class=\\\"jigts-reset-title\\\">Original Language</span>\\n            <span class=\\\"jigts-reset-subtitle\\\">Reset translation</span>\\n        </div>\\n    </div>\\n\\n    <!-- Language List -->\\n    <div class=\\\"jigts-language-list\\\">\\n        {{languageOptions}}\\n        <div class=\\\"jigts-no-results\\\" style=\\\"display: none;\\\">\\n            <svg class=\\\"jigts-no-results-icon\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" viewBox=\\\"0 0 24 24\\\">\\n                <path stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\"\\n                    d=\\\"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\\\"></path>\\n            </svg>\\n            <span>No languages found</span>\\n        </div>\\n    </div>\\n</div>\"","import styles from './translation-widget.css?inline'\nimport { TranslationWidget } from './widget'\nimport type { TranslationConfig } from './types'\n\ndeclare global {\n    interface Window {\n        TranslationWidget: (\n            publicKey: string,\n            config?: TranslationConfig\n        ) => TranslationWidget\n    }\n}\n\nlet widgetInstance: TranslationWidget | undefined;\n\nconst initializeTranslationWidget = (\n    publicKey: string,\n    config?: TranslationConfig\n): TranslationWidget => {\n    if (typeof window === 'undefined') {\n        throw new Error(\n            'Translation widget can only be used in browser environment'\n        )\n    }\n\n    const initWidget = () => {\n        if (!widgetInstance) {\n            if (!document.querySelector('style[data-translation-widget]')) {\n                const style = document.createElement('style')\n                style.setAttribute('data-translation-widget', '')\n                style.textContent = styles\n                document.head.appendChild(style)\n            }\n            widgetInstance = new TranslationWidget(publicKey, config)\n        }\n        return widgetInstance;\n    }\n\n    if (document.readyState === 'loading') {\n        window.addEventListener('DOMContentLoaded', initWidget)\n        return undefined as any;\n    } else {\n        return initWidget()\n    }\n}\n\nexport default initializeTranslationWidget"],"names":["TranslationService","constructor","publicKey","__publicField","this","hits","misses","getCacheMetrics","cacheMetrics","translateBatchText","texts","targetLang","maxRetries","retryDelay","attempt","response","fetch","apiUrl","method","headers","body","JSON","stringify","text","target_language","ok","error","Error","statusText","status","result","json","Array","isArray","translated_text","console","Promise","res","setTimeout","languages","code","name","native","writing_system","rtl","generateHashForContent","nodes","key","seed","remainder","length","bytes","h1","c1","c2","i","k1","charCodeAt","h1b","murmurhash3_32_gc","map","node","nodeType","Node","TEXT_NODE","parent","parentElement","hasAttribute","_a","getAttribute","replace","trim","_b","textContent","toLocaleLowerCase","join","toLowerCase","toString","removeEmojis","DocumentNavigator","findTranslatableContent","window","validator","acceptNode","NodeFilter","FILTER_REJECT","container","closest","classList","contains","FILTER_ACCEPT","navigator","document","createTreeWalker","SHOW_TEXT","results","currentNode","nextNode","originalText","textWithoutEmojis","push","divideIntoGroups","items","groupSize","groups","slice","containsTranslatableContent","tagName","getContainer","DEFAULT_CONFIG","pageLanguage","autoDetectLanguage","position","LZString","f","String","fromCharCode","keyStrBase64","keyStrUriSafe","baseReverseDic","getBaseValue","alphabet","character","charAt","compressToBase64","input","_compress","a","decompressFromBase64","_decompress","index","compressToUTF16","decompressFromUTF16","compressed","compressToUint8Array","uncompressed","compress","buf","Uint8Array","TotalLen","current_value","decompressFromUint8Array","decompress","forEach","c","compressToEncodedURIComponent","decompressFromEncodedURIComponent","bitsPerChar","getCharFromInt","value","ii","context_dictionary","context_dictionaryToCreate","context_c","context_wc","context_w","context_enlargeIn","context_dictSize","context_numBits","context_data","context_data_val","context_data_position","Object","prototype","hasOwnProperty","call","Math","pow","resetValue","getNextValue","w","bits","resb","maxpower","power","dictionary","enlargeIn","dictSize","numBits","entry","data","val","module","exports","angular","factory","LocalStorageWrapper","prefix","getKey","hash","url","urlWithoutQuery","split","encodeURIComponent","shouldCompress","COMPRESSION_THRESHOLD","getItem","prefixedKey","item","localStorage","decompressed","startsWith","COMPRESSION_MARKER","parse","e","setItem","stringified","storeValue","finalValue","requestIdleCallback","removeItem","clear","_TranslationWidget","config","scheduleTranslation","safeConfig","includes","warn","translationService","currentLanguage","userLanguage","userLanguages","find","lang","getUserLanguage","widget","createElement","showUI","elements","trigger","dropdown","searchInput","clearSearch","languageItems","loadingIndicator","initialize","instance","validateConfig","urlLang","getUrlParameter","initialLang","htmlTag","querySelector","createWidget","triggerIcon","langObj","langName","toUpperCase","innerHTML","setupEventListeners","setupURLObserver","setupContentObserver","translatePage","catch","URLSearchParams","location","search","get","observer","MutationObserver","mutations","mutation","target","type","from","addedNodes","some","isTranslating","observeBody","observe","childList","subtree","attributes","characterData","original","history","state","title","dispatchEvent","Event","addEventListener","onUrlChange","currentLanguageLabel","getCurrentLanguageLabel","className","theme","baseColor","style","setProperty","textColor","appendChild","createWidgetHTML","querySelectorAll","triggerSpan","add","language","languageOptions","createLanguageOptions","languageCount","currentLang","otherLanguages","filter","sort","b","localeCompare","createLanguageItem","isSelected","updateTriggerText","newText","offsetHeight","remove","resolve","getTextToTranslate","textToTranslate","setAttribute","computedStyle","getComputedStyle","fontSize","calculateFontSize","originalFontSize","maxFontSize","parseInt","textLength","max","min","log","updateLoadingState","isLoading","triggerContent","triggerLoading","display","requestId","translationRequestId","lastRequestedLanguage","currentTranslationPromise","resetTranslations","_translatePage","resetToDefaultLanguage","toggle","getLanguageSVG","isTranslated","updateResetButtonVisibility","disconnect","batches","cache","allBatchNodes","allBatchTexts","batch","textsToTranslate","batchNodes","translatedLang","nonEmptyBatchNodes","nonEmptyBatchTexts","href","cachedTranslations","fullTranslations","idx","newFontSize","allTranslatedTexts","all","every","translations","batchIndex","originalTexts","translation","nodeIdx","batchIdx","findIndex","textIdx","indexOf","translatedText","resetButton","element","textNodes","childNodes","removeAttribute","lastTranslated","adjustDropdownPosition","triggerRect","getBoundingClientRect","dropdownRect","viewportWidth","innerWidth","viewportHeight","innerHeight","top","bottom","left","right","transform","spaceBelow","spaceAbove","spaceRight","spaceLeft","height","marginBottom","marginTop","width","finalRect","isOpen","focus","searchTerm","hasValue","noResults","visibleCount","_d","_c","_f","_e","region","_h","_g","matches","async","langCode","alert","translationScheduled","currentUrl","scheduleTimeout","clearTimeout","then","translateTo","onComplete","onError","startTime","Date","now","success","targetLanguage","translatedNodes","duration","supportedLang","endTime","message","getInstance","widgetInstance","TranslationWidget","resetTranslation","defaultLang","translate","initWidget","head","readyState"],"mappings":"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","x_google_ignoreList":[5]}